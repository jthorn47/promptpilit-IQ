import { serve } from "https://deno.land/std@0.190.0/http/server.ts";
import { Resend } from "npm:resend@2.0.0";

const resend = new Resend(Deno.env.get("RESEND_API_KEY"));

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers":
    "authorization, x-client-info, apikey, content-type",
};

interface ProposalNotificationRequest {
  companyName: string;
  repName: string;
  riskScore?: number;
  investmentAnalysis?: {
    currentAdminCost: number;
    easeworksAdminCost: number;
    projectedROI: number;
  };
  proposalId: string;
  submittedBy: string;
}

const handler = async (req: Request): Promise<Response> => {
  // Handle CORS preflight requests
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { 
      companyName, 
      repName, 
      riskScore, 
      investmentAnalysis, 
      proposalId,
      submittedBy 
    }: ProposalNotificationRequest = await req.json();

    // Format currency values
    const formatCurrency = (amount: number) => {
      return new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: 'USD'
      }).format(amount);
    };

    // Build email content
    const emailContent = `
      <h2>New Proposal Awaiting Review</h2>
      <p>A new proposal has been generated and requires admin approval.</p>
      
      <h3>Proposal Details:</h3>
      <ul>
        <li><strong>Company:</strong> ${companyName}</li>
        <li><strong>Generated by:</strong> ${repName}</li>
        <li><strong>Proposal ID:</strong> ${proposalId}</li>
        ${riskScore ? `<li><strong>Risk Score:</strong> ${riskScore}/100</li>` : ''}
      </ul>
      
      ${investmentAnalysis ? `
        <h3>Investment Analysis Snapshot:</h3>
        <ul>
          <li><strong>Current Admin Cost:</strong> ${formatCurrency(investmentAnalysis.currentAdminCost)}</li>
          <li><strong>EaseWorks Admin Cost:</strong> ${formatCurrency(investmentAnalysis.easeworksAdminCost)}</li>
          <li><strong>Projected ROI:</strong> ${investmentAnalysis.projectedROI}%</li>
        </ul>
      ` : ''}
      
      <p><strong>Action Required:</strong> Please review and approve this proposal in the admin dashboard.</p>
      
      <p>Best regards,<br>EaseWorks PropGEN System</p>
    `;

    const emailResponse = await resend.emails.send({
      from: "EaseWorks PropGEN <noreply@easeworks.com>",
      to: ["jeffrey@easeworks.com"],
      subject: `New Proposal Awaiting Review â€“ ${companyName}`,
      html: emailContent,
    });

    console.log("Proposal approval notification sent successfully:", emailResponse);

    return new Response(JSON.stringify({ 
      success: true, 
      emailId: emailResponse.data?.id 
    }), {
      status: 200,
      headers: {
        "Content-Type": "application/json",
        ...corsHeaders,
      },
    });
  } catch (error: any) {
    console.error("Error sending proposal approval notification:", error);
    return new Response(
      JSON.stringify({ 
        success: false, 
        error: error.message 
      }),
      {
        status: 500,
        headers: { "Content-Type": "application/json", ...corsHeaders },
      }
    );
  }
};

serve(handler);