export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  // Allows to automatically instanciate createClient with right options
  // instead of createClient<Database, { PostgrestVersion: 'XX' }>(URL, KEY)
  __InternalSupabase: {
    PostgrestVersion: "12.2.3 (519615d)"
  }
  public: {
    Tables: {
      ach_audit_logs: {
        Row: {
          action_details: Json | null
          action_type: string
          batch_id: string | null
          company_id: string | null
          created_at: string | null
          id: string
          ip_address: unknown | null
          performed_by: string | null
          resource_id: string | null
          resource_type: string
          user_agent: string | null
        }
        Insert: {
          action_details?: Json | null
          action_type: string
          batch_id?: string | null
          company_id?: string | null
          created_at?: string | null
          id?: string
          ip_address?: unknown | null
          performed_by?: string | null
          resource_id?: string | null
          resource_type: string
          user_agent?: string | null
        }
        Update: {
          action_details?: Json | null
          action_type?: string
          batch_id?: string | null
          company_id?: string | null
          created_at?: string | null
          id?: string
          ip_address?: unknown | null
          performed_by?: string | null
          resource_id?: string | null
          resource_type?: string
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ach_audit_logs_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "ach_batches"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "ach_audit_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      ach_batch_entries: {
        Row: {
          amount: number
          bank_account_id: string
          batch_id: string
          created_at: string | null
          employee_id: string
          id: string
          individual_name: string
          return_description: string | null
          return_reason_code: string | null
          status: string | null
          trace_number: string
          transaction_code: string
        }
        Insert: {
          amount: number
          bank_account_id: string
          batch_id: string
          created_at?: string | null
          employee_id: string
          id?: string
          individual_name: string
          return_description?: string | null
          return_reason_code?: string | null
          status?: string | null
          trace_number: string
          transaction_code: string
        }
        Update: {
          amount?: number
          bank_account_id?: string
          batch_id?: string
          created_at?: string | null
          employee_id?: string
          id?: string
          individual_name?: string
          return_description?: string | null
          return_reason_code?: string | null
          status?: string | null
          trace_number?: string
          transaction_code?: string
        }
        Relationships: [
          {
            foreignKeyName: "ach_batch_entries_bank_account_id_fkey"
            columns: ["bank_account_id"]
            isOneToOne: false
            referencedRelation: "employee_bank_accounts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "ach_batch_entries_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "ach_batches"
            referencedColumns: ["id"]
          },
        ]
      }
      ach_batches: {
        Row: {
          batch_description: string
          batch_number: number
          company_id: string
          created_at: string | null
          created_by: string | null
          cutoff_missed: boolean
          disbursement_batch_id: string | null
          effective_date: string
          entry_hash: number | null
          exported_at: string | null
          fallback_method: string | null
          file_name: string | null
          funding_confirmed: boolean
          generated_at: string | null
          id: string
          nacha_file_content: string | null
          notes: string | null
          status: string | null
          submitted_at: string | null
          total_credit_amount: number | null
          total_debit_amount: number | null
          total_entries: number | null
          updated_at: string | null
        }
        Insert: {
          batch_description?: string
          batch_number: number
          company_id: string
          created_at?: string | null
          created_by?: string | null
          cutoff_missed?: boolean
          disbursement_batch_id?: string | null
          effective_date: string
          entry_hash?: number | null
          exported_at?: string | null
          fallback_method?: string | null
          file_name?: string | null
          funding_confirmed?: boolean
          generated_at?: string | null
          id?: string
          nacha_file_content?: string | null
          notes?: string | null
          status?: string | null
          submitted_at?: string | null
          total_credit_amount?: number | null
          total_debit_amount?: number | null
          total_entries?: number | null
          updated_at?: string | null
        }
        Update: {
          batch_description?: string
          batch_number?: number
          company_id?: string
          created_at?: string | null
          created_by?: string | null
          cutoff_missed?: boolean
          disbursement_batch_id?: string | null
          effective_date?: string
          entry_hash?: number | null
          exported_at?: string | null
          fallback_method?: string | null
          file_name?: string | null
          funding_confirmed?: boolean
          generated_at?: string | null
          id?: string
          nacha_file_content?: string | null
          notes?: string | null
          status?: string | null
          submitted_at?: string | null
          total_credit_amount?: number | null
          total_debit_amount?: number | null
          total_entries?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ach_batches_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "ach_batches_disbursement_batch_id_fkey"
            columns: ["disbursement_batch_id"]
            isOneToOne: false
            referencedRelation: "disbursement_batches"
            referencedColumns: ["id"]
          },
        ]
      }
      achievement_definitions: {
        Row: {
          achievement_type: string
          badge_color: string | null
          created_at: string
          criteria: Json
          description: string | null
          icon: string | null
          id: string
          is_active: boolean
          name: string
          points: number
        }
        Insert: {
          achievement_type: string
          badge_color?: string | null
          created_at?: string
          criteria?: Json
          description?: string | null
          icon?: string | null
          id?: string
          is_active?: boolean
          name: string
          points?: number
        }
        Update: {
          achievement_type?: string
          badge_color?: string | null
          created_at?: string
          criteria?: Json
          description?: string | null
          icon?: string | null
          id?: string
          is_active?: boolean
          name?: string
          points?: number
        }
        Relationships: []
      }
      acknowledgment_documents: {
        Row: {
          created_at: string
          display_order: number | null
          document_name: string
          document_url: string | null
          id: string
          is_global: boolean | null
          is_required: boolean | null
          onboarding_config_id: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          display_order?: number | null
          document_name: string
          document_url?: string | null
          id?: string
          is_global?: boolean | null
          is_required?: boolean | null
          onboarding_config_id: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          display_order?: number | null
          document_name?: string
          document_url?: string | null
          id?: string
          is_global?: boolean | null
          is_required?: boolean | null
          onboarding_config_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "acknowledgment_documents_onboarding_config_id_fkey"
            columns: ["onboarding_config_id"]
            isOneToOne: false
            referencedRelation: "onboarding_configs"
            referencedColumns: ["id"]
          },
        ]
      }
      activities: {
        Row: {
          assigned_to: string
          client_type: string | null
          company_id: string | null
          completed_at: string | null
          contact_email: string | null
          contact_name: string | null
          created_at: string
          created_by: string
          deal_id: string | null
          description: string | null
          duration_minutes: number | null
          id: string
          lead_id: string | null
          next_steps: string | null
          outcome: string | null
          priority: string
          scheduled_at: string | null
          status: string
          subject: string
          type: string
          updated_at: string
        }
        Insert: {
          assigned_to: string
          client_type?: string | null
          company_id?: string | null
          completed_at?: string | null
          contact_email?: string | null
          contact_name?: string | null
          created_at?: string
          created_by: string
          deal_id?: string | null
          description?: string | null
          duration_minutes?: number | null
          id?: string
          lead_id?: string | null
          next_steps?: string | null
          outcome?: string | null
          priority?: string
          scheduled_at?: string | null
          status?: string
          subject: string
          type: string
          updated_at?: string
        }
        Update: {
          assigned_to?: string
          client_type?: string | null
          company_id?: string | null
          completed_at?: string | null
          contact_email?: string | null
          contact_name?: string | null
          created_at?: string
          created_by?: string
          deal_id?: string | null
          description?: string | null
          duration_minutes?: number | null
          id?: string
          lead_id?: string | null
          next_steps?: string | null
          outcome?: string | null
          priority?: string
          scheduled_at?: string | null
          status?: string
          subject?: string
          type?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "activities_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "activities_deal_id_fkey"
            columns: ["deal_id"]
            isOneToOne: false
            referencedRelation: "deals"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "activities_lead_id_fkey"
            columns: ["lead_id"]
            isOneToOne: false
            referencedRelation: "leads"
            referencedColumns: ["id"]
          },
        ]
      }
      activity_templates: {
        Row: {
          created_at: string
          created_by: string
          default_duration_minutes: number | null
          description_template: string | null
          id: string
          is_active: boolean
          name: string
          subject_template: string
          type: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by: string
          default_duration_minutes?: number | null
          description_template?: string | null
          id?: string
          is_active?: boolean
          name: string
          subject_template: string
          type: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string
          default_duration_minutes?: number | null
          description_template?: string | null
          id?: string
          is_active?: boolean
          name?: string
          subject_template?: string
          type?: string
          updated_at?: string
        }
        Relationships: []
      }
      adaptive_learning_journeys: {
        Row: {
          adaptation_triggers: Json | null
          coachgpt_personality: string | null
          completion_rate: number | null
          context_rules: Json | null
          created_at: string
          current_module_index: number | null
          employee_id: string
          hr_risk_score: number | null
          id: string
          industry: string
          last_adaptation_date: string | null
          learning_track_id: string | null
          org_size_category: string
          performance_metrics: Json | null
          priority_scenarios: string[] | null
          risk_areas: string[] | null
          role_title: string
          suggested_modules: string[] | null
          updated_at: string
        }
        Insert: {
          adaptation_triggers?: Json | null
          coachgpt_personality?: string | null
          completion_rate?: number | null
          context_rules?: Json | null
          created_at?: string
          current_module_index?: number | null
          employee_id: string
          hr_risk_score?: number | null
          id?: string
          industry: string
          last_adaptation_date?: string | null
          learning_track_id?: string | null
          org_size_category: string
          performance_metrics?: Json | null
          priority_scenarios?: string[] | null
          risk_areas?: string[] | null
          role_title: string
          suggested_modules?: string[] | null
          updated_at?: string
        }
        Update: {
          adaptation_triggers?: Json | null
          coachgpt_personality?: string | null
          completion_rate?: number | null
          context_rules?: Json | null
          created_at?: string
          current_module_index?: number | null
          employee_id?: string
          hr_risk_score?: number | null
          id?: string
          industry?: string
          last_adaptation_date?: string | null
          learning_track_id?: string | null
          org_size_category?: string
          performance_metrics?: Json | null
          priority_scenarios?: string[] | null
          risk_areas?: string[] | null
          role_title?: string
          suggested_modules?: string[] | null
          updated_at?: string
        }
        Relationships: []
      }
      adaptive_question_log: {
        Row: {
          adaptive_reason: string | null
          answer_correct: boolean | null
          created_at: string | null
          difficulty_presented: string
          id: string
          question_id: string
          session_id: string
          struggle_indicators: Json | null
          time_spent_seconds: number | null
          topic: string | null
        }
        Insert: {
          adaptive_reason?: string | null
          answer_correct?: boolean | null
          created_at?: string | null
          difficulty_presented: string
          id?: string
          question_id: string
          session_id: string
          struggle_indicators?: Json | null
          time_spent_seconds?: number | null
          topic?: string | null
        }
        Update: {
          adaptive_reason?: string | null
          answer_correct?: boolean | null
          created_at?: string | null
          difficulty_presented?: string
          id?: string
          question_id?: string
          session_id?: string
          struggle_indicators?: Json | null
          time_spent_seconds?: number | null
          topic?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "adaptive_question_log_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "question_bank"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "adaptive_question_log_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "adaptive_quiz_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      adaptive_quiz_sessions: {
        Row: {
          adaptive_rules: Json | null
          assignment_id: string
          correct_streak: number | null
          created_at: string | null
          current_difficulty: string
          employee_id: string
          id: string
          incorrect_streak: number | null
          mastered_topics: string[] | null
          performance_score: number | null
          session_metadata: Json | null
          status: string | null
          struggle_topics: string[] | null
          total_questions_answered: number | null
          training_module_id: string
          updated_at: string | null
        }
        Insert: {
          adaptive_rules?: Json | null
          assignment_id: string
          correct_streak?: number | null
          created_at?: string | null
          current_difficulty?: string
          employee_id: string
          id?: string
          incorrect_streak?: number | null
          mastered_topics?: string[] | null
          performance_score?: number | null
          session_metadata?: Json | null
          status?: string | null
          struggle_topics?: string[] | null
          total_questions_answered?: number | null
          training_module_id: string
          updated_at?: string | null
        }
        Update: {
          adaptive_rules?: Json | null
          assignment_id?: string
          correct_streak?: number | null
          created_at?: string | null
          current_difficulty?: string
          employee_id?: string
          id?: string
          incorrect_streak?: number | null
          mastered_topics?: string[] | null
          performance_score?: number | null
          session_metadata?: Json | null
          status?: string | null
          struggle_topics?: string[] | null
          total_questions_answered?: number | null
          training_module_id?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "fk_adaptive_quiz_sessions_employee"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "fk_adaptive_quiz_sessions_training_module"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      admin_audit_log: {
        Row: {
          action_details: Json
          action_type: string
          approved_at: string | null
          approved_by: string | null
          company_id: string | null
          created_at: string
          id: string
          ip_address: unknown | null
          new_values: Json | null
          old_values: Json | null
          requires_approval: boolean | null
          resource_id: string | null
          resource_type: string
          risk_level: string | null
          session_id: string | null
          user_agent: string | null
          user_id: string
        }
        Insert: {
          action_details?: Json
          action_type: string
          approved_at?: string | null
          approved_by?: string | null
          company_id?: string | null
          created_at?: string
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          requires_approval?: boolean | null
          resource_id?: string | null
          resource_type: string
          risk_level?: string | null
          session_id?: string | null
          user_agent?: string | null
          user_id: string
        }
        Update: {
          action_details?: Json
          action_type?: string
          approved_at?: string | null
          approved_by?: string | null
          company_id?: string | null
          created_at?: string
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          requires_approval?: boolean | null
          resource_id?: string | null
          resource_type?: string
          risk_level?: string | null
          session_id?: string | null
          user_agent?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "admin_audit_log_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      admin_tasks: {
        Row: {
          actual_hours: number | null
          assigned_to: string | null
          company_id: string | null
          completed_at: string | null
          completion_notes: string | null
          created_at: string
          created_by: string
          dependencies: string[] | null
          description: string | null
          due_date: string | null
          estimated_hours: number | null
          id: string
          metadata: Json | null
          payroll_run_id: string | null
          priority: string
          status: string
          task_type: string
          title: string
          updated_at: string
        }
        Insert: {
          actual_hours?: number | null
          assigned_to?: string | null
          company_id?: string | null
          completed_at?: string | null
          completion_notes?: string | null
          created_at?: string
          created_by: string
          dependencies?: string[] | null
          description?: string | null
          due_date?: string | null
          estimated_hours?: number | null
          id?: string
          metadata?: Json | null
          payroll_run_id?: string | null
          priority?: string
          status?: string
          task_type: string
          title: string
          updated_at?: string
        }
        Update: {
          actual_hours?: number | null
          assigned_to?: string | null
          company_id?: string | null
          completed_at?: string | null
          completion_notes?: string | null
          created_at?: string
          created_by?: string
          dependencies?: string[] | null
          description?: string | null
          due_date?: string | null
          estimated_hours?: number | null
          id?: string
          metadata?: Json | null
          payroll_run_id?: string | null
          priority?: string
          status?: string
          task_type?: string
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "admin_tasks_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "admin_tasks_payroll_run_id_fkey"
            columns: ["payroll_run_id"]
            isOneToOne: false
            referencedRelation: "payroll_runs"
            referencedColumns: ["id"]
          },
        ]
      }
      ai_assistant_logs: {
        Row: {
          conversation_id: string
          created_at: string
          current_section: string | null
          id: string
          module_name: string
          question: string
          response: string
          timestamp: string
          topic: string
          training_module_id: string
          user_role: string | null
        }
        Insert: {
          conversation_id: string
          created_at?: string
          current_section?: string | null
          id?: string
          module_name: string
          question: string
          response: string
          timestamp?: string
          topic: string
          training_module_id: string
          user_role?: string | null
        }
        Update: {
          conversation_id?: string
          created_at?: string
          current_section?: string | null
          id?: string
          module_name?: string
          question?: string
          response?: string
          timestamp?: string
          topic?: string
          training_module_id?: string
          user_role?: string | null
        }
        Relationships: []
      }
      ai_case_processing_log: {
        Row: {
          ai_decision: string
          ai_reasoning: string | null
          case_id: string | null
          confidence_score: number | null
          email_content: string | null
          email_from: string | null
          email_id: string
          email_subject: string | null
          id: string
          metadata: Json | null
          processed_at: string
          processing_duration_ms: number | null
        }
        Insert: {
          ai_decision: string
          ai_reasoning?: string | null
          case_id?: string | null
          confidence_score?: number | null
          email_content?: string | null
          email_from?: string | null
          email_id: string
          email_subject?: string | null
          id?: string
          metadata?: Json | null
          processed_at?: string
          processing_duration_ms?: number | null
        }
        Update: {
          ai_decision?: string
          ai_reasoning?: string | null
          case_id?: string | null
          confidence_score?: number | null
          email_content?: string | null
          email_from?: string | null
          email_id?: string
          email_subject?: string | null
          id?: string
          metadata?: Json | null
          processed_at?: string
          processing_duration_ms?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "ai_case_processing_log_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
        ]
      }
      ai_insights: {
        Row: {
          affected_entities: Json | null
          category: string
          company_id: string
          confidence_score: number | null
          created_at: string | null
          data_sources: string[] | null
          description: string
          dismissed_at: string | null
          dismissed_by: string | null
          dismissed_reason: string | null
          expiry_date: string | null
          id: string
          impact_level: string
          insight_type: string
          is_dismissed: boolean | null
          predicted_outcome: string | null
          recommended_actions: string[] | null
          title: string
          updated_at: string | null
        }
        Insert: {
          affected_entities?: Json | null
          category: string
          company_id: string
          confidence_score?: number | null
          created_at?: string | null
          data_sources?: string[] | null
          description: string
          dismissed_at?: string | null
          dismissed_by?: string | null
          dismissed_reason?: string | null
          expiry_date?: string | null
          id?: string
          impact_level: string
          insight_type: string
          is_dismissed?: boolean | null
          predicted_outcome?: string | null
          recommended_actions?: string[] | null
          title: string
          updated_at?: string | null
        }
        Update: {
          affected_entities?: Json | null
          category?: string
          company_id?: string
          confidence_score?: number | null
          created_at?: string | null
          data_sources?: string[] | null
          description?: string
          dismissed_at?: string | null
          dismissed_by?: string | null
          dismissed_reason?: string | null
          expiry_date?: string | null
          id?: string
          impact_level?: string
          insight_type?: string
          is_dismissed?: boolean | null
          predicted_outcome?: string | null
          recommended_actions?: string[] | null
          title?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ai_insights_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      ai_report_jobs: {
        Row: {
          completed_at: string | null
          conversation_data: Json | null
          created_at: string
          error_message: string | null
          id: string
          prompt: string
          report_content: string | null
          session_id: string | null
          status: string
          updated_at: string
          user_email: string
          user_id: string
        }
        Insert: {
          completed_at?: string | null
          conversation_data?: Json | null
          created_at?: string
          error_message?: string | null
          id?: string
          prompt: string
          report_content?: string | null
          session_id?: string | null
          status?: string
          updated_at?: string
          user_email: string
          user_id: string
        }
        Update: {
          completed_at?: string | null
          conversation_data?: Json | null
          created_at?: string
          error_message?: string | null
          id?: string
          prompt?: string
          report_content?: string | null
          session_id?: string | null
          status?: string
          updated_at?: string
          user_email?: string
          user_id?: string
        }
        Relationships: []
      }
      analytics_alerts: {
        Row: {
          alert_type: string
          company_id: string | null
          condition_config: Json
          created_at: string
          created_by: string | null
          description: string | null
          id: string
          is_active: boolean
          kpi_id: string | null
          last_triggered_at: string | null
          name: string
          notification_channels: string[]
          recipients: string[]
          trigger_count: number
          updated_at: string
        }
        Insert: {
          alert_type: string
          company_id?: string | null
          condition_config: Json
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean
          kpi_id?: string | null
          last_triggered_at?: string | null
          name: string
          notification_channels?: string[]
          recipients?: string[]
          trigger_count?: number
          updated_at?: string
        }
        Update: {
          alert_type?: string
          company_id?: string | null
          condition_config?: Json
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean
          kpi_id?: string | null
          last_triggered_at?: string | null
          name?: string
          notification_channels?: string[]
          recipients?: string[]
          trigger_count?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "analytics_alerts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "analytics_alerts_kpi_id_fkey"
            columns: ["kpi_id"]
            isOneToOne: false
            referencedRelation: "kpi_definitions"
            referencedColumns: ["id"]
          },
        ]
      }
      analytics_dashboards: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          dashboard_config: Json
          description: string | null
          id: string
          is_default: boolean
          is_public: boolean
          name: string
          sort_order: number
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          dashboard_config?: Json
          description?: string | null
          id?: string
          is_default?: boolean
          is_public?: boolean
          name: string
          sort_order?: number
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          dashboard_config?: Json
          description?: string | null
          id?: string
          is_default?: boolean
          is_public?: boolean
          name?: string
          sort_order?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "analytics_dashboards_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      analytics_metrics: {
        Row: {
          category: string
          company_id: string | null
          created_at: string
          date_recorded: string
          id: string
          metadata: Json | null
          metric_name: string
          metric_type: string
          metric_value: number
          time_period: string
          updated_at: string
        }
        Insert: {
          category: string
          company_id?: string | null
          created_at?: string
          date_recorded?: string
          id?: string
          metadata?: Json | null
          metric_name: string
          metric_type: string
          metric_value: number
          time_period: string
          updated_at?: string
        }
        Update: {
          category?: string
          company_id?: string | null
          created_at?: string
          date_recorded?: string
          id?: string
          metadata?: Json | null
          metric_name?: string
          metric_type?: string
          metric_value?: number
          time_period?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "analytics_metrics_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      analytics_reports: {
        Row: {
          created_at: string
          date_range_end: string
          date_range_start: string
          generated_at: string
          generated_by: string
          id: string
          is_scheduled: boolean
          next_generation_date: string | null
          report_data: Json
          report_name: string
          report_type: string
          schedule_frequency: string | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          date_range_end: string
          date_range_start: string
          generated_at?: string
          generated_by: string
          id?: string
          is_scheduled?: boolean
          next_generation_date?: string | null
          report_data: Json
          report_name: string
          report_type: string
          schedule_frequency?: string | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          date_range_end?: string
          date_range_start?: string
          generated_at?: string
          generated_by?: string
          id?: string
          is_scheduled?: boolean
          next_generation_date?: string | null
          report_data?: Json
          report_name?: string
          report_type?: string
          schedule_frequency?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      api_keys: {
        Row: {
          created_at: string
          created_by: string
          expires_at: string | null
          id: string
          is_active: boolean
          key_hash: string
          key_preview: string
          last_used_at: string | null
          name: string
          permissions: string[]
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by: string
          expires_at?: string | null
          id?: string
          is_active?: boolean
          key_hash: string
          key_preview: string
          last_used_at?: string | null
          name: string
          permissions?: string[]
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string
          expires_at?: string | null
          id?: string
          is_active?: boolean
          key_hash?: string
          key_preview?: string
          last_used_at?: string | null
          name?: string
          permissions?: string[]
          updated_at?: string
        }
        Relationships: []
      }
      api_usage_logs: {
        Row: {
          api_key_id: string | null
          created_at: string
          endpoint: string
          http_method: string
          id: string
          integration_id: string | null
          ip_address: unknown | null
          rate_limit_remaining: number | null
          request_size: number | null
          response_size: number | null
          response_time_ms: number | null
          status_code: number | null
          user_agent: string | null
        }
        Insert: {
          api_key_id?: string | null
          created_at?: string
          endpoint: string
          http_method: string
          id?: string
          integration_id?: string | null
          ip_address?: unknown | null
          rate_limit_remaining?: number | null
          request_size?: number | null
          response_size?: number | null
          response_time_ms?: number | null
          status_code?: number | null
          user_agent?: string | null
        }
        Update: {
          api_key_id?: string | null
          created_at?: string
          endpoint?: string
          http_method?: string
          id?: string
          integration_id?: string | null
          ip_address?: unknown | null
          rate_limit_remaining?: number | null
          request_size?: number | null
          response_size?: number | null
          response_time_ms?: number | null
          status_code?: number | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "api_usage_logs_api_key_id_fkey"
            columns: ["api_key_id"]
            isOneToOne: false
            referencedRelation: "api_keys"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "api_usage_logs_integration_id_fkey"
            columns: ["integration_id"]
            isOneToOne: false
            referencedRelation: "integrations"
            referencedColumns: ["id"]
          },
        ]
      }
      assessment_notifications: {
        Row: {
          action_url: string | null
          assessment_id: string
          created_at: string
          id: string
          is_read: boolean
          message: string
          metadata: Json | null
          notification_type: string
          read_at: string | null
          title: string
          updated_at: string
          user_id: string
        }
        Insert: {
          action_url?: string | null
          assessment_id: string
          created_at?: string
          id?: string
          is_read?: boolean
          message: string
          metadata?: Json | null
          notification_type: string
          read_at?: string | null
          title: string
          updated_at?: string
          user_id: string
        }
        Update: {
          action_url?: string | null
          assessment_id?: string
          created_at?: string
          id?: string
          is_read?: boolean
          message?: string
          metadata?: Json | null
          notification_type?: string
          read_at?: string | null
          title?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "assessment_notifications_assessment_id_fkey"
            columns: ["assessment_id"]
            isOneToOne: false
            referencedRelation: "assessments"
            referencedColumns: ["id"]
          },
        ]
      }
      assessments: {
        Row: {
          ai_report: Json | null
          assigned_by: string | null
          assigned_to: string[] | null
          company_email: string
          company_name: string
          company_size: string
          completion_metadata: Json | null
          created_at: string
          due_date: string | null
          id: string
          industry: string
          reminder_sent_at: string | null
          responses: Json
          risk_level: string
          risk_score: number
          status: string | null
          updated_at: string
        }
        Insert: {
          ai_report?: Json | null
          assigned_by?: string | null
          assigned_to?: string[] | null
          company_email: string
          company_name: string
          company_size: string
          completion_metadata?: Json | null
          created_at?: string
          due_date?: string | null
          id?: string
          industry: string
          reminder_sent_at?: string | null
          responses: Json
          risk_level: string
          risk_score: number
          status?: string | null
          updated_at?: string
        }
        Update: {
          ai_report?: Json | null
          assigned_by?: string | null
          assigned_to?: string[] | null
          company_email?: string
          company_name?: string
          company_size?: string
          completion_metadata?: Json | null
          created_at?: string
          due_date?: string | null
          id?: string
          industry?: string
          reminder_sent_at?: string | null
          responses?: Json
          risk_level?: string
          risk_score?: number
          status?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      ats_application_activities: {
        Row: {
          activity_type: string
          application_id: string | null
          created_at: string | null
          description: string
          id: string
          metadata: Json | null
          new_stage: Database["public"]["Enums"]["application_stage"] | null
          old_stage: Database["public"]["Enums"]["application_stage"] | null
          user_id: string | null
        }
        Insert: {
          activity_type: string
          application_id?: string | null
          created_at?: string | null
          description: string
          id?: string
          metadata?: Json | null
          new_stage?: Database["public"]["Enums"]["application_stage"] | null
          old_stage?: Database["public"]["Enums"]["application_stage"] | null
          user_id?: string | null
        }
        Update: {
          activity_type?: string
          application_id?: string | null
          created_at?: string | null
          description?: string
          id?: string
          metadata?: Json | null
          new_stage?: Database["public"]["Enums"]["application_stage"] | null
          old_stage?: Database["public"]["Enums"]["application_stage"] | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ats_application_activities_application_id_fkey"
            columns: ["application_id"]
            isOneToOne: false
            referencedRelation: "ats_applications"
            referencedColumns: ["id"]
          },
        ]
      }
      ats_application_forms: {
        Row: {
          company_id: string | null
          created_at: string | null
          created_by: string | null
          description: string | null
          form_fields: Json
          id: string
          is_active: boolean | null
          is_default: boolean | null
          name: string
          updated_at: string | null
        }
        Insert: {
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          description?: string | null
          form_fields: Json
          id?: string
          is_active?: boolean | null
          is_default?: boolean | null
          name: string
          updated_at?: string | null
        }
        Update: {
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          description?: string | null
          form_fields?: Json
          id?: string
          is_active?: boolean | null
          is_default?: boolean | null
          name?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ats_application_forms_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      ats_applications: {
        Row: {
          applicant_email: string
          applicant_name: string
          applicant_phone: string | null
          application_data: Json | null
          application_source: string | null
          applied_at: string | null
          candidate_id: string | null
          cover_letter: string | null
          current_stage: Database["public"]["Enums"]["application_stage"] | null
          id: string
          job_posting_id: string | null
          notes: string | null
          resume_url: string | null
          score: number | null
          updated_at: string | null
        }
        Insert: {
          applicant_email: string
          applicant_name: string
          applicant_phone?: string | null
          application_data?: Json | null
          application_source?: string | null
          applied_at?: string | null
          candidate_id?: string | null
          cover_letter?: string | null
          current_stage?:
            | Database["public"]["Enums"]["application_stage"]
            | null
          id?: string
          job_posting_id?: string | null
          notes?: string | null
          resume_url?: string | null
          score?: number | null
          updated_at?: string | null
        }
        Update: {
          applicant_email?: string
          applicant_name?: string
          applicant_phone?: string | null
          application_data?: Json | null
          application_source?: string | null
          applied_at?: string | null
          candidate_id?: string | null
          cover_letter?: string | null
          current_stage?:
            | Database["public"]["Enums"]["application_stage"]
            | null
          id?: string
          job_posting_id?: string | null
          notes?: string | null
          resume_url?: string | null
          score?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ats_applications_candidate_id_fkey"
            columns: ["candidate_id"]
            isOneToOne: false
            referencedRelation: "staffing_candidates"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "ats_applications_job_posting_id_fkey"
            columns: ["job_posting_id"]
            isOneToOne: false
            referencedRelation: "ats_job_postings"
            referencedColumns: ["id"]
          },
        ]
      }
      ats_career_page_settings: {
        Row: {
          application_instructions: string | null
          company_id: string | null
          contact_email: string | null
          created_at: string | null
          custom_css: string | null
          embed_code: string | null
          header_image_url: string | null
          id: string
          is_active: boolean | null
          page_description: string | null
          page_title: string | null
          theme_config: Json | null
          updated_at: string | null
        }
        Insert: {
          application_instructions?: string | null
          company_id?: string | null
          contact_email?: string | null
          created_at?: string | null
          custom_css?: string | null
          embed_code?: string | null
          header_image_url?: string | null
          id?: string
          is_active?: boolean | null
          page_description?: string | null
          page_title?: string | null
          theme_config?: Json | null
          updated_at?: string | null
        }
        Update: {
          application_instructions?: string | null
          company_id?: string | null
          contact_email?: string | null
          created_at?: string | null
          custom_css?: string | null
          embed_code?: string | null
          header_image_url?: string | null
          id?: string
          is_active?: boolean | null
          page_description?: string | null
          page_title?: string | null
          theme_config?: Json | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ats_career_page_settings_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: true
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      ats_evaluations: {
        Row: {
          application_id: string | null
          comments: string | null
          created_at: string | null
          evaluator_id: string | null
          id: string
          interview_id: string | null
          overall_rating: number | null
          recommendation: string | null
          scores: Json
          updated_at: string | null
        }
        Insert: {
          application_id?: string | null
          comments?: string | null
          created_at?: string | null
          evaluator_id?: string | null
          id?: string
          interview_id?: string | null
          overall_rating?: number | null
          recommendation?: string | null
          scores: Json
          updated_at?: string | null
        }
        Update: {
          application_id?: string | null
          comments?: string | null
          created_at?: string | null
          evaluator_id?: string | null
          id?: string
          interview_id?: string | null
          overall_rating?: number | null
          recommendation?: string | null
          scores?: Json
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ats_evaluations_application_id_fkey"
            columns: ["application_id"]
            isOneToOne: false
            referencedRelation: "ats_applications"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "ats_evaluations_interview_id_fkey"
            columns: ["interview_id"]
            isOneToOne: false
            referencedRelation: "ats_interviews"
            referencedColumns: ["id"]
          },
        ]
      }
      ats_interviews: {
        Row: {
          application_id: string | null
          created_at: string | null
          duration_minutes: number | null
          feedback: Json | null
          id: string
          interview_type: string | null
          interviewer_id: string | null
          location: string | null
          notes: string | null
          scheduled_at: string
          status: string | null
          updated_at: string | null
        }
        Insert: {
          application_id?: string | null
          created_at?: string | null
          duration_minutes?: number | null
          feedback?: Json | null
          id?: string
          interview_type?: string | null
          interviewer_id?: string | null
          location?: string | null
          notes?: string | null
          scheduled_at: string
          status?: string | null
          updated_at?: string | null
        }
        Update: {
          application_id?: string | null
          created_at?: string | null
          duration_minutes?: number | null
          feedback?: Json | null
          id?: string
          interview_type?: string | null
          interviewer_id?: string | null
          location?: string | null
          notes?: string | null
          scheduled_at?: string
          status?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "ats_interviews_application_id_fkey"
            columns: ["application_id"]
            isOneToOne: false
            referencedRelation: "ats_applications"
            referencedColumns: ["id"]
          },
        ]
      }
      ats_job_postings: {
        Row: {
          board_type: Database["public"]["Enums"]["job_board_type"] | null
          company_id: string | null
          created_at: string | null
          created_by: string | null
          department: string | null
          description: string
          employment_type: string | null
          expires_at: string | null
          hiring_manager_id: string | null
          id: string
          location: string | null
          metadata: Json | null
          post_to_career_page: boolean | null
          post_to_internal: boolean | null
          requirements: string[] | null
          responsibilities: string[] | null
          salary_currency: string | null
          salary_max: number | null
          salary_min: number | null
          status: string | null
          title: string
          updated_at: string | null
          visibility: Database["public"]["Enums"]["job_visibility_type"] | null
        }
        Insert: {
          board_type?: Database["public"]["Enums"]["job_board_type"] | null
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          department?: string | null
          description: string
          employment_type?: string | null
          expires_at?: string | null
          hiring_manager_id?: string | null
          id?: string
          location?: string | null
          metadata?: Json | null
          post_to_career_page?: boolean | null
          post_to_internal?: boolean | null
          requirements?: string[] | null
          responsibilities?: string[] | null
          salary_currency?: string | null
          salary_max?: number | null
          salary_min?: number | null
          status?: string | null
          title: string
          updated_at?: string | null
          visibility?: Database["public"]["Enums"]["job_visibility_type"] | null
        }
        Update: {
          board_type?: Database["public"]["Enums"]["job_board_type"] | null
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          department?: string | null
          description?: string
          employment_type?: string | null
          expires_at?: string | null
          hiring_manager_id?: string | null
          id?: string
          location?: string | null
          metadata?: Json | null
          post_to_career_page?: boolean | null
          post_to_internal?: boolean | null
          requirements?: string[] | null
          responsibilities?: string[] | null
          salary_currency?: string | null
          salary_max?: number | null
          salary_min?: number | null
          status?: string | null
          title?: string
          updated_at?: string | null
          visibility?: Database["public"]["Enums"]["job_visibility_type"] | null
        }
        Relationships: [
          {
            foreignKeyName: "ats_job_postings_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      attendance_variances: {
        Row: {
          actual_end: string | null
          actual_start: string | null
          created_at: string
          date: string
          employee_id: string
          id: string
          scheduled_end: string | null
          scheduled_start: string | null
          shift_id: string | null
          variance_minutes: number
          variance_type: string
        }
        Insert: {
          actual_end?: string | null
          actual_start?: string | null
          created_at?: string
          date: string
          employee_id: string
          id?: string
          scheduled_end?: string | null
          scheduled_start?: string | null
          shift_id?: string | null
          variance_minutes?: number
          variance_type: string
        }
        Update: {
          actual_end?: string | null
          actual_start?: string | null
          created_at?: string
          date?: string
          employee_id?: string
          id?: string
          scheduled_end?: string | null
          scheduled_start?: string | null
          shift_id?: string | null
          variance_minutes?: number
          variance_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "attendance_variances_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "attendance_variances_shift_id_fkey"
            columns: ["shift_id"]
            isOneToOne: false
            referencedRelation: "employee_schedules"
            referencedColumns: ["id"]
          },
        ]
      }
      audit_logs: {
        Row: {
          action_type: string
          company_id: string | null
          created_at: string
          details: string | null
          id: string
          ip_address: unknown | null
          new_values: Json | null
          old_values: Json | null
          resource_id: string | null
          resource_type: string
          session_id: string | null
          status: string
          user_agent: string | null
          user_id: string | null
        }
        Insert: {
          action_type: string
          company_id?: string | null
          created_at?: string
          details?: string | null
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          resource_id?: string | null
          resource_type: string
          session_id?: string | null
          status?: string
          user_agent?: string | null
          user_id?: string | null
        }
        Update: {
          action_type?: string
          company_id?: string | null
          created_at?: string
          details?: string | null
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          resource_id?: string | null
          resource_type?: string
          session_id?: string | null
          status?: string
          user_agent?: string | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "audit_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      automation_executions: {
        Row: {
          completed_at: string | null
          context_data: Json | null
          created_at: string
          current_step: number | null
          error_message: string | null
          execution_log: Json | null
          id: string
          scheduled_for: string | null
          started_at: string | null
          status: string
          step_results: Json | null
          trigger_data: Json
          workflow_id: string
        }
        Insert: {
          completed_at?: string | null
          context_data?: Json | null
          created_at?: string
          current_step?: number | null
          error_message?: string | null
          execution_log?: Json | null
          id?: string
          scheduled_for?: string | null
          started_at?: string | null
          status?: string
          step_results?: Json | null
          trigger_data?: Json
          workflow_id: string
        }
        Update: {
          completed_at?: string | null
          context_data?: Json | null
          created_at?: string
          current_step?: number | null
          error_message?: string | null
          execution_log?: Json | null
          id?: string
          scheduled_for?: string | null
          started_at?: string | null
          status?: string
          step_results?: Json | null
          trigger_data?: Json
          workflow_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "automation_executions_workflow_id_fkey"
            columns: ["workflow_id"]
            isOneToOne: false
            referencedRelation: "automation_workflows"
            referencedColumns: ["id"]
          },
        ]
      }
      automation_workflows: {
        Row: {
          created_at: string
          created_by: string
          description: string | null
          id: string
          is_active: boolean
          name: string
          steps: Json | null
          trigger_type: string
          trigger_value: string | null
          updated_at: string
          workflow_id: string | null
        }
        Insert: {
          created_at?: string
          created_by: string
          description?: string | null
          id?: string
          is_active?: boolean
          name: string
          steps?: Json | null
          trigger_type: string
          trigger_value?: string | null
          updated_at?: string
          workflow_id?: string | null
        }
        Update: {
          created_at?: string
          created_by?: string
          description?: string | null
          id?: string
          is_active?: boolean
          name?: string
          steps?: Json | null
          trigger_type?: string
          trigger_value?: string | null
          updated_at?: string
          workflow_id?: string | null
        }
        Relationships: []
      }
      background_job_logs: {
        Row: {
          created_at: string
          error_message: string | null
          id: string
          job_data: Json
          job_type: string
          processed_at: string | null
          status: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          error_message?: string | null
          id?: string
          job_data?: Json
          job_type: string
          processed_at?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          error_message?: string | null
          id?: string
          job_data?: Json
          job_type?: string
          processed_at?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: []
      }
      benefit_audit_logs: {
        Row: {
          action: string
          created_at: string
          entity_id: string
          entity_type: string
          id: string
          ip_address: unknown | null
          new_values: Json | null
          old_values: Json | null
          user_agent: string | null
          user_email: string | null
          user_id: string
        }
        Insert: {
          action: string
          created_at?: string
          entity_id: string
          entity_type: string
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          user_agent?: string | null
          user_email?: string | null
          user_id: string
        }
        Update: {
          action?: string
          created_at?: string
          entity_id?: string
          entity_type?: string
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          user_agent?: string | null
          user_email?: string | null
          user_id?: string
        }
        Relationships: []
      }
      benefit_carriers: {
        Row: {
          contact_info: Json | null
          created_at: string
          created_by: string
          edi_settings: Json | null
          id: string
          name: string
          type: string
          updated_at: string
        }
        Insert: {
          contact_info?: Json | null
          created_at?: string
          created_by: string
          edi_settings?: Json | null
          id?: string
          name: string
          type: string
          updated_at?: string
        }
        Update: {
          contact_info?: Json | null
          created_at?: string
          created_by?: string
          edi_settings?: Json | null
          id?: string
          name?: string
          type?: string
          updated_at?: string
        }
        Relationships: []
      }
      benefit_costs: {
        Row: {
          average_cost_per_employee: number
          company_id: string
          cost_category: string
          cost_period: string
          created_at: string | null
          employee_count: number
          id: string
          total_claims_cost: number
          total_premium_cost: number
          updated_at: string | null
        }
        Insert: {
          average_cost_per_employee?: number
          company_id: string
          cost_category: string
          cost_period: string
          created_at?: string | null
          employee_count?: number
          id?: string
          total_claims_cost?: number
          total_premium_cost?: number
          updated_at?: string | null
        }
        Update: {
          average_cost_per_employee?: number
          company_id?: string
          cost_category?: string
          cost_period?: string
          created_at?: string | null
          employee_count?: number
          id?: string
          total_claims_cost?: number
          total_premium_cost?: number
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "benefit_costs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      benefit_documents: {
        Row: {
          created_at: string
          created_by: string | null
          description: string | null
          file_size: number | null
          file_url: string | null
          id: string
          metadata: Json | null
          mime_type: string | null
          name: string
          tags: Json | null
          type: Database["public"]["Enums"]["document_type"]
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          description?: string | null
          file_size?: number | null
          file_url?: string | null
          id?: string
          metadata?: Json | null
          mime_type?: string | null
          name: string
          tags?: Json | null
          type: Database["public"]["Enums"]["document_type"]
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string | null
          description?: string | null
          file_size?: number | null
          file_url?: string | null
          id?: string
          metadata?: Json | null
          mime_type?: string | null
          name?: string
          tags?: Json | null
          type?: Database["public"]["Enums"]["document_type"]
          updated_at?: string
        }
        Relationships: []
      }
      benefit_eligibility_rules: {
        Row: {
          created_at: string
          created_by: string
          id: string
          measurement_method: string
          min_hours_per_week: number
          name: string
          rehire_reset_period: number
          updated_at: string
          waiting_period_days: number
        }
        Insert: {
          created_at?: string
          created_by: string
          id?: string
          measurement_method?: string
          min_hours_per_week?: number
          name: string
          rehire_reset_period?: number
          updated_at?: string
          waiting_period_days?: number
        }
        Update: {
          created_at?: string
          created_by?: string
          id?: string
          measurement_method?: string
          min_hours_per_week?: number
          name?: string
          rehire_reset_period?: number
          updated_at?: string
          waiting_period_days?: number
        }
        Relationships: []
      }
      benefit_enrollments: {
        Row: {
          company_id: string
          created_at: string | null
          employee_contribution: number
          employee_id: string
          employer_contribution: number
          enrollment_date: string
          enrollment_tier: string
          id: string
          monthly_premium: number
          plan_id: string
          termination_date: string | null
          updated_at: string | null
        }
        Insert: {
          company_id: string
          created_at?: string | null
          employee_contribution?: number
          employee_id: string
          employer_contribution?: number
          enrollment_date: string
          enrollment_tier: string
          id?: string
          monthly_premium: number
          plan_id: string
          termination_date?: string | null
          updated_at?: string | null
        }
        Update: {
          company_id?: string
          created_at?: string | null
          employee_contribution?: number
          employee_id?: string
          employer_contribution?: number
          enrollment_date?: string
          enrollment_tier?: string
          id?: string
          monthly_premium?: number
          plan_id?: string
          termination_date?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "benefit_enrollments_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "benefit_enrollments_plan_id_fkey"
            columns: ["plan_id"]
            isOneToOne: false
            referencedRelation: "benefit_plans"
            referencedColumns: ["id"]
          },
        ]
      }
      benefit_plan_assignments: {
        Row: {
          assigned_by: string | null
          client_id: string
          created_at: string
          created_by: string
          custom_settings: Json | null
          effective_date: string
          id: string
          locked_fields: string[] | null
          plan_template_id: string
          source: string
          status: string
          termination_date: string | null
          updated_at: string
        }
        Insert: {
          assigned_by?: string | null
          client_id: string
          created_at?: string
          created_by: string
          custom_settings?: Json | null
          effective_date: string
          id?: string
          locked_fields?: string[] | null
          plan_template_id: string
          source?: string
          status?: string
          termination_date?: string | null
          updated_at?: string
        }
        Update: {
          assigned_by?: string | null
          client_id?: string
          created_at?: string
          created_by?: string
          custom_settings?: Json | null
          effective_date?: string
          id?: string
          locked_fields?: string[] | null
          plan_template_id?: string
          source?: string
          status?: string
          termination_date?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "fk_plan_assignments_client"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "fk_plan_assignments_template"
            columns: ["plan_template_id"]
            isOneToOne: false
            referencedRelation: "benefit_plan_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      benefit_plan_templates: {
        Row: {
          carrier_id: string
          created_at: string
          created_by: string
          documents: string[] | null
          eligibility_rule_id: string | null
          id: string
          lock_fields: string[] | null
          name: string
          plan_type_code: string
          rating_method: string
          tier_structure: string[] | null
          updated_at: string
        }
        Insert: {
          carrier_id: string
          created_at?: string
          created_by: string
          documents?: string[] | null
          eligibility_rule_id?: string | null
          id?: string
          lock_fields?: string[] | null
          name: string
          plan_type_code: string
          rating_method: string
          tier_structure?: string[] | null
          updated_at?: string
        }
        Update: {
          carrier_id?: string
          created_at?: string
          created_by?: string
          documents?: string[] | null
          eligibility_rule_id?: string | null
          id?: string
          lock_fields?: string[] | null
          name?: string
          plan_type_code?: string
          rating_method?: string
          tier_structure?: string[] | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "fk_plan_templates_carrier"
            columns: ["carrier_id"]
            isOneToOne: false
            referencedRelation: "benefit_carriers"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "fk_plan_templates_eligibility"
            columns: ["eligibility_rule_id"]
            isOneToOne: false
            referencedRelation: "benefit_eligibility_rules"
            referencedColumns: ["id"]
          },
        ]
      }
      benefit_plan_types: {
        Row: {
          category: string
          code: string
          created_at: string
          description: string | null
          id: string
          subcategory: string
        }
        Insert: {
          category: string
          code: string
          created_at?: string
          description?: string | null
          id?: string
          subcategory: string
        }
        Update: {
          category?: string
          code?: string
          created_at?: string
          description?: string | null
          id?: string
          subcategory?: string
        }
        Relationships: []
      }
      benefit_plans: {
        Row: {
          carrier_id: string | null
          company_id: string
          coverage_details: Json | null
          created_at: string | null
          created_by: string | null
          deductible_info: Json | null
          description: string | null
          effective_date: string | null
          id: string
          name: string
          plan_type_id: string | null
          status: string | null
          termination_date: string | null
          tier_premiums: Json | null
          updated_at: string | null
        }
        Insert: {
          carrier_id?: string | null
          company_id: string
          coverage_details?: Json | null
          created_at?: string | null
          created_by?: string | null
          deductible_info?: Json | null
          description?: string | null
          effective_date?: string | null
          id?: string
          name: string
          plan_type_id?: string | null
          status?: string | null
          termination_date?: string | null
          tier_premiums?: Json | null
          updated_at?: string | null
        }
        Update: {
          carrier_id?: string | null
          company_id?: string
          coverage_details?: Json | null
          created_at?: string | null
          created_by?: string | null
          deductible_info?: Json | null
          description?: string | null
          effective_date?: string | null
          id?: string
          name?: string
          plan_type_id?: string | null
          status?: string | null
          termination_date?: string | null
          tier_premiums?: Json | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "benefit_plans_carrier_id_fkey"
            columns: ["carrier_id"]
            isOneToOne: false
            referencedRelation: "benefit_carriers"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "benefit_plans_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "benefit_plans_plan_type_id_fkey"
            columns: ["plan_type_id"]
            isOneToOne: false
            referencedRelation: "benefit_plan_types"
            referencedColumns: ["id"]
          },
        ]
      }
      benefit_scenarios: {
        Row: {
          annual_cost: number | null
          assumed_premiums: Json
          company_id: string
          created_at: string
          created_by: string | null
          employer_contribution: Json
          enrolled_employees: number
          id: string
          monthly_cost: number | null
          name: string
          tier_distribution: Json
          updated_at: string
        }
        Insert: {
          annual_cost?: number | null
          assumed_premiums?: Json
          company_id: string
          created_at?: string
          created_by?: string | null
          employer_contribution?: Json
          enrolled_employees?: number
          id?: string
          monthly_cost?: number | null
          name: string
          tier_distribution?: Json
          updated_at?: string
        }
        Update: {
          annual_cost?: number | null
          assumed_premiums?: Json
          company_id?: string
          created_at?: string
          created_by?: string | null
          employer_contribution?: Json
          enrolled_employees?: number
          id?: string
          monthly_cost?: number | null
          name?: string
          tier_distribution?: Json
          updated_at?: string
        }
        Relationships: []
      }
      benefits_audit_logs: {
        Row: {
          action: Database["public"]["Enums"]["audit_action"]
          created_at: string
          entity_id: string
          entity_type: Database["public"]["Enums"]["audit_entity"]
          id: string
          ip_address: string | null
          new_values: Json | null
          old_values: Json | null
          user_agent: string | null
          user_email: string | null
          user_id: string | null
        }
        Insert: {
          action: Database["public"]["Enums"]["audit_action"]
          created_at?: string
          entity_id: string
          entity_type: Database["public"]["Enums"]["audit_entity"]
          id?: string
          ip_address?: string | null
          new_values?: Json | null
          old_values?: Json | null
          user_agent?: string | null
          user_email?: string | null
          user_id?: string | null
        }
        Update: {
          action?: Database["public"]["Enums"]["audit_action"]
          created_at?: string
          entity_id?: string
          entity_type?: Database["public"]["Enums"]["audit_entity"]
          id?: string
          ip_address?: string | null
          new_values?: Json | null
          old_values?: Json | null
          user_agent?: string | null
          user_email?: string | null
          user_id?: string | null
        }
        Relationships: []
      }
      benefitsiq_benchmarking_sessions: {
        Row: {
          benchmark_criteria: Json
          benchmark_results: Json
          company_id: string | null
          comparison_data: Json
          created_at: string
          created_by: string
          id: string
          session_name: string
          updated_at: string
        }
        Insert: {
          benchmark_criteria?: Json
          benchmark_results?: Json
          company_id?: string | null
          comparison_data?: Json
          created_at?: string
          created_by: string
          id?: string
          session_name: string
          updated_at?: string
        }
        Update: {
          benchmark_criteria?: Json
          benchmark_results?: Json
          company_id?: string | null
          comparison_data?: Json
          created_at?: string
          created_by?: string
          id?: string
          session_name?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "benefitsiq_benchmarking_sessions_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      benefitsiq_carrier_integrations: {
        Row: {
          api_config: Json | null
          carrier_id: string | null
          created_at: string
          error_log: Json | null
          id: string
          integration_type: string
          is_active: boolean
          last_sync_at: string | null
          sync_schedule: string | null
          sync_status: string | null
          updated_at: string
        }
        Insert: {
          api_config?: Json | null
          carrier_id?: string | null
          created_at?: string
          error_log?: Json | null
          id?: string
          integration_type: string
          is_active?: boolean
          last_sync_at?: string | null
          sync_schedule?: string | null
          sync_status?: string | null
          updated_at?: string
        }
        Update: {
          api_config?: Json | null
          carrier_id?: string | null
          created_at?: string
          error_log?: Json | null
          id?: string
          integration_type?: string
          is_active?: boolean
          last_sync_at?: string | null
          sync_schedule?: string | null
          sync_status?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "benefitsiq_carrier_integrations_carrier_id_fkey"
            columns: ["carrier_id"]
            isOneToOne: false
            referencedRelation: "benefit_carriers"
            referencedColumns: ["id"]
          },
        ]
      }
      benefitsiq_cost_models: {
        Row: {
          base_data: Json
          calculated_results: Json
          company_id: string | null
          created_at: string
          created_by: string
          id: string
          is_saved: boolean
          model_name: string
          model_type: string
          scenario_data: Json
          updated_at: string
        }
        Insert: {
          base_data?: Json
          calculated_results?: Json
          company_id?: string | null
          created_at?: string
          created_by: string
          id?: string
          is_saved?: boolean
          model_name: string
          model_type: string
          scenario_data?: Json
          updated_at?: string
        }
        Update: {
          base_data?: Json
          calculated_results?: Json
          company_id?: string | null
          created_at?: string
          created_by?: string
          id?: string
          is_saved?: boolean
          model_name?: string
          model_type?: string
          scenario_data?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "benefitsiq_cost_models_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      benefitsiq_employee_recommendations: {
        Row: {
          company_id: string | null
          created_at: string
          employee_id: string | null
          household_data: Json
          id: string
          preferences: Json
          reasoning: Json
          recommendation_score: number | null
          recommended_plans: Json
          updated_at: string
          usage_patterns: Json
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          employee_id?: string | null
          household_data?: Json
          id?: string
          preferences?: Json
          reasoning?: Json
          recommendation_score?: number | null
          recommended_plans?: Json
          updated_at?: string
          usage_patterns?: Json
        }
        Update: {
          company_id?: string | null
          created_at?: string
          employee_id?: string | null
          household_data?: Json
          id?: string
          preferences?: Json
          reasoning?: Json
          recommendation_score?: number | null
          recommended_plans?: Json
          updated_at?: string
          usage_patterns?: Json
        }
        Relationships: [
          {
            foreignKeyName: "benefitsiq_employee_recommendations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      benefitsiq_global_config: {
        Row: {
          config_key: string
          config_value: Json
          created_at: string
          description: string | null
          id: string
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          config_key: string
          config_value?: Json
          created_at?: string
          description?: string | null
          id?: string
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          config_key?: string
          config_value?: Json
          created_at?: string
          description?: string | null
          id?: string
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: []
      }
      benefitsiq_market_benchmarks: {
        Row: {
          benchmark_data: Json
          benchmark_type: string
          company_size_range: string
          created_at: string
          created_by: string | null
          data_source: string | null
          effective_date: string
          id: string
          industry: string
          is_active: boolean
          region: string
          updated_at: string
        }
        Insert: {
          benchmark_data?: Json
          benchmark_type: string
          company_size_range: string
          created_at?: string
          created_by?: string | null
          data_source?: string | null
          effective_date: string
          id?: string
          industry: string
          is_active?: boolean
          region: string
          updated_at?: string
        }
        Update: {
          benchmark_data?: Json
          benchmark_type?: string
          company_size_range?: string
          created_at?: string
          created_by?: string | null
          data_source?: string | null
          effective_date?: string
          id?: string
          industry?: string
          is_active?: boolean
          region?: string
          updated_at?: string
        }
        Relationships: []
      }
      benefitsiq_plan_comparisons: {
        Row: {
          company_id: string | null
          comparison_criteria: Json
          comparison_name: string
          comparison_results: Json
          created_at: string
          created_by: string
          id: string
          plan_ids: string[]
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          comparison_criteria?: Json
          comparison_name: string
          comparison_results?: Json
          created_at?: string
          created_by: string
          id?: string
          plan_ids?: string[]
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          comparison_criteria?: Json
          comparison_name?: string
          comparison_results?: Json
          created_at?: string
          created_by?: string
          id?: string
          plan_ids?: string[]
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "benefitsiq_plan_comparisons_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      benefitsiq_risk_adjustments: {
        Row: {
          adjusted_score: number
          adjustment_factors: Json
          company_id: string | null
          created_at: string
          current_score: number
          id: string
          impact_analysis: Json
          risk_category: string
          updated_at: string
        }
        Insert: {
          adjusted_score?: number
          adjustment_factors?: Json
          company_id?: string | null
          created_at?: string
          current_score?: number
          id?: string
          impact_analysis?: Json
          risk_category: string
          updated_at?: string
        }
        Update: {
          adjusted_score?: number
          adjustment_factors?: Json
          company_id?: string | null
          created_at?: string
          current_score?: number
          id?: string
          impact_analysis?: Json
          risk_category?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "benefitsiq_risk_adjustments_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      benefitsiq_roi_analyses: {
        Row: {
          analysis_name: string
          company_id: string | null
          created_at: string
          created_by: string
          current_benefits_cost: number
          id: string
          propgen_workflow_id: string | null
          proposed_benefits_cost: number
          roi_calculations: Json
          updated_at: string
          visual_data: Json
        }
        Insert: {
          analysis_name: string
          company_id?: string | null
          created_at?: string
          created_by: string
          current_benefits_cost?: number
          id?: string
          propgen_workflow_id?: string | null
          proposed_benefits_cost?: number
          roi_calculations?: Json
          updated_at?: string
          visual_data?: Json
        }
        Update: {
          analysis_name?: string
          company_id?: string | null
          created_at?: string
          created_by?: string
          current_benefits_cost?: number
          id?: string
          propgen_workflow_id?: string | null
          proposed_benefits_cost?: number
          roi_calculations?: Json
          updated_at?: string
          visual_data?: Json
        }
        Relationships: [
          {
            foreignKeyName: "benefitsiq_roi_analyses_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      billing_integrations: {
        Row: {
          base_retainer_amount: number | null
          billing_period_end: string
          billing_period_start: string
          case_hours_breakdown: Json | null
          company_id: string
          created_at: string | null
          discount_applied: number | null
          discount_reason: string | null
          hours_included: number | null
          hours_used: number | null
          id: string
          invoice_generated: boolean | null
          invoice_id: string | null
          overage_amount: number | null
          overage_hours: number | null
          overage_rate: number | null
          retainer_id: string
          service_hours_breakdown: Json | null
          status: string | null
          updated_at: string | null
        }
        Insert: {
          base_retainer_amount?: number | null
          billing_period_end: string
          billing_period_start: string
          case_hours_breakdown?: Json | null
          company_id: string
          created_at?: string | null
          discount_applied?: number | null
          discount_reason?: string | null
          hours_included?: number | null
          hours_used?: number | null
          id?: string
          invoice_generated?: boolean | null
          invoice_id?: string | null
          overage_amount?: number | null
          overage_hours?: number | null
          overage_rate?: number | null
          retainer_id: string
          service_hours_breakdown?: Json | null
          status?: string | null
          updated_at?: string | null
        }
        Update: {
          base_retainer_amount?: number | null
          billing_period_end?: string
          billing_period_start?: string
          case_hours_breakdown?: Json | null
          company_id?: string
          created_at?: string | null
          discount_applied?: number | null
          discount_reason?: string | null
          hours_included?: number | null
          hours_used?: number | null
          id?: string
          invoice_generated?: boolean | null
          invoice_id?: string | null
          overage_amount?: number | null
          overage_hours?: number | null
          overage_rate?: number | null
          retainer_id?: string
          service_hours_breakdown?: Json | null
          status?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "billing_integrations_retainer_id_fkey"
            columns: ["retainer_id"]
            isOneToOne: false
            referencedRelation: "hroiq_client_retainers"
            referencedColumns: ["id"]
          },
        ]
      }
      blog_categories: {
        Row: {
          color: string | null
          created_at: string
          description: string | null
          id: string
          is_active: boolean
          name: string
          slug: string
          updated_at: string
        }
        Insert: {
          color?: string | null
          created_at?: string
          description?: string | null
          id?: string
          is_active?: boolean
          name: string
          slug: string
          updated_at?: string
        }
        Update: {
          color?: string | null
          created_at?: string
          description?: string | null
          id?: string
          is_active?: boolean
          name?: string
          slug?: string
          updated_at?: string
        }
        Relationships: []
      }
      blog_posts: {
        Row: {
          author_id: string
          category_id: string | null
          content: string
          created_at: string
          excerpt: string | null
          featured: boolean
          featured_image_url: string | null
          id: string
          meta_description: string | null
          meta_title: string | null
          published_at: string | null
          slug: string
          status: string
          tags: string[] | null
          title: string
          updated_at: string
        }
        Insert: {
          author_id: string
          category_id?: string | null
          content: string
          created_at?: string
          excerpt?: string | null
          featured?: boolean
          featured_image_url?: string | null
          id?: string
          meta_description?: string | null
          meta_title?: string | null
          published_at?: string | null
          slug: string
          status?: string
          tags?: string[] | null
          title: string
          updated_at?: string
        }
        Update: {
          author_id?: string
          category_id?: string | null
          content?: string
          created_at?: string
          excerpt?: string | null
          featured?: boolean
          featured_image_url?: string | null
          id?: string
          meta_description?: string | null
          meta_title?: string | null
          published_at?: string | null
          slug?: string
          status?: string
          tags?: string[] | null
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "blog_posts_category_id_fkey"
            columns: ["category_id"]
            isOneToOne: false
            referencedRelation: "blog_categories"
            referencedColumns: ["id"]
          },
        ]
      }
      bulk_operations: {
        Row: {
          company_id: string | null
          completed_at: string | null
          created_at: string
          created_by: string
          error_log: string[] | null
          failed_items: number
          id: string
          operation_data: Json
          operation_type: string
          processed_items: number
          results: Json | null
          started_at: string | null
          status: string
          successful_items: number
          total_items: number
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          completed_at?: string | null
          created_at?: string
          created_by: string
          error_log?: string[] | null
          failed_items?: number
          id?: string
          operation_data?: Json
          operation_type: string
          processed_items?: number
          results?: Json | null
          started_at?: string | null
          status?: string
          successful_items?: number
          total_items?: number
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          completed_at?: string | null
          created_at?: string
          created_by?: string
          error_log?: string[] | null
          failed_items?: number
          id?: string
          operation_data?: Json
          operation_type?: string
          processed_items?: number
          results?: Json | null
          started_at?: string | null
          status?: string
          successful_items?: number
          total_items?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "bulk_operations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      carriers: {
        Row: {
          contact_info: Json
          created_at: string
          created_by: string | null
          edi_settings: Json
          id: string
          name: string
          type: Database["public"]["Enums"]["carrier_type"]
          updated_at: string
        }
        Insert: {
          contact_info?: Json
          created_at?: string
          created_by?: string | null
          edi_settings?: Json
          id?: string
          name: string
          type: Database["public"]["Enums"]["carrier_type"]
          updated_at?: string
        }
        Update: {
          contact_info?: Json
          created_at?: string
          created_by?: string | null
          edi_settings?: Json
          id?: string
          name?: string
          type?: Database["public"]["Enums"]["carrier_type"]
          updated_at?: string
        }
        Relationships: []
      }
      case_activities: {
        Row: {
          action: string
          activity_type: string
          actor: string | null
          case_id: string | null
          content: string | null
          created_at: string | null
          created_by: string | null
          details: Json | null
          id: string
          metadata: Json | null
        }
        Insert: {
          action: string
          activity_type: string
          actor?: string | null
          case_id?: string | null
          content?: string | null
          created_at?: string | null
          created_by?: string | null
          details?: Json | null
          id?: string
          metadata?: Json | null
        }
        Update: {
          action?: string
          activity_type?: string
          actor?: string | null
          case_id?: string | null
          content?: string | null
          created_at?: string | null
          created_by?: string | null
          details?: Json | null
          id?: string
          metadata?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "case_activities_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
        ]
      }
      case_client_feedback: {
        Row: {
          case_id: string
          client_email: string | null
          client_name: string | null
          comment: string | null
          feedback_type: string
          id: string
          sentiment_score: number | null
          submitted_at: string
        }
        Insert: {
          case_id: string
          client_email?: string | null
          client_name?: string | null
          comment?: string | null
          feedback_type: string
          id?: string
          sentiment_score?: number | null
          submitted_at?: string
        }
        Update: {
          case_id?: string
          client_email?: string | null
          client_name?: string | null
          comment?: string | null
          feedback_type?: string
          id?: string
          sentiment_score?: number | null
          submitted_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "case_client_feedback_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
        ]
      }
      case_documents: {
        Row: {
          case_id: string
          created_at: string
          description: string | null
          document_type: string
          file_name: string
          file_path: string
          file_size: number
          id: string
          is_confidential: boolean
          metadata: Json | null
          mime_type: string
          status: string
          tags: string[] | null
          updated_at: string
          uploaded_at: string
          uploaded_by: string
        }
        Insert: {
          case_id: string
          created_at?: string
          description?: string | null
          document_type: string
          file_name: string
          file_path: string
          file_size: number
          id?: string
          is_confidential?: boolean
          metadata?: Json | null
          mime_type: string
          status?: string
          tags?: string[] | null
          updated_at?: string
          uploaded_at?: string
          uploaded_by: string
        }
        Update: {
          case_id?: string
          created_at?: string
          description?: string | null
          document_type?: string
          file_name?: string
          file_path?: string
          file_size?: number
          id?: string
          is_confidential?: boolean
          metadata?: Json | null
          mime_type?: string
          status?: string
          tags?: string[] | null
          updated_at?: string
          uploaded_at?: string
          uploaded_by?: string
        }
        Relationships: []
      }
      case_files: {
        Row: {
          case_id: string | null
          file_name: string
          file_path: string
          file_size: number | null
          file_type: string | null
          file_url: string
          id: string
          uploaded_at: string | null
          uploaded_by: string | null
        }
        Insert: {
          case_id?: string | null
          file_name: string
          file_path: string
          file_size?: number | null
          file_type?: string | null
          file_url: string
          id?: string
          uploaded_at?: string | null
          uploaded_by?: string | null
        }
        Update: {
          case_id?: string | null
          file_name?: string
          file_path?: string
          file_size?: number | null
          file_type?: string | null
          file_url?: string
          id?: string
          uploaded_at?: string | null
          uploaded_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "case_files_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
        ]
      }
      case_routing_rules: {
        Row: {
          auto_assign: boolean | null
          case_type: string
          company_id: string
          consultant_id: string
          created_at: string | null
          id: string
          max_concurrent_cases: number | null
          priority_level: string
          skill_requirements: Json | null
          updated_at: string | null
        }
        Insert: {
          auto_assign?: boolean | null
          case_type: string
          company_id: string
          consultant_id: string
          created_at?: string | null
          id?: string
          max_concurrent_cases?: number | null
          priority_level: string
          skill_requirements?: Json | null
          updated_at?: string | null
        }
        Update: {
          auto_assign?: boolean | null
          case_type?: string
          company_id?: string
          consultant_id?: string
          created_at?: string | null
          id?: string
          max_concurrent_cases?: number | null
          priority_level?: string
          skill_requirements?: Json | null
          updated_at?: string | null
        }
        Relationships: []
      }
      case_share_tokens: {
        Row: {
          case_id: string
          client_email: string | null
          created_at: string
          created_by: string | null
          expires_at: string | null
          id: string
          is_active: boolean
          share_token: string
        }
        Insert: {
          case_id: string
          client_email?: string | null
          created_at?: string
          created_by?: string | null
          expires_at?: string | null
          id?: string
          is_active?: boolean
          share_token: string
        }
        Update: {
          case_id?: string
          client_email?: string | null
          created_at?: string
          created_by?: string | null
          expires_at?: string | null
          id?: string
          is_active?: boolean
          share_token?: string
        }
        Relationships: [
          {
            foreignKeyName: "case_share_tokens_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
        ]
      }
      case_sla_configs: {
        Row: {
          case_type: string
          created_at: string | null
          escalation_time_hours: number | null
          id: string
          is_active: boolean | null
          priority: string
          resolution_time_hours: number
          response_time_hours: number
          updated_at: string | null
        }
        Insert: {
          case_type: string
          created_at?: string | null
          escalation_time_hours?: number | null
          id?: string
          is_active?: boolean | null
          priority: string
          resolution_time_hours: number
          response_time_hours: number
          updated_at?: string | null
        }
        Update: {
          case_type?: string
          created_at?: string | null
          escalation_time_hours?: number | null
          id?: string
          is_active?: boolean | null
          priority?: string
          resolution_time_hours?: number
          response_time_hours?: number
          updated_at?: string | null
        }
        Relationships: []
      }
      case_template_steps: {
        Row: {
          assigned_to_role: string | null
          case_template_id: string
          created_at: string
          description: string | null
          due_days: number
          id: string
          metadata: Json | null
          required_fields: Json | null
          step_order: number
          title: string
          updated_at: string
        }
        Insert: {
          assigned_to_role?: string | null
          case_template_id: string
          created_at?: string
          description?: string | null
          due_days?: number
          id?: string
          metadata?: Json | null
          required_fields?: Json | null
          step_order: number
          title: string
          updated_at?: string
        }
        Update: {
          assigned_to_role?: string | null
          case_template_id?: string
          created_at?: string
          description?: string | null
          due_days?: number
          id?: string
          metadata?: Json | null
          required_fields?: Json | null
          step_order?: number
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "case_template_steps_case_template_id_fkey"
            columns: ["case_template_id"]
            isOneToOne: false
            referencedRelation: "case_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      case_templates: {
        Row: {
          category: string
          company_id: string | null
          created_at: string
          created_by: string | null
          description: string | null
          estimated_duration_days: number
          id: string
          is_active: boolean
          name: string
          updated_at: string
        }
        Insert: {
          category: string
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          estimated_duration_days?: number
          id?: string
          is_active?: boolean
          name: string
          updated_at?: string
        }
        Update: {
          category?: string
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          estimated_duration_days?: number
          id?: string
          is_active?: boolean
          name?: string
          updated_at?: string
        }
        Relationships: []
      }
      cases: {
        Row: {
          actual_hours: number | null
          assigned_consultant_id: string | null
          assigned_team: string | null
          assigned_to: string | null
          billable_hours: number | null
          billed_to_retainer: boolean | null
          client_id: string | null
          client_priority: string | null
          client_viewable: boolean | null
          closed_at: string | null
          company_id: string | null
          created_at: string | null
          created_by: string | null
          description: string | null
          estimated_hours: number | null
          external_reference: string | null
          id: string
          priority: string | null
          related_company_id: string | null
          related_contact_email: string | null
          related_employees: string[] | null
          retainer_id: string | null
          source: string | null
          status: string | null
          tags: string[] | null
          title: string
          type: string | null
          updated_at: string | null
          visibility: string | null
        }
        Insert: {
          actual_hours?: number | null
          assigned_consultant_id?: string | null
          assigned_team?: string | null
          assigned_to?: string | null
          billable_hours?: number | null
          billed_to_retainer?: boolean | null
          client_id?: string | null
          client_priority?: string | null
          client_viewable?: boolean | null
          closed_at?: string | null
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          description?: string | null
          estimated_hours?: number | null
          external_reference?: string | null
          id?: string
          priority?: string | null
          related_company_id?: string | null
          related_contact_email?: string | null
          related_employees?: string[] | null
          retainer_id?: string | null
          source?: string | null
          status?: string | null
          tags?: string[] | null
          title: string
          type?: string | null
          updated_at?: string | null
          visibility?: string | null
        }
        Update: {
          actual_hours?: number | null
          assigned_consultant_id?: string | null
          assigned_team?: string | null
          assigned_to?: string | null
          billable_hours?: number | null
          billed_to_retainer?: boolean | null
          client_id?: string | null
          client_priority?: string | null
          client_viewable?: boolean | null
          closed_at?: string | null
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          description?: string | null
          estimated_hours?: number | null
          external_reference?: string | null
          id?: string
          priority?: string | null
          related_company_id?: string | null
          related_contact_email?: string | null
          related_employees?: string[] | null
          retainer_id?: string | null
          source?: string | null
          status?: string | null
          tags?: string[] | null
          title?: string
          type?: string | null
          updated_at?: string | null
          visibility?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "cases_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "cases_retainer_id_fkey"
            columns: ["retainer_id"]
            isOneToOne: false
            referencedRelation: "hroiq_client_retainers"
            referencedColumns: ["id"]
          },
        ]
      }
      certificate_templates: {
        Row: {
          company_id: string | null
          created_at: string | null
          description: string | null
          id: string
          is_default: boolean | null
          name: string
          template_data: Json
          updated_at: string | null
        }
        Insert: {
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_default?: boolean | null
          name: string
          template_data?: Json
          updated_at?: string | null
        }
        Update: {
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_default?: boolean | null
          name?: string
          template_data?: Json
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "certificate_templates_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      certificates: {
        Row: {
          certificate_data: Json | null
          certificate_number: string
          company_id: string | null
          completion_date: string | null
          course_id: string | null
          course_title: string | null
          created_at: string
          employee_id: string
          expires_at: string | null
          id: string
          instructor_name: string | null
          issued_at: string
          learner_name: string | null
          pdf_url: string | null
          qr_code_data: string | null
          score: number | null
          status: string | null
          training_module_id: string
          updated_at: string
          user_id: string | null
          verification_token: string
        }
        Insert: {
          certificate_data?: Json | null
          certificate_number: string
          company_id?: string | null
          completion_date?: string | null
          course_id?: string | null
          course_title?: string | null
          created_at?: string
          employee_id: string
          expires_at?: string | null
          id?: string
          instructor_name?: string | null
          issued_at?: string
          learner_name?: string | null
          pdf_url?: string | null
          qr_code_data?: string | null
          score?: number | null
          status?: string | null
          training_module_id: string
          updated_at?: string
          user_id?: string | null
          verification_token: string
        }
        Update: {
          certificate_data?: Json | null
          certificate_number?: string
          company_id?: string | null
          completion_date?: string | null
          course_id?: string | null
          course_title?: string | null
          created_at?: string
          employee_id?: string
          expires_at?: string | null
          id?: string
          instructor_name?: string | null
          issued_at?: string
          learner_name?: string | null
          pdf_url?: string | null
          qr_code_data?: string | null
          score?: number | null
          status?: string | null
          training_module_id?: string
          updated_at?: string
          user_id?: string | null
          verification_token?: string
        }
        Relationships: [
          {
            foreignKeyName: "certificates_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "certificates_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "certificates_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      chart_of_accounts: {
        Row: {
          account_number: string
          account_type: string
          company_id: string
          created_at: string
          created_by: string | null
          current_balance: number | null
          description: string | null
          detail_type: string | null
          full_name: string
          id: string
          initial_balance: number | null
          is_active: boolean | null
          parent_account_id: string | null
          sort_order: number | null
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          account_number: string
          account_type: string
          company_id: string
          created_at?: string
          created_by?: string | null
          current_balance?: number | null
          description?: string | null
          detail_type?: string | null
          full_name: string
          id?: string
          initial_balance?: number | null
          is_active?: boolean | null
          parent_account_id?: string | null
          sort_order?: number | null
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          account_number?: string
          account_type?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          current_balance?: number | null
          description?: string | null
          detail_type?: string | null
          full_name?: string
          id?: string
          initial_balance?: number | null
          is_active?: boolean | null
          parent_account_id?: string | null
          sort_order?: number | null
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "chart_of_accounts_parent_account_id_fkey"
            columns: ["parent_account_id"]
            isOneToOne: false
            referencedRelation: "chart_of_accounts"
            referencedColumns: ["id"]
          },
        ]
      }
      chat_messages: {
        Row: {
          ai_response: string | null
          created_at: string
          id: string
          is_escalation: boolean | null
          message_id: string
          requires_review: boolean | null
          response_time_ms: number | null
          review_reason: string | null
          session_id: string
          timestamp: string
          user_message: string
        }
        Insert: {
          ai_response?: string | null
          created_at?: string
          id?: string
          is_escalation?: boolean | null
          message_id: string
          requires_review?: boolean | null
          response_time_ms?: number | null
          review_reason?: string | null
          session_id: string
          timestamp?: string
          user_message: string
        }
        Update: {
          ai_response?: string | null
          created_at?: string
          id?: string
          is_escalation?: boolean | null
          message_id?: string
          requires_review?: boolean | null
          response_time_ms?: number | null
          review_reason?: string | null
          session_id?: string
          timestamp?: string
          user_message?: string
        }
        Relationships: [
          {
            foreignKeyName: "chat_messages_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "chat_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      chat_notifications: {
        Row: {
          created_at: string
          description: string | null
          id: string
          is_read: boolean | null
          message_id: string | null
          notification_type: string
          notified_users: string[] | null
          session_id: string | null
          title: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          description?: string | null
          id?: string
          is_read?: boolean | null
          message_id?: string | null
          notification_type: string
          notified_users?: string[] | null
          session_id?: string | null
          title: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          description?: string | null
          id?: string
          is_read?: boolean | null
          message_id?: string | null
          notification_type?: string
          notified_users?: string[] | null
          session_id?: string | null
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "chat_notifications_message_id_fkey"
            columns: ["message_id"]
            isOneToOne: false
            referencedRelation: "chat_messages"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "chat_notifications_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "chat_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      chat_sessions: {
        Row: {
          created_at: string
          ended_at: string | null
          id: string
          requires_review: boolean | null
          reviewed: boolean | null
          reviewed_at: string | null
          reviewed_by: string | null
          session_id: string
          started_at: string
          total_messages: number | null
          updated_at: string
          user_agent: string | null
          user_ip: string | null
        }
        Insert: {
          created_at?: string
          ended_at?: string | null
          id?: string
          requires_review?: boolean | null
          reviewed?: boolean | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          session_id: string
          started_at?: string
          total_messages?: number | null
          updated_at?: string
          user_agent?: string | null
          user_ip?: string | null
        }
        Update: {
          created_at?: string
          ended_at?: string | null
          id?: string
          requires_review?: boolean | null
          reviewed?: boolean | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          session_id?: string
          started_at?: string
          total_messages?: number | null
          updated_at?: string
          user_agent?: string | null
          user_ip?: string | null
        }
        Relationships: []
      }
      client_accounts: {
        Row: {
          account_age_days: number | null
          account_manager: string | null
          account_status: string
          company_id: string
          compliance_flags: Json | null
          compliance_score: number | null
          created_at: string
          halo_risk_score: number | null
          id: string
          last_payment_issue: string | null
          last_payroll_date: string | null
          metadata: Json | null
          monthly_volume: number | null
          next_payroll_date: string | null
          payment_method: string | null
          payroll_frequency: string | null
          risk_factors: Json | null
          service_types: string[] | null
          total_employees: number | null
          updated_at: string
        }
        Insert: {
          account_age_days?: number | null
          account_manager?: string | null
          account_status?: string
          company_id: string
          compliance_flags?: Json | null
          compliance_score?: number | null
          created_at?: string
          halo_risk_score?: number | null
          id?: string
          last_payment_issue?: string | null
          last_payroll_date?: string | null
          metadata?: Json | null
          monthly_volume?: number | null
          next_payroll_date?: string | null
          payment_method?: string | null
          payroll_frequency?: string | null
          risk_factors?: Json | null
          service_types?: string[] | null
          total_employees?: number | null
          updated_at?: string
        }
        Update: {
          account_age_days?: number | null
          account_manager?: string | null
          account_status?: string
          company_id?: string
          compliance_flags?: Json | null
          compliance_score?: number | null
          created_at?: string
          halo_risk_score?: number | null
          id?: string
          last_payment_issue?: string | null
          last_payroll_date?: string | null
          metadata?: Json | null
          monthly_volume?: number | null
          next_payroll_date?: string | null
          payment_method?: string | null
          payroll_frequency?: string | null
          risk_factors?: Json | null
          service_types?: string[] | null
          total_employees?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "client_accounts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      client_approval_history: {
        Row: {
          action: string
          client_id: string
          created_at: string
          id: string
          new_status: string | null
          notes: string | null
          old_status: string | null
          performed_by: string
        }
        Insert: {
          action: string
          client_id: string
          created_at?: string
          id?: string
          new_status?: string | null
          notes?: string | null
          old_status?: string | null
          performed_by: string
        }
        Update: {
          action?: string
          client_id?: string
          created_at?: string
          id?: string
          new_status?: string | null
          notes?: string | null
          old_status?: string | null
          performed_by?: string
        }
        Relationships: [
          {
            foreignKeyName: "client_approval_history_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
        ]
      }
      client_conversion_audit: {
        Row: {
          client_id: string
          company_id: string | null
          conversion_type: string
          converted_at: string
          converted_by: string | null
          created_at: string
          id: string
          notes: string | null
          source_data: Json | null
        }
        Insert: {
          client_id: string
          company_id?: string | null
          conversion_type: string
          converted_at?: string
          converted_by?: string | null
          created_at?: string
          id?: string
          notes?: string | null
          source_data?: Json | null
        }
        Update: {
          client_id?: string
          company_id?: string | null
          conversion_type?: string
          converted_at?: string
          converted_by?: string | null
          created_at?: string
          id?: string
          notes?: string | null
          source_data?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "client_conversion_audit_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      client_deductions_config: {
        Row: {
          client_id: string
          cost_center_codes: string[] | null
          created_at: string
          custom_amount: number | null
          custom_formula: string | null
          custom_percentage: number | null
          deduction_id: string
          department_codes: string[] | null
          effective_date: string | null
          id: string
          is_enabled: boolean | null
          is_inherited: boolean | null
          job_codes: string[] | null
          override_created_at: string | null
          parent_deduction_id: string | null
          updated_at: string
        }
        Insert: {
          client_id: string
          cost_center_codes?: string[] | null
          created_at?: string
          custom_amount?: number | null
          custom_formula?: string | null
          custom_percentage?: number | null
          deduction_id: string
          department_codes?: string[] | null
          effective_date?: string | null
          id?: string
          is_enabled?: boolean | null
          is_inherited?: boolean | null
          job_codes?: string[] | null
          override_created_at?: string | null
          parent_deduction_id?: string | null
          updated_at?: string
        }
        Update: {
          client_id?: string
          cost_center_codes?: string[] | null
          created_at?: string
          custom_amount?: number | null
          custom_formula?: string | null
          custom_percentage?: number | null
          deduction_id?: string
          department_codes?: string[] | null
          effective_date?: string | null
          id?: string
          is_enabled?: boolean | null
          is_inherited?: boolean | null
          job_codes?: string[] | null
          override_created_at?: string | null
          parent_deduction_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "client_deductions_config_deduction_id_fkey"
            columns: ["deduction_id"]
            isOneToOne: false
            referencedRelation: "deduction_definitions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "client_deductions_config_parent_deduction_id_fkey"
            columns: ["parent_deduction_id"]
            isOneToOne: false
            referencedRelation: "deduction_definitions"
            referencedColumns: ["id"]
          },
        ]
      }
      client_documents: {
        Row: {
          client_id: string | null
          document_type: string
          file_name: string
          file_path: string
          file_size: number | null
          id: string
          mime_type: string | null
          onboarding_profile_id: string | null
          service_type: string | null
          uploaded_at: string | null
          uploaded_by: string | null
        }
        Insert: {
          client_id?: string | null
          document_type: string
          file_name: string
          file_path: string
          file_size?: number | null
          id?: string
          mime_type?: string | null
          onboarding_profile_id?: string | null
          service_type?: string | null
          uploaded_at?: string | null
          uploaded_by?: string | null
        }
        Update: {
          client_id?: string | null
          document_type?: string
          file_name?: string
          file_path?: string
          file_size?: number | null
          id?: string
          mime_type?: string | null
          onboarding_profile_id?: string | null
          service_type?: string | null
          uploaded_at?: string | null
          uploaded_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "client_documents_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "client_documents_onboarding_profile_id_fkey"
            columns: ["onboarding_profile_id"]
            isOneToOne: false
            referencedRelation: "client_onboarding_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      client_earnings_config: {
        Row: {
          client_id: string
          cost_center_codes: string[] | null
          created_at: string
          custom_amount: number | null
          custom_rate: number | null
          department_codes: string[] | null
          effective_date: string | null
          id: string
          is_enabled: boolean | null
          is_inherited: boolean | null
          job_codes: string[] | null
          override_created_at: string | null
          parent_pay_type_id: string | null
          pay_type_id: string
          updated_at: string
        }
        Insert: {
          client_id: string
          cost_center_codes?: string[] | null
          created_at?: string
          custom_amount?: number | null
          custom_rate?: number | null
          department_codes?: string[] | null
          effective_date?: string | null
          id?: string
          is_enabled?: boolean | null
          is_inherited?: boolean | null
          job_codes?: string[] | null
          override_created_at?: string | null
          parent_pay_type_id?: string | null
          pay_type_id: string
          updated_at?: string
        }
        Update: {
          client_id?: string
          cost_center_codes?: string[] | null
          created_at?: string
          custom_amount?: number | null
          custom_rate?: number | null
          department_codes?: string[] | null
          effective_date?: string | null
          id?: string
          is_enabled?: boolean | null
          is_inherited?: boolean | null
          job_codes?: string[] | null
          override_created_at?: string | null
          parent_pay_type_id?: string | null
          pay_type_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "client_earnings_config_parent_pay_type_id_fkey"
            columns: ["parent_pay_type_id"]
            isOneToOne: false
            referencedRelation: "pay_types"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "client_earnings_config_pay_type_id_fkey"
            columns: ["pay_type_id"]
            isOneToOne: false
            referencedRelation: "pay_types"
            referencedColumns: ["id"]
          },
        ]
      }
      client_job_title_audit: {
        Row: {
          action_type: string
          changed_at: string
          changed_by: string
          id: string
          job_title_id: string
          new_values: Json | null
          old_values: Json | null
        }
        Insert: {
          action_type: string
          changed_at?: string
          changed_by: string
          id?: string
          job_title_id: string
          new_values?: Json | null
          old_values?: Json | null
        }
        Update: {
          action_type?: string
          changed_at?: string
          changed_by?: string
          id?: string
          job_title_id?: string
          new_values?: Json | null
          old_values?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "client_job_title_audit_job_title_id_fkey"
            columns: ["job_title_id"]
            isOneToOne: false
            referencedRelation: "client_job_titles"
            referencedColumns: ["id"]
          },
        ]
      }
      client_job_titles: {
        Row: {
          client_id: string
          created_at: string
          created_by: string
          custom_description: string | null
          effective_date: string
          id: string
          is_active: boolean
          job_description_id: string | null
          title: string
          updated_at: string
          wc_code_id: string
        }
        Insert: {
          client_id: string
          created_at?: string
          created_by: string
          custom_description?: string | null
          effective_date: string
          id?: string
          is_active?: boolean
          job_description_id?: string | null
          title: string
          updated_at?: string
          wc_code_id: string
        }
        Update: {
          client_id?: string
          created_at?: string
          created_by?: string
          custom_description?: string | null
          effective_date?: string
          id?: string
          is_active?: boolean
          job_description_id?: string | null
          title?: string
          updated_at?: string
          wc_code_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "client_job_titles_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "client_job_titles_job_description_id_fkey"
            columns: ["job_description_id"]
            isOneToOne: false
            referencedRelation: "global_job_descriptions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "client_job_titles_wc_code_id_fkey"
            columns: ["wc_code_id"]
            isOneToOne: false
            referencedRelation: "workers_comp_codes"
            referencedColumns: ["id"]
          },
        ]
      }
      client_location_time_rules: {
        Row: {
          client_id: string
          created_at: string
          daily_dt_threshold: number
          daily_ot_threshold: number
          id: string
          location_name: string
          notes: string | null
          seven_day_rule: boolean
          state: string
          updated_at: string
          weekly_ot_threshold: number
          workweek_start_day: string
        }
        Insert: {
          client_id: string
          created_at?: string
          daily_dt_threshold?: number
          daily_ot_threshold?: number
          id?: string
          location_name: string
          notes?: string | null
          seven_day_rule?: boolean
          state?: string
          updated_at?: string
          weekly_ot_threshold?: number
          workweek_start_day?: string
        }
        Update: {
          client_id?: string
          created_at?: string
          daily_dt_threshold?: number
          daily_ot_threshold?: number
          id?: string
          location_name?: string
          notes?: string | null
          seven_day_rule?: boolean
          state?: string
          updated_at?: string
          weekly_ot_threshold?: number
          workweek_start_day?: string
        }
        Relationships: []
      }
      client_module_access: {
        Row: {
          client_id: string
          created_at: string
          disabled_at: string | null
          enabled_at: string | null
          enabled_by: string | null
          id: string
          is_enabled: boolean
          module_id: string
          module_type: string
          settings: Json | null
          updated_at: string
        }
        Insert: {
          client_id: string
          created_at?: string
          disabled_at?: string | null
          enabled_at?: string | null
          enabled_by?: string | null
          id?: string
          is_enabled?: boolean
          module_id: string
          module_type?: string
          settings?: Json | null
          updated_at?: string
        }
        Update: {
          client_id?: string
          created_at?: string
          disabled_at?: string | null
          enabled_at?: string | null
          enabled_by?: string | null
          id?: string
          is_enabled?: boolean
          module_id?: string
          module_type?: string
          settings?: Json | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "client_module_access_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      client_module_settings: {
        Row: {
          client_id: string
          created_at: string
          id: string
          last_updated: string
          module_name: string
          settings: Json
          updated_by: string | null
          version: string
        }
        Insert: {
          client_id: string
          created_at?: string
          id?: string
          last_updated?: string
          module_name: string
          settings?: Json
          updated_by?: string | null
          version?: string
        }
        Update: {
          client_id?: string
          created_at?: string
          id?: string
          last_updated?: string
          module_name?: string
          settings?: Json
          updated_by?: string | null
          version?: string
        }
        Relationships: [
          {
            foreignKeyName: "client_module_settings_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      client_notification_settings: {
        Row: {
          auto_feedback_request: boolean
          case_created_notifications: boolean
          company_id: string
          created_at: string
          id: string
          notification_email: string | null
          public_sharing_enabled: boolean
          resolution_notifications: boolean
          status_change_notifications: boolean
          updated_at: string
        }
        Insert: {
          auto_feedback_request?: boolean
          case_created_notifications?: boolean
          company_id: string
          created_at?: string
          id?: string
          notification_email?: string | null
          public_sharing_enabled?: boolean
          resolution_notifications?: boolean
          status_change_notifications?: boolean
          updated_at?: string
        }
        Update: {
          auto_feedback_request?: boolean
          case_created_notifications?: boolean
          company_id?: string
          created_at?: string
          id?: string
          notification_email?: string | null
          public_sharing_enabled?: boolean
          resolution_notifications?: boolean
          status_change_notifications?: boolean
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "client_notification_settings_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: true
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      client_onboarding_audit: {
        Row: {
          action_type: string
          change_summary: string | null
          field_changed: string | null
          id: string
          ip_address: unknown | null
          new_value: Json | null
          old_value: Json | null
          onboarding_profile_id: string | null
          performed_at: string | null
          performed_by: string | null
          user_agent: string | null
        }
        Insert: {
          action_type: string
          change_summary?: string | null
          field_changed?: string | null
          id?: string
          ip_address?: unknown | null
          new_value?: Json | null
          old_value?: Json | null
          onboarding_profile_id?: string | null
          performed_at?: string | null
          performed_by?: string | null
          user_agent?: string | null
        }
        Update: {
          action_type?: string
          change_summary?: string | null
          field_changed?: string | null
          id?: string
          ip_address?: unknown | null
          new_value?: Json | null
          old_value?: Json | null
          onboarding_profile_id?: string | null
          performed_at?: string | null
          performed_by?: string | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "client_onboarding_audit_onboarding_profile_id_fkey"
            columns: ["onboarding_profile_id"]
            isOneToOne: false
            referencedRelation: "client_onboarding_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      client_onboarding_profiles: {
        Row: {
          aso_data: Json | null
          assigned_account_manager: string | null
          client_id: string | null
          client_status: string | null
          company_logo_url: string | null
          company_name: string
          created_at: string | null
          created_by: string | null
          dba_name: string | null
          entity_type: string | null
          fein: string | null
          hro_data: Json | null
          id: string
          industry_type: string | null
          lms_data: Json | null
          main_business_address: Json | null
          notes: string | null
          number_of_employees: number | null
          payroll_data: Json | null
          peo_data: Json | null
          primary_contact: Json | null
          service_start_date: string | null
          service_types: string[]
          states_of_operation: string[] | null
          updated_at: string | null
          updated_by: string | null
          website: string | null
        }
        Insert: {
          aso_data?: Json | null
          assigned_account_manager?: string | null
          client_id?: string | null
          client_status?: string | null
          company_logo_url?: string | null
          company_name: string
          created_at?: string | null
          created_by?: string | null
          dba_name?: string | null
          entity_type?: string | null
          fein?: string | null
          hro_data?: Json | null
          id?: string
          industry_type?: string | null
          lms_data?: Json | null
          main_business_address?: Json | null
          notes?: string | null
          number_of_employees?: number | null
          payroll_data?: Json | null
          peo_data?: Json | null
          primary_contact?: Json | null
          service_start_date?: string | null
          service_types: string[]
          states_of_operation?: string[] | null
          updated_at?: string | null
          updated_by?: string | null
          website?: string | null
        }
        Update: {
          aso_data?: Json | null
          assigned_account_manager?: string | null
          client_id?: string | null
          client_status?: string | null
          company_logo_url?: string | null
          company_name?: string
          created_at?: string | null
          created_by?: string | null
          dba_name?: string | null
          entity_type?: string | null
          fein?: string | null
          hro_data?: Json | null
          id?: string
          industry_type?: string | null
          lms_data?: Json | null
          main_business_address?: Json | null
          notes?: string | null
          number_of_employees?: number | null
          payroll_data?: Json | null
          peo_data?: Json | null
          primary_contact?: Json | null
          service_start_date?: string | null
          service_types?: string[]
          states_of_operation?: string[] | null
          updated_at?: string | null
          updated_by?: string | null
          website?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "client_onboarding_profiles_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      client_pay_configurations: {
        Row: {
          client_id: string
          created_at: string | null
          created_by: string | null
          id: string
          is_active: boolean | null
          pay_frequency: string
          pay_group_ids: string[] | null
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          client_id: string
          created_at?: string | null
          created_by?: string | null
          id?: string
          is_active?: boolean | null
          pay_frequency: string
          pay_group_ids?: string[] | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          client_id?: string
          created_at?: string | null
          created_by?: string | null
          id?: string
          is_active?: boolean | null
          pay_frequency?: string
          pay_group_ids?: string[] | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "client_pay_configurations_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      client_payroll_settings: {
        Row: {
          client_id: string
          created_at: string | null
          created_by: string | null
          custom_overrides: Json | null
          default_deductions_ids: string[] | null
          default_earnings_ids: string[] | null
          direct_deposit_required: boolean | null
          fein: string | null
          id: string
          local_tax_config: Json | null
          pay_frequency: string | null
          pay_group_id: string | null
          pay_stub_delivery_method: string | null
          payroll_contact_id: string | null
          pto_policy_id: string | null
          suta_account_number: string | null
          updated_at: string | null
          updated_by: string | null
          workers_comp_code_ids: string[] | null
        }
        Insert: {
          client_id: string
          created_at?: string | null
          created_by?: string | null
          custom_overrides?: Json | null
          default_deductions_ids?: string[] | null
          default_earnings_ids?: string[] | null
          direct_deposit_required?: boolean | null
          fein?: string | null
          id?: string
          local_tax_config?: Json | null
          pay_frequency?: string | null
          pay_group_id?: string | null
          pay_stub_delivery_method?: string | null
          payroll_contact_id?: string | null
          pto_policy_id?: string | null
          suta_account_number?: string | null
          updated_at?: string | null
          updated_by?: string | null
          workers_comp_code_ids?: string[] | null
        }
        Update: {
          client_id?: string
          created_at?: string | null
          created_by?: string | null
          custom_overrides?: Json | null
          default_deductions_ids?: string[] | null
          default_earnings_ids?: string[] | null
          direct_deposit_required?: boolean | null
          fein?: string | null
          id?: string
          local_tax_config?: Json | null
          pay_frequency?: string | null
          pay_group_id?: string | null
          pay_stub_delivery_method?: string | null
          payroll_contact_id?: string | null
          pto_policy_id?: string | null
          suta_account_number?: string | null
          updated_at?: string | null
          updated_by?: string | null
          workers_comp_code_ids?: string[] | null
        }
        Relationships: [
          {
            foreignKeyName: "client_payroll_settings_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: true
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      client_sbw9237_modules: {
        Row: {
          client_id: string
          company_id: string
          created_at: string
          created_by: string | null
          custom_scorm_generation_id: string | null
          custom_scorm_package_url: string | null
          custom_scorm_script: string | null
          id: string
          intro_audio_url: string | null
          intro_company_logo_url: string | null
          intro_custom_text: string | null
          intro_scroll_timing_config: Json | null
          published_at: string | null
          published_by: string | null
          scorm_package_url: string | null
          status: string
          updated_at: string
          updated_by: string | null
          use_custom_scorm: boolean | null
          video_url: string | null
          wpv_plan_audio_url: string | null
          wpv_plan_content: string | null
          wpv_plan_file_url: string | null
          wpv_plan_type: string | null
        }
        Insert: {
          client_id: string
          company_id: string
          created_at?: string
          created_by?: string | null
          custom_scorm_generation_id?: string | null
          custom_scorm_package_url?: string | null
          custom_scorm_script?: string | null
          id?: string
          intro_audio_url?: string | null
          intro_company_logo_url?: string | null
          intro_custom_text?: string | null
          intro_scroll_timing_config?: Json | null
          published_at?: string | null
          published_by?: string | null
          scorm_package_url?: string | null
          status?: string
          updated_at?: string
          updated_by?: string | null
          use_custom_scorm?: boolean | null
          video_url?: string | null
          wpv_plan_audio_url?: string | null
          wpv_plan_content?: string | null
          wpv_plan_file_url?: string | null
          wpv_plan_type?: string | null
        }
        Update: {
          client_id?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          custom_scorm_generation_id?: string | null
          custom_scorm_package_url?: string | null
          custom_scorm_script?: string | null
          id?: string
          intro_audio_url?: string | null
          intro_company_logo_url?: string | null
          intro_custom_text?: string | null
          intro_scroll_timing_config?: Json | null
          published_at?: string | null
          published_by?: string | null
          scorm_package_url?: string | null
          status?: string
          updated_at?: string
          updated_by?: string | null
          use_custom_scorm?: boolean | null
          video_url?: string | null
          wpv_plan_audio_url?: string | null
          wpv_plan_content?: string | null
          wpv_plan_file_url?: string | null
          wpv_plan_type?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "client_sbw9237_modules_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: true
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "client_sbw9237_modules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "fk_custom_scorm_generation"
            columns: ["custom_scorm_generation_id"]
            isOneToOne: false
            referencedRelation: "colossyan_generations"
            referencedColumns: ["id"]
          },
        ]
      }
      client_settings_audit: {
        Row: {
          action_type: string
          change_summary: string | null
          changed_at: string
          changed_by: string | null
          client_id: string
          id: string
          ip_address: unknown | null
          module_name: string
          new_settings: Json | null
          new_version: string | null
          old_settings: Json | null
          old_version: string | null
          user_agent: string | null
        }
        Insert: {
          action_type: string
          change_summary?: string | null
          changed_at?: string
          changed_by?: string | null
          client_id: string
          id?: string
          ip_address?: unknown | null
          module_name: string
          new_settings?: Json | null
          new_version?: string | null
          old_settings?: Json | null
          old_version?: string | null
          user_agent?: string | null
        }
        Update: {
          action_type?: string
          change_summary?: string | null
          changed_at?: string
          changed_by?: string | null
          client_id?: string
          id?: string
          ip_address?: unknown | null
          module_name?: string
          new_settings?: Json | null
          new_version?: string | null
          old_settings?: Json | null
          old_version?: string | null
          user_agent?: string | null
        }
        Relationships: []
      }
      client_time_settings: {
        Row: {
          client_id: string
          created_at: string
          custom_rule_notes: string | null
          daily_dt_threshold: number
          daily_ot_threshold: number
          id: string
          seven_day_rule: boolean
          state: string
          updated_at: string
          weekly_ot_threshold: number
          workweek_start_day: string
        }
        Insert: {
          client_id: string
          created_at?: string
          custom_rule_notes?: string | null
          daily_dt_threshold?: number
          daily_ot_threshold?: number
          id?: string
          seven_day_rule?: boolean
          state?: string
          updated_at?: string
          weekly_ot_threshold?: number
          workweek_start_day?: string
        }
        Update: {
          client_id?: string
          created_at?: string
          custom_rule_notes?: string | null
          daily_dt_threshold?: number
          daily_ot_threshold?: number
          id?: string
          seven_day_rule?: boolean
          state?: string
          updated_at?: string
          weekly_ot_threshold?: number
          workweek_start_day?: string
        }
        Relationships: []
      }
      clients: {
        Row: {
          account_manager: string | null
          activated_at: string | null
          brand_identity: Database["public"]["Enums"]["brand_identity"] | null
          client_number: string | null
          company_address_city: string | null
          company_address_country: string | null
          company_address_state: string | null
          company_address_street: string | null
          company_address_zip: string | null
          company_name: string
          company_settings_id: string | null
          contract_end_date: string | null
          contract_start_date: string | null
          contract_value: number
          created_at: string
          currency: string
          date_won: string
          deal_id: string | null
          id: string
          key_contacts: Json | null
          linked_documents: Json | null
          notes: string | null
          onboarding_status: string
          original_deal_owner: string | null
          payment_status: string | null
          plan_started_at: string | null
          plan_type: string | null
          primary_contact_phone: string | null
          profile_locked: boolean | null
          services_purchased: Json | null
          source: string | null
          status: string
          stripe_customer_id: string | null
          stripe_subscription_id: string | null
          subscription_status: string | null
          transaction_id: string | null
          updated_at: string
        }
        Insert: {
          account_manager?: string | null
          activated_at?: string | null
          brand_identity?: Database["public"]["Enums"]["brand_identity"] | null
          client_number?: string | null
          company_address_city?: string | null
          company_address_country?: string | null
          company_address_state?: string | null
          company_address_street?: string | null
          company_address_zip?: string | null
          company_name: string
          company_settings_id?: string | null
          contract_end_date?: string | null
          contract_start_date?: string | null
          contract_value?: number
          created_at?: string
          currency?: string
          date_won: string
          deal_id?: string | null
          id?: string
          key_contacts?: Json | null
          linked_documents?: Json | null
          notes?: string | null
          onboarding_status?: string
          original_deal_owner?: string | null
          payment_status?: string | null
          plan_started_at?: string | null
          plan_type?: string | null
          primary_contact_phone?: string | null
          profile_locked?: boolean | null
          services_purchased?: Json | null
          source?: string | null
          status?: string
          stripe_customer_id?: string | null
          stripe_subscription_id?: string | null
          subscription_status?: string | null
          transaction_id?: string | null
          updated_at?: string
        }
        Update: {
          account_manager?: string | null
          activated_at?: string | null
          brand_identity?: Database["public"]["Enums"]["brand_identity"] | null
          client_number?: string | null
          company_address_city?: string | null
          company_address_country?: string | null
          company_address_state?: string | null
          company_address_street?: string | null
          company_address_zip?: string | null
          company_name?: string
          company_settings_id?: string | null
          contract_end_date?: string | null
          contract_start_date?: string | null
          contract_value?: number
          created_at?: string
          currency?: string
          date_won?: string
          deal_id?: string | null
          id?: string
          key_contacts?: Json | null
          linked_documents?: Json | null
          notes?: string | null
          onboarding_status?: string
          original_deal_owner?: string | null
          payment_status?: string | null
          plan_started_at?: string | null
          plan_type?: string | null
          primary_contact_phone?: string | null
          profile_locked?: boolean | null
          services_purchased?: Json | null
          source?: string | null
          status?: string
          stripe_customer_id?: string | null
          stripe_subscription_id?: string | null
          subscription_status?: string | null
          transaction_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "clients_company_settings_id_fkey"
            columns: ["company_settings_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "clients_deal_id_fkey"
            columns: ["deal_id"]
            isOneToOne: false
            referencedRelation: "deals"
            referencedColumns: ["id"]
          },
        ]
      }
      colossyan_generations: {
        Row: {
          brand_settings: Json | null
          company_id: string | null
          completed_at: string | null
          created_at: string
          error_message: string | null
          generation_config: Json | null
          generation_id: string | null
          id: string
          language_code: string | null
          result_data: Json | null
          scorm_package_url: string | null
          script_content: string
          selected_avatar: string | null
          selected_template: string | null
          started_at: string | null
          status: string
          training_module_id: string | null
          training_scene_id: string | null
          updated_at: string
          user_id: string
          video_url: string | null
          webhook_received_at: string | null
        }
        Insert: {
          brand_settings?: Json | null
          company_id?: string | null
          completed_at?: string | null
          created_at?: string
          error_message?: string | null
          generation_config?: Json | null
          generation_id?: string | null
          id?: string
          language_code?: string | null
          result_data?: Json | null
          scorm_package_url?: string | null
          script_content: string
          selected_avatar?: string | null
          selected_template?: string | null
          started_at?: string | null
          status?: string
          training_module_id?: string | null
          training_scene_id?: string | null
          updated_at?: string
          user_id: string
          video_url?: string | null
          webhook_received_at?: string | null
        }
        Update: {
          brand_settings?: Json | null
          company_id?: string | null
          completed_at?: string | null
          created_at?: string
          error_message?: string | null
          generation_config?: Json | null
          generation_id?: string | null
          id?: string
          language_code?: string | null
          result_data?: Json | null
          scorm_package_url?: string | null
          script_content?: string
          selected_avatar?: string | null
          selected_template?: string | null
          started_at?: string | null
          status?: string
          training_module_id?: string | null
          training_scene_id?: string | null
          updated_at?: string
          user_id?: string
          video_url?: string | null
          webhook_received_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "colossyan_generations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "colossyan_generations_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "colossyan_generations_training_scene_id_fkey"
            columns: ["training_scene_id"]
            isOneToOne: false
            referencedRelation: "training_scenes"
            referencedColumns: ["id"]
          },
        ]
      }
      companies: {
        Row: {
          address: Json | null
          contact_email: string | null
          contact_name: string | null
          contact_phone: string | null
          contract_end_date: string | null
          contract_start_date: string | null
          created_at: string
          id: string
          industry: string | null
          name: string
          notes: string | null
          size: string | null
          status: string
          updated_at: string
          website_url: string | null
        }
        Insert: {
          address?: Json | null
          contact_email?: string | null
          contact_name?: string | null
          contact_phone?: string | null
          contract_end_date?: string | null
          contract_start_date?: string | null
          created_at?: string
          id?: string
          industry?: string | null
          name: string
          notes?: string | null
          size?: string | null
          status?: string
          updated_at?: string
          website_url?: string | null
        }
        Update: {
          address?: Json | null
          contact_email?: string | null
          contact_name?: string | null
          contact_phone?: string | null
          contract_end_date?: string | null
          contract_start_date?: string | null
          created_at?: string
          id?: string
          industry?: string | null
          name?: string
          notes?: string | null
          size?: string | null
          status?: string
          updated_at?: string
          website_url?: string | null
        }
        Relationships: []
      }
      company_ach_settings: {
        Row: {
          batch_number_sequence: number | null
          company_id: string
          company_identification: string
          company_name: string
          created_at: string | null
          created_by: string | null
          file_id_modifier: string | null
          id: string
          immediate_destination: string
          immediate_origin: string
          is_active: boolean | null
          originating_dfi_routing: string
          updated_at: string | null
        }
        Insert: {
          batch_number_sequence?: number | null
          company_id: string
          company_identification: string
          company_name: string
          created_at?: string | null
          created_by?: string | null
          file_id_modifier?: string | null
          id?: string
          immediate_destination: string
          immediate_origin: string
          is_active?: boolean | null
          originating_dfi_routing: string
          updated_at?: string | null
        }
        Update: {
          batch_number_sequence?: number | null
          company_id?: string
          company_identification?: string
          company_name?: string
          created_at?: string | null
          created_by?: string | null
          file_id_modifier?: string | null
          id?: string
          immediate_destination?: string
          immediate_origin?: string
          is_active?: boolean | null
          originating_dfi_routing?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "company_ach_settings_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: true
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      company_contacts: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          email: string | null
          first_name: string
          id: string
          is_primary: boolean | null
          job_title: string | null
          last_name: string
          notes: string | null
          phone: string | null
          status: string | null
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          email?: string | null
          first_name: string
          id?: string
          is_primary?: boolean | null
          job_title?: string | null
          last_name: string
          notes?: string | null
          phone?: string | null
          status?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          email?: string | null
          first_name?: string
          id?: string
          is_primary?: boolean | null
          job_title?: string | null
          last_name?: string
          notes?: string | null
          phone?: string | null
          status?: string | null
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "company_contacts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      company_creation_audit: {
        Row: {
          company_id: string | null
          created_at: string | null
          created_by: string | null
          duplicate_override: boolean | null
          flagged_for_review: boolean | null
          id: string
          ip_address: unknown | null
          metadata: Json | null
          normalized_name: string | null
          potential_duplicates: Json | null
          user_agent: string | null
        }
        Insert: {
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          duplicate_override?: boolean | null
          flagged_for_review?: boolean | null
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          normalized_name?: string | null
          potential_duplicates?: Json | null
          user_agent?: string | null
        }
        Update: {
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          duplicate_override?: boolean | null
          flagged_for_review?: boolean | null
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          normalized_name?: string | null
          potential_duplicates?: Json | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "company_creation_audit_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      company_hr_assessments: {
        Row: {
          ai_analysis: Json | null
          assessment_date: string | null
          company_id: string
          company_size: string | null
          completion_metadata: Json | null
          created_at: string | null
          created_by: string | null
          external_assessment_id: string | null
          external_completed_at: string | null
          id: string
          industry: string | null
          input_method: string
          pdf_file_url: string | null
          pdf_parsed_data: Json | null
          responses: Json
          risk_level: string
          risk_score: number
          source_data: Json | null
          status: string | null
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          ai_analysis?: Json | null
          assessment_date?: string | null
          company_id: string
          company_size?: string | null
          completion_metadata?: Json | null
          created_at?: string | null
          created_by?: string | null
          external_assessment_id?: string | null
          external_completed_at?: string | null
          id?: string
          industry?: string | null
          input_method?: string
          pdf_file_url?: string | null
          pdf_parsed_data?: Json | null
          responses?: Json
          risk_level: string
          risk_score: number
          source_data?: Json | null
          status?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          ai_analysis?: Json | null
          assessment_date?: string | null
          company_id?: string
          company_size?: string | null
          completion_metadata?: Json | null
          created_at?: string | null
          created_by?: string | null
          external_assessment_id?: string | null
          external_completed_at?: string | null
          id?: string
          industry?: string | null
          input_method?: string
          pdf_file_url?: string | null
          pdf_parsed_data?: Json | null
          responses?: Json
          risk_level?: string
          risk_score?: number
          source_data?: Json | null
          status?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "company_hr_assessments_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      company_locations: {
        Row: {
          address: string | null
          city: string | null
          company_id: string
          country: string | null
          created_at: string
          email: string | null
          id: string
          is_active: boolean | null
          is_primary: boolean | null
          location_name: string
          manager_name: string | null
          phone: string | null
          state: string | null
          updated_at: string
          zip_code: string | null
        }
        Insert: {
          address?: string | null
          city?: string | null
          company_id: string
          country?: string | null
          created_at?: string
          email?: string | null
          id?: string
          is_active?: boolean | null
          is_primary?: boolean | null
          location_name: string
          manager_name?: string | null
          phone?: string | null
          state?: string | null
          updated_at?: string
          zip_code?: string | null
        }
        Update: {
          address?: string | null
          city?: string | null
          company_id?: string
          country?: string | null
          created_at?: string
          email?: string | null
          id?: string
          is_active?: boolean | null
          is_primary?: boolean | null
          location_name?: string
          manager_name?: string | null
          phone?: string | null
          state?: string | null
          updated_at?: string
          zip_code?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "company_locations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      company_onboarding_templates: {
        Row: {
          company_id: string | null
          created_at: string | null
          document_type: Database["public"]["Enums"]["onboarding_document_type"]
          file_path: string | null
          form_fields: Json | null
          id: string
          is_required: boolean | null
          language: Database["public"]["Enums"]["user_language"] | null
          state_specific: string | null
          template_name: string
          updated_at: string | null
        }
        Insert: {
          company_id?: string | null
          created_at?: string | null
          document_type: Database["public"]["Enums"]["onboarding_document_type"]
          file_path?: string | null
          form_fields?: Json | null
          id?: string
          is_required?: boolean | null
          language?: Database["public"]["Enums"]["user_language"] | null
          state_specific?: string | null
          template_name: string
          updated_at?: string | null
        }
        Update: {
          company_id?: string | null
          created_at?: string | null
          document_type?: Database["public"]["Enums"]["onboarding_document_type"]
          file_path?: string | null
          form_fields?: Json | null
          id?: string
          is_required?: boolean | null
          language?: Database["public"]["Enums"]["user_language"] | null
          state_specific?: string | null
          template_name?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "company_onboarding_templates_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "onboarding_companies"
            referencedColumns: ["id"]
          },
        ]
      }
      company_profiles: {
        Row: {
          business_address: Json
          business_details: Json | null
          business_name: string
          client_id: string | null
          compliance_info: Json | null
          contact_information: Json
          created_at: string
          id: string
          is_locked: boolean | null
          updated_at: string
          user_id: string | null
        }
        Insert: {
          business_address?: Json
          business_details?: Json | null
          business_name: string
          client_id?: string | null
          compliance_info?: Json | null
          contact_information?: Json
          created_at?: string
          id?: string
          is_locked?: boolean | null
          updated_at?: string
          user_id?: string | null
        }
        Update: {
          business_address?: Json
          business_details?: Json | null
          business_name?: string
          client_id?: string | null
          compliance_info?: Json | null
          contact_information?: Json
          created_at?: string
          id?: string
          is_locked?: boolean | null
          updated_at?: string
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "company_profiles_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: true
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      company_seat_allocations: {
        Row: {
          company_id: string | null
          created_at: string | null
          id: string
          package_id: string | null
          purchased_seats: number | null
          status: string | null
          total_seats: number
          updated_at: string | null
          used_seats: number | null
        }
        Insert: {
          company_id?: string | null
          created_at?: string | null
          id?: string
          package_id?: string | null
          purchased_seats?: number | null
          status?: string | null
          total_seats: number
          updated_at?: string | null
          used_seats?: number | null
        }
        Update: {
          company_id?: string | null
          created_at?: string | null
          id?: string
          package_id?: string | null
          purchased_seats?: number | null
          status?: string | null
          total_seats?: number
          updated_at?: string | null
          used_seats?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "company_seat_allocations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "company_seat_allocations_package_id_fkey"
            columns: ["package_id"]
            isOneToOne: false
            referencedRelation: "course_packages"
            referencedColumns: ["id"]
          },
        ]
      }
      company_settings: {
        Row: {
          account_manager: string | null
          address: string | null
          annual_revenue: number | null
          auto_generate_org_codes: boolean | null
          bdm: string | null
          brand_identity: Database["public"]["Enums"]["brand_identity"] | null
          business_description: string | null
          certificate_template: string | null
          city: string | null
          client_type: string | null
          company_logo_url: string | null
          company_name: string
          company_owner: string | null
          company_owner_name: string | null
          company_type: string | null
          contract_value: number | null
          country: string | null
          created_at: string
          currency: string | null
          current_risk_score: number | null
          date_won: string | null
          description: string | null
          divisional_reporting_enabled: boolean
          ein: string | null
          email_notifications: boolean | null
          employee_count: number | null
          facebook_company_page: string | null
          founded_year: number | null
          hubspot_record_id: string | null
          id: string
          industry: string | null
          internal_notes: string | null
          last_activity_date: string | null
          last_assessment_date: string | null
          last_contact_date: string | null
          lead_source: string | null
          lifecycle_stage: string | null
          linkedin_company_page: string | null
          lost_reason: string | null
          max_employees: number | null
          module_setup_status: Json | null
          modules_enabled: string[] | null
          notes: string | null
          onboarding_start_date: string | null
          onboarding_status: string | null
          payment_start_date: string | null
          phone: string | null
          photo_verification_enabled: boolean | null
          postal_code: string | null
          primary_color: string | null
          primary_contact_phone: string | null
          propgen_status: string | null
          propgen_updated_at: string | null
          proposal_sent_date: string | null
          punch_photo_quality_threshold: number | null
          recruiter: string | null
          require_departments: boolean | null
          require_divisions: boolean | null
          require_punch_photos: boolean | null
          sales_lifecycle_stage:
            | Database["public"]["Enums"]["sales_lifecycle_stage"]
            | null
          sales_rep_assigned: string | null
          service_type: string | null
          stage_transition_history: Json | null
          state: string | null
          subscription_status: string | null
          timezone: string | null
          twitter_handle: string | null
          updated_at: string
          vaultpay_auto_send_invoice: boolean | null
          vaultpay_fee_type: string | null
          vaultpay_flat_fee: number | null
          vaultpay_include_register_pdf: boolean | null
          vaultpay_rate_per_employee: number | null
          vaultpay_terms_days: number | null
          website: string | null
          welcome_screen_config: Json | null
          wpv_plan_content: string | null
        }
        Insert: {
          account_manager?: string | null
          address?: string | null
          annual_revenue?: number | null
          auto_generate_org_codes?: boolean | null
          bdm?: string | null
          brand_identity?: Database["public"]["Enums"]["brand_identity"] | null
          business_description?: string | null
          certificate_template?: string | null
          city?: string | null
          client_type?: string | null
          company_logo_url?: string | null
          company_name: string
          company_owner?: string | null
          company_owner_name?: string | null
          company_type?: string | null
          contract_value?: number | null
          country?: string | null
          created_at?: string
          currency?: string | null
          current_risk_score?: number | null
          date_won?: string | null
          description?: string | null
          divisional_reporting_enabled?: boolean
          ein?: string | null
          email_notifications?: boolean | null
          employee_count?: number | null
          facebook_company_page?: string | null
          founded_year?: number | null
          hubspot_record_id?: string | null
          id?: string
          industry?: string | null
          internal_notes?: string | null
          last_activity_date?: string | null
          last_assessment_date?: string | null
          last_contact_date?: string | null
          lead_source?: string | null
          lifecycle_stage?: string | null
          linkedin_company_page?: string | null
          lost_reason?: string | null
          max_employees?: number | null
          module_setup_status?: Json | null
          modules_enabled?: string[] | null
          notes?: string | null
          onboarding_start_date?: string | null
          onboarding_status?: string | null
          payment_start_date?: string | null
          phone?: string | null
          photo_verification_enabled?: boolean | null
          postal_code?: string | null
          primary_color?: string | null
          primary_contact_phone?: string | null
          propgen_status?: string | null
          propgen_updated_at?: string | null
          proposal_sent_date?: string | null
          punch_photo_quality_threshold?: number | null
          recruiter?: string | null
          require_departments?: boolean | null
          require_divisions?: boolean | null
          require_punch_photos?: boolean | null
          sales_lifecycle_stage?:
            | Database["public"]["Enums"]["sales_lifecycle_stage"]
            | null
          sales_rep_assigned?: string | null
          service_type?: string | null
          stage_transition_history?: Json | null
          state?: string | null
          subscription_status?: string | null
          timezone?: string | null
          twitter_handle?: string | null
          updated_at?: string
          vaultpay_auto_send_invoice?: boolean | null
          vaultpay_fee_type?: string | null
          vaultpay_flat_fee?: number | null
          vaultpay_include_register_pdf?: boolean | null
          vaultpay_rate_per_employee?: number | null
          vaultpay_terms_days?: number | null
          website?: string | null
          welcome_screen_config?: Json | null
          wpv_plan_content?: string | null
        }
        Update: {
          account_manager?: string | null
          address?: string | null
          annual_revenue?: number | null
          auto_generate_org_codes?: boolean | null
          bdm?: string | null
          brand_identity?: Database["public"]["Enums"]["brand_identity"] | null
          business_description?: string | null
          certificate_template?: string | null
          city?: string | null
          client_type?: string | null
          company_logo_url?: string | null
          company_name?: string
          company_owner?: string | null
          company_owner_name?: string | null
          company_type?: string | null
          contract_value?: number | null
          country?: string | null
          created_at?: string
          currency?: string | null
          current_risk_score?: number | null
          date_won?: string | null
          description?: string | null
          divisional_reporting_enabled?: boolean
          ein?: string | null
          email_notifications?: boolean | null
          employee_count?: number | null
          facebook_company_page?: string | null
          founded_year?: number | null
          hubspot_record_id?: string | null
          id?: string
          industry?: string | null
          internal_notes?: string | null
          last_activity_date?: string | null
          last_assessment_date?: string | null
          last_contact_date?: string | null
          lead_source?: string | null
          lifecycle_stage?: string | null
          linkedin_company_page?: string | null
          lost_reason?: string | null
          max_employees?: number | null
          module_setup_status?: Json | null
          modules_enabled?: string[] | null
          notes?: string | null
          onboarding_start_date?: string | null
          onboarding_status?: string | null
          payment_start_date?: string | null
          phone?: string | null
          photo_verification_enabled?: boolean | null
          postal_code?: string | null
          primary_color?: string | null
          primary_contact_phone?: string | null
          propgen_status?: string | null
          propgen_updated_at?: string | null
          proposal_sent_date?: string | null
          punch_photo_quality_threshold?: number | null
          recruiter?: string | null
          require_departments?: boolean | null
          require_divisions?: boolean | null
          require_punch_photos?: boolean | null
          sales_lifecycle_stage?:
            | Database["public"]["Enums"]["sales_lifecycle_stage"]
            | null
          sales_rep_assigned?: string | null
          service_type?: string | null
          stage_transition_history?: Json | null
          state?: string | null
          subscription_status?: string | null
          timezone?: string | null
          twitter_handle?: string | null
          updated_at?: string
          vaultpay_auto_send_invoice?: boolean | null
          vaultpay_fee_type?: string | null
          vaultpay_flat_fee?: number | null
          vaultpay_include_register_pdf?: boolean | null
          vaultpay_rate_per_employee?: number | null
          vaultpay_terms_days?: number | null
          website?: string | null
          welcome_screen_config?: Json | null
          wpv_plan_content?: string | null
        }
        Relationships: []
      }
      company_unlocked_courses: {
        Row: {
          company_id: string | null
          id: string
          seat_allocation_id: string | null
          training_module_id: string | null
          unlocked_at: string | null
          unlocked_by: string | null
        }
        Insert: {
          company_id?: string | null
          id?: string
          seat_allocation_id?: string | null
          training_module_id?: string | null
          unlocked_at?: string | null
          unlocked_by?: string | null
        }
        Update: {
          company_id?: string | null
          id?: string
          seat_allocation_id?: string | null
          training_module_id?: string | null
          unlocked_at?: string | null
          unlocked_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "company_unlocked_courses_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "company_unlocked_courses_seat_allocation_id_fkey"
            columns: ["seat_allocation_id"]
            isOneToOne: false
            referencedRelation: "company_seat_allocations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "company_unlocked_courses_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      compliance_assessments: {
        Row: {
          assessment_date: string
          assessor_id: string | null
          compliance_score: number
          created_at: string
          findings: string[] | null
          id: string
          policy_id: string
          recommendations: string[] | null
          status: string
        }
        Insert: {
          assessment_date?: string
          assessor_id?: string | null
          compliance_score: number
          created_at?: string
          findings?: string[] | null
          id?: string
          policy_id: string
          recommendations?: string[] | null
          status?: string
        }
        Update: {
          assessment_date?: string
          assessor_id?: string | null
          compliance_score?: number
          created_at?: string
          findings?: string[] | null
          id?: string
          policy_id?: string
          recommendations?: string[] | null
          status?: string
        }
        Relationships: [
          {
            foreignKeyName: "compliance_assessments_policy_id_fkey"
            columns: ["policy_id"]
            isOneToOne: false
            referencedRelation: "compliance_policies"
            referencedColumns: ["id"]
          },
        ]
      }
      compliance_audit_trail: {
        Row: {
          action_details: Json | null
          action_type: string
          assessment_id: string | null
          id: string
          performed_at: string
          performed_by: string | null
          policy_id: string | null
        }
        Insert: {
          action_details?: Json | null
          action_type: string
          assessment_id?: string | null
          id?: string
          performed_at?: string
          performed_by?: string | null
          policy_id?: string | null
        }
        Update: {
          action_details?: Json | null
          action_type?: string
          assessment_id?: string | null
          id?: string
          performed_at?: string
          performed_by?: string | null
          policy_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "compliance_audit_trail_assessment_id_fkey"
            columns: ["assessment_id"]
            isOneToOne: false
            referencedRelation: "compliance_assessments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "compliance_audit_trail_policy_id_fkey"
            columns: ["policy_id"]
            isOneToOne: false
            referencedRelation: "compliance_policies"
            referencedColumns: ["id"]
          },
        ]
      }
      compliance_policies: {
        Row: {
          assigned_to: string | null
          category: string
          compliance_frameworks: string[] | null
          created_at: string
          created_by: string | null
          description: string
          id: string
          implementation_notes: string | null
          next_review_date: string
          priority: string
          requirements: string[] | null
          review_frequency_months: number
          status: string
          title: string
          updated_at: string
        }
        Insert: {
          assigned_to?: string | null
          category: string
          compliance_frameworks?: string[] | null
          created_at?: string
          created_by?: string | null
          description: string
          id?: string
          implementation_notes?: string | null
          next_review_date: string
          priority?: string
          requirements?: string[] | null
          review_frequency_months?: number
          status?: string
          title: string
          updated_at?: string
        }
        Update: {
          assigned_to?: string | null
          category?: string
          compliance_frameworks?: string[] | null
          created_at?: string
          created_by?: string | null
          description?: string
          id?: string
          implementation_notes?: string | null
          next_review_date?: string
          priority?: string
          requirements?: string[] | null
          review_frequency_months?: number
          status?: string
          title?: string
          updated_at?: string
        }
        Relationships: []
      }
      compliance_violations: {
        Row: {
          auto_detected: boolean | null
          created_at: string
          id: string
          investigation_status: string | null
          notification_sent: boolean | null
          regulatory_reported: boolean | null
          reported_by: string | null
          resolution_notes: string | null
          resolved_at: string | null
          resource_affected: string | null
          session_id: string | null
          severity: string
          user_id: string | null
          violation_details: Json | null
          violation_type: string
        }
        Insert: {
          auto_detected?: boolean | null
          created_at?: string
          id?: string
          investigation_status?: string | null
          notification_sent?: boolean | null
          regulatory_reported?: boolean | null
          reported_by?: string | null
          resolution_notes?: string | null
          resolved_at?: string | null
          resource_affected?: string | null
          session_id?: string | null
          severity: string
          user_id?: string | null
          violation_details?: Json | null
          violation_type: string
        }
        Update: {
          auto_detected?: boolean | null
          created_at?: string
          id?: string
          investigation_status?: string | null
          notification_sent?: boolean | null
          regulatory_reported?: boolean | null
          reported_by?: string | null
          resolution_notes?: string | null
          resolved_at?: string | null
          resource_affected?: string | null
          session_id?: string | null
          severity?: string
          user_id?: string | null
          violation_details?: Json | null
          violation_type?: string
        }
        Relationships: []
      }
      compx_claims: {
        Row: {
          adjuster_contact: Json | null
          adjuster_name: string | null
          claim_date: string
          claim_number: string
          claim_status: string
          claim_type: string
          closure_date: string | null
          closure_reason: string | null
          company_id: string
          compx_employee_id: string
          created_at: string
          diagnosis: string | null
          estimated_closure_date: string | null
          id: string
          incident_id: string | null
          indemnity_costs: number | null
          legal_costs: number | null
          litigation_status: boolean | null
          medical_costs: number | null
          medical_provider: string | null
          return_to_work_date: string | null
          settlement_amount: number | null
          total_paid: number | null
          total_reserved: number | null
          treatment_plan: string | null
          updated_at: string
        }
        Insert: {
          adjuster_contact?: Json | null
          adjuster_name?: string | null
          claim_date: string
          claim_number: string
          claim_status?: string
          claim_type?: string
          closure_date?: string | null
          closure_reason?: string | null
          company_id: string
          compx_employee_id: string
          created_at?: string
          diagnosis?: string | null
          estimated_closure_date?: string | null
          id?: string
          incident_id?: string | null
          indemnity_costs?: number | null
          legal_costs?: number | null
          litigation_status?: boolean | null
          medical_costs?: number | null
          medical_provider?: string | null
          return_to_work_date?: string | null
          settlement_amount?: number | null
          total_paid?: number | null
          total_reserved?: number | null
          treatment_plan?: string | null
          updated_at?: string
        }
        Update: {
          adjuster_contact?: Json | null
          adjuster_name?: string | null
          claim_date?: string
          claim_number?: string
          claim_status?: string
          claim_type?: string
          closure_date?: string | null
          closure_reason?: string | null
          company_id?: string
          compx_employee_id?: string
          created_at?: string
          diagnosis?: string | null
          estimated_closure_date?: string | null
          id?: string
          incident_id?: string | null
          indemnity_costs?: number | null
          legal_costs?: number | null
          litigation_status?: boolean | null
          medical_costs?: number | null
          medical_provider?: string | null
          return_to_work_date?: string | null
          settlement_amount?: number | null
          total_paid?: number | null
          total_reserved?: number | null
          treatment_plan?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "compx_claims_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "compx_claims_compx_employee_id_fkey"
            columns: ["compx_employee_id"]
            isOneToOne: false
            referencedRelation: "compx_employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "compx_claims_incident_id_fkey"
            columns: ["incident_id"]
            isOneToOne: false
            referencedRelation: "compx_incidents"
            referencedColumns: ["id"]
          },
        ]
      }
      compx_compliance_tracking: {
        Row: {
          company_id: string
          completion_date: string | null
          compliance_type: string
          created_at: string
          documentation: Json | null
          due_date: string
          id: string
          notes: string | null
          penalty_amount: number | null
          requirement_description: string
          responsible_person: string | null
          status: string | null
          updated_at: string
        }
        Insert: {
          company_id: string
          completion_date?: string | null
          compliance_type: string
          created_at?: string
          documentation?: Json | null
          due_date: string
          id?: string
          notes?: string | null
          penalty_amount?: number | null
          requirement_description: string
          responsible_person?: string | null
          status?: string | null
          updated_at?: string
        }
        Update: {
          company_id?: string
          completion_date?: string | null
          compliance_type?: string
          created_at?: string
          documentation?: Json | null
          due_date?: string
          id?: string
          notes?: string | null
          penalty_amount?: number | null
          requirement_description?: string
          responsible_person?: string | null
          status?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "compx_compliance_tracking_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      compx_employees: {
        Row: {
          annual_hours: number | null
          company_id: string
          created_at: string
          employee_id: string | null
          hourly_rate: number | null
          id: string
          job_classification: string
          last_safety_training: string | null
          medical_restrictions: string | null
          return_to_work_eligible: boolean | null
          risk_level: string | null
          safety_training_status: string | null
          updated_at: string
          worker_comp_code: string
        }
        Insert: {
          annual_hours?: number | null
          company_id: string
          created_at?: string
          employee_id?: string | null
          hourly_rate?: number | null
          id?: string
          job_classification: string
          last_safety_training?: string | null
          medical_restrictions?: string | null
          return_to_work_eligible?: boolean | null
          risk_level?: string | null
          safety_training_status?: string | null
          updated_at?: string
          worker_comp_code: string
        }
        Update: {
          annual_hours?: number | null
          company_id?: string
          created_at?: string
          employee_id?: string | null
          hourly_rate?: number | null
          id?: string
          job_classification?: string
          last_safety_training?: string | null
          medical_restrictions?: string | null
          return_to_work_eligible?: boolean | null
          risk_level?: string | null
          safety_training_status?: string | null
          updated_at?: string
          worker_comp_code?: string
        }
        Relationships: [
          {
            foreignKeyName: "compx_employees_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "compx_employees_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      compx_incidents: {
        Row: {
          body_part_affected: string | null
          company_id: string
          compx_employee_id: string | null
          corrective_actions: string | null
          created_at: string
          description: string
          documents: Json | null
          id: string
          incident_date: string
          incident_number: string
          incident_type: string
          injury_type: string | null
          investigated_by: string | null
          investigation_notes: string | null
          location: string
          medical_attention_required: boolean | null
          photos: Json | null
          reported_by: string | null
          reported_date: string
          severity_level: string
          status: string
          updated_at: string
          witnesses: Json | null
        }
        Insert: {
          body_part_affected?: string | null
          company_id: string
          compx_employee_id?: string | null
          corrective_actions?: string | null
          created_at?: string
          description: string
          documents?: Json | null
          id?: string
          incident_date: string
          incident_number: string
          incident_type: string
          injury_type?: string | null
          investigated_by?: string | null
          investigation_notes?: string | null
          location: string
          medical_attention_required?: boolean | null
          photos?: Json | null
          reported_by?: string | null
          reported_date?: string
          severity_level?: string
          status?: string
          updated_at?: string
          witnesses?: Json | null
        }
        Update: {
          body_part_affected?: string | null
          company_id?: string
          compx_employee_id?: string | null
          corrective_actions?: string | null
          created_at?: string
          description?: string
          documents?: Json | null
          id?: string
          incident_date?: string
          incident_number?: string
          incident_type?: string
          injury_type?: string | null
          investigated_by?: string | null
          investigation_notes?: string | null
          location?: string
          medical_attention_required?: boolean | null
          photos?: Json | null
          reported_by?: string | null
          reported_date?: string
          severity_level?: string
          status?: string
          updated_at?: string
          witnesses?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "compx_incidents_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "compx_incidents_compx_employee_id_fkey"
            columns: ["compx_employee_id"]
            isOneToOne: false
            referencedRelation: "compx_employees"
            referencedColumns: ["id"]
          },
        ]
      }
      compx_medical_providers: {
        Row: {
          address: Json
          company_id: string
          contact_info: Json
          created_at: string
          id: string
          is_active: boolean | null
          network_status: string | null
          provider_name: string
          provider_type: string
          rating: number | null
          specialty: string | null
          updated_at: string
        }
        Insert: {
          address: Json
          company_id: string
          contact_info: Json
          created_at?: string
          id?: string
          is_active?: boolean | null
          network_status?: string | null
          provider_name: string
          provider_type: string
          rating?: number | null
          specialty?: string | null
          updated_at?: string
        }
        Update: {
          address?: Json
          company_id?: string
          contact_info?: Json
          created_at?: string
          id?: string
          is_active?: boolean | null
          network_status?: string | null
          provider_name?: string
          provider_type?: string
          rating?: number | null
          specialty?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "compx_medical_providers_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      compx_policies: {
        Row: {
          annual_premium: number | null
          broker_info: Json | null
          carrier_name: string
          company_id: string
          coverage_limits: Json | null
          created_at: string
          deductible: number | null
          effective_date: string
          expiration_date: string
          id: string
          policy_number: string
          policy_status: string
          policy_type: string
          updated_at: string
        }
        Insert: {
          annual_premium?: number | null
          broker_info?: Json | null
          carrier_name: string
          company_id: string
          coverage_limits?: Json | null
          created_at?: string
          deductible?: number | null
          effective_date: string
          expiration_date: string
          id?: string
          policy_number: string
          policy_status?: string
          policy_type?: string
          updated_at?: string
        }
        Update: {
          annual_premium?: number | null
          broker_info?: Json | null
          carrier_name?: string
          company_id?: string
          coverage_limits?: Json | null
          created_at?: string
          deductible?: number | null
          effective_date?: string
          expiration_date?: string
          id?: string
          policy_number?: string
          policy_status?: string
          policy_type?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "compx_policies_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      compx_return_to_work: {
        Row: {
          accommodations_provided: string | null
          actual_return_date: string | null
          claim_id: string
          company_id: string
          compx_employee_id: string
          created_at: string
          id: string
          medical_clearance_date: string | null
          medical_clearance_required: boolean | null
          modified_duties: string | null
          program_start_date: string
          program_status: string | null
          progress_notes: string | null
          target_return_date: string | null
          updated_at: string
          work_restrictions: Json | null
        }
        Insert: {
          accommodations_provided?: string | null
          actual_return_date?: string | null
          claim_id: string
          company_id: string
          compx_employee_id: string
          created_at?: string
          id?: string
          medical_clearance_date?: string | null
          medical_clearance_required?: boolean | null
          modified_duties?: string | null
          program_start_date: string
          program_status?: string | null
          progress_notes?: string | null
          target_return_date?: string | null
          updated_at?: string
          work_restrictions?: Json | null
        }
        Update: {
          accommodations_provided?: string | null
          actual_return_date?: string | null
          claim_id?: string
          company_id?: string
          compx_employee_id?: string
          created_at?: string
          id?: string
          medical_clearance_date?: string | null
          medical_clearance_required?: boolean | null
          modified_duties?: string | null
          program_start_date?: string
          program_status?: string | null
          progress_notes?: string | null
          target_return_date?: string | null
          updated_at?: string
          work_restrictions?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "compx_return_to_work_claim_id_fkey"
            columns: ["claim_id"]
            isOneToOne: false
            referencedRelation: "compx_claims"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "compx_return_to_work_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "compx_return_to_work_compx_employee_id_fkey"
            columns: ["compx_employee_id"]
            isOneToOne: false
            referencedRelation: "compx_employees"
            referencedColumns: ["id"]
          },
        ]
      }
      compx_safety_reports: {
        Row: {
          attachments: Json | null
          company_id: string
          corrective_actions: Json | null
          created_at: string
          follow_up_date: string | null
          follow_up_required: boolean | null
          id: string
          inspector_id: string | null
          location: string
          recommendations: Json | null
          report_date: string
          report_type: string
          safety_score: number | null
          status: string | null
          updated_at: string
          violations: Json | null
        }
        Insert: {
          attachments?: Json | null
          company_id: string
          corrective_actions?: Json | null
          created_at?: string
          follow_up_date?: string | null
          follow_up_required?: boolean | null
          id?: string
          inspector_id?: string | null
          location: string
          recommendations?: Json | null
          report_date: string
          report_type: string
          safety_score?: number | null
          status?: string | null
          updated_at?: string
          violations?: Json | null
        }
        Update: {
          attachments?: Json | null
          company_id?: string
          corrective_actions?: Json | null
          created_at?: string
          follow_up_date?: string | null
          follow_up_required?: boolean | null
          id?: string
          inspector_id?: string | null
          location?: string
          recommendations?: Json | null
          report_date?: string
          report_type?: string
          safety_score?: number | null
          status?: string | null
          updated_at?: string
          violations?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "compx_safety_reports_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      consultant_capacity: {
        Row: {
          active_cases: number | null
          actual_hours: number | null
          capacity_status: string | null
          consultant_id: string
          created_at: string | null
          id: string
          notes: string | null
          planned_hours: number | null
          updated_at: string | null
          utilization_percentage: number | null
          week_start_date: string
        }
        Insert: {
          active_cases?: number | null
          actual_hours?: number | null
          capacity_status?: string | null
          consultant_id: string
          created_at?: string | null
          id?: string
          notes?: string | null
          planned_hours?: number | null
          updated_at?: string | null
          utilization_percentage?: number | null
          week_start_date: string
        }
        Update: {
          active_cases?: number | null
          actual_hours?: number | null
          capacity_status?: string | null
          consultant_id?: string
          created_at?: string | null
          id?: string
          notes?: string | null
          planned_hours?: number | null
          updated_at?: string | null
          utilization_percentage?: number | null
          week_start_date?: string
        }
        Relationships: []
      }
      content_effectiveness_analytics: {
        Row: {
          avg_completion_time: number | null
          avg_pause_frequency: number | null
          avg_rewind_rate: number | null
          created_at: string | null
          dropout_rate: number | null
          effectiveness_score: number | null
          id: string
          last_calculated: string | null
          scene_id: string
          struggle_points: Json | null
          total_learners: number | null
          training_module_id: string
        }
        Insert: {
          avg_completion_time?: number | null
          avg_pause_frequency?: number | null
          avg_rewind_rate?: number | null
          created_at?: string | null
          dropout_rate?: number | null
          effectiveness_score?: number | null
          id?: string
          last_calculated?: string | null
          scene_id: string
          struggle_points?: Json | null
          total_learners?: number | null
          training_module_id: string
        }
        Update: {
          avg_completion_time?: number | null
          avg_pause_frequency?: number | null
          avg_rewind_rate?: number | null
          created_at?: string | null
          dropout_rate?: number | null
          effectiveness_score?: number | null
          id?: string
          last_calculated?: string | null
          scene_id?: string
          struggle_points?: Json | null
          total_learners?: number | null
          training_module_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "content_effectiveness_analytics_scene_id_fkey"
            columns: ["scene_id"]
            isOneToOne: true
            referencedRelation: "training_scenes"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "content_effectiveness_analytics_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      cost_scenarios: {
        Row: {
          created_at: string
          easeworks_service_cost: number
          employee_count: number
          gross_wages: number
          id: string
          internal_benefits_cost: number
          internal_compliance_cost: number
          internal_hr_cost: number
          internal_risk_cost: number
          internal_technology_cost: number
          payback_months: number
          roi_percentage: number
          savings_amount: number
          scenario_name: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          easeworks_service_cost: number
          employee_count: number
          gross_wages: number
          id?: string
          internal_benefits_cost: number
          internal_compliance_cost: number
          internal_hr_cost: number
          internal_risk_cost: number
          internal_technology_cost: number
          payback_months: number
          roi_percentage: number
          savings_amount: number
          scenario_name: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          easeworks_service_cost?: number
          employee_count?: number
          gross_wages?: number
          id?: string
          internal_benefits_cost?: number
          internal_compliance_cost?: number
          internal_hr_cost?: number
          internal_risk_cost?: number
          internal_technology_cost?: number
          payback_months?: number
          roi_percentage?: number
          savings_amount?: number
          scenario_name?: string
          updated_at?: string
        }
        Relationships: []
      }
      course_packages: {
        Row: {
          allow_additional_seats: boolean | null
          course_count: number
          created_at: string
          description: string | null
          display_order: number
          id: string
          included_seats: number | null
          is_active: boolean
          max_additional_seats: number | null
          name: string
          price_per_additional_seat: number | null
          updated_at: string
        }
        Insert: {
          allow_additional_seats?: boolean | null
          course_count: number
          created_at?: string
          description?: string | null
          display_order?: number
          id?: string
          included_seats?: number | null
          is_active?: boolean
          max_additional_seats?: number | null
          name: string
          price_per_additional_seat?: number | null
          updated_at?: string
        }
        Update: {
          allow_additional_seats?: boolean | null
          course_count?: number
          created_at?: string
          description?: string | null
          display_order?: number
          id?: string
          included_seats?: number | null
          is_active?: boolean
          max_additional_seats?: number | null
          name?: string
          price_per_additional_seat?: number | null
          updated_at?: string
        }
        Relationships: []
      }
      crm_activity_log: {
        Row: {
          activity_type: string
          created_at: string | null
          description: string
          entity_id: string
          entity_type: string
          field_changes: string[] | null
          id: string
          ip_address: unknown | null
          new_values: Json | null
          old_values: Json | null
          performed_by: string | null
          performed_by_type: string | null
          source: string | null
          user_agent: string | null
        }
        Insert: {
          activity_type: string
          created_at?: string | null
          description: string
          entity_id: string
          entity_type: string
          field_changes?: string[] | null
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          performed_by?: string | null
          performed_by_type?: string | null
          source?: string | null
          user_agent?: string | null
        }
        Update: {
          activity_type?: string
          created_at?: string | null
          description?: string
          entity_id?: string
          entity_type?: string
          field_changes?: string[] | null
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          performed_by?: string | null
          performed_by_type?: string | null
          source?: string | null
          user_agent?: string | null
        }
        Relationships: []
      }
      crm_admin_settings: {
        Row: {
          category: string
          created_at: string | null
          created_by: string | null
          description: string | null
          id: string
          setting_key: string
          setting_value: Json
          updated_at: string | null
        }
        Insert: {
          category: string
          created_at?: string | null
          created_by?: string | null
          description?: string | null
          id?: string
          setting_key: string
          setting_value: Json
          updated_at?: string | null
        }
        Update: {
          category?: string
          created_at?: string | null
          created_by?: string | null
          description?: string | null
          id?: string
          setting_key?: string
          setting_value?: Json
          updated_at?: string | null
        }
        Relationships: []
      }
      crm_ai_usage_metrics: {
        Row: {
          company_id: string | null
          created_at: string | null
          date_recorded: string | null
          feature_type: string
          id: string
          metadata: Json | null
          usage_count: number | null
          user_id: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string | null
          date_recorded?: string | null
          feature_type: string
          id?: string
          metadata?: Json | null
          usage_count?: number | null
          user_id: string
        }
        Update: {
          company_id?: string | null
          created_at?: string | null
          date_recorded?: string | null
          feature_type?: string
          id?: string
          metadata?: Json | null
          usage_count?: number | null
          user_id?: string
        }
        Relationships: []
      }
      crm_automation_rules: {
        Row: {
          actions_json: Json
          applies_to_all_companies: boolean | null
          created_at: string | null
          created_by: string
          description: string | null
          error_count: number | null
          execution_count: number | null
          execution_order: number | null
          id: string
          is_enabled: boolean | null
          last_error: string | null
          last_executed_at: string | null
          name: string
          target_company_ids: string[] | null
          target_user_ids: string[] | null
          trigger_conditions: Json
          trigger_event: string
          updated_at: string | null
        }
        Insert: {
          actions_json?: Json
          applies_to_all_companies?: boolean | null
          created_at?: string | null
          created_by: string
          description?: string | null
          error_count?: number | null
          execution_count?: number | null
          execution_order?: number | null
          id?: string
          is_enabled?: boolean | null
          last_error?: string | null
          last_executed_at?: string | null
          name: string
          target_company_ids?: string[] | null
          target_user_ids?: string[] | null
          trigger_conditions?: Json
          trigger_event: string
          updated_at?: string | null
        }
        Update: {
          actions_json?: Json
          applies_to_all_companies?: boolean | null
          created_at?: string | null
          created_by?: string
          description?: string | null
          error_count?: number | null
          execution_count?: number | null
          execution_order?: number | null
          id?: string
          is_enabled?: boolean | null
          last_error?: string | null
          last_executed_at?: string | null
          name?: string
          target_company_ids?: string[] | null
          target_user_ids?: string[] | null
          trigger_conditions?: Json
          trigger_event?: string
          updated_at?: string | null
        }
        Relationships: []
      }
      crm_companies: {
        Row: {
          address_line1: string | null
          address_line2: string | null
          annual_revenue: number | null
          assigned_rep_id: string | null
          business_description: string | null
          city: string | null
          country: string | null
          created_at: string | null
          custom_fields: Json | null
          email: string | null
          employee_count: number | null
          id: string
          industry: string | null
          last_activity_date: string | null
          lead_source: string | null
          name: string
          next_follow_up_date: string | null
          notes: string | null
          phone: string | null
          postal_code: string | null
          risk_score: number | null
          state: string | null
          status: Database["public"]["Enums"]["company_status"] | null
          tags: string[] | null
          type: Database["public"]["Enums"]["company_type"] | null
          updated_at: string | null
          website: string | null
        }
        Insert: {
          address_line1?: string | null
          address_line2?: string | null
          annual_revenue?: number | null
          assigned_rep_id?: string | null
          business_description?: string | null
          city?: string | null
          country?: string | null
          created_at?: string | null
          custom_fields?: Json | null
          email?: string | null
          employee_count?: number | null
          id?: string
          industry?: string | null
          last_activity_date?: string | null
          lead_source?: string | null
          name: string
          next_follow_up_date?: string | null
          notes?: string | null
          phone?: string | null
          postal_code?: string | null
          risk_score?: number | null
          state?: string | null
          status?: Database["public"]["Enums"]["company_status"] | null
          tags?: string[] | null
          type?: Database["public"]["Enums"]["company_type"] | null
          updated_at?: string | null
          website?: string | null
        }
        Update: {
          address_line1?: string | null
          address_line2?: string | null
          annual_revenue?: number | null
          assigned_rep_id?: string | null
          business_description?: string | null
          city?: string | null
          country?: string | null
          created_at?: string | null
          custom_fields?: Json | null
          email?: string | null
          employee_count?: number | null
          id?: string
          industry?: string | null
          last_activity_date?: string | null
          lead_source?: string | null
          name?: string
          next_follow_up_date?: string | null
          notes?: string | null
          phone?: string | null
          postal_code?: string | null
          risk_score?: number | null
          state?: string | null
          status?: Database["public"]["Enums"]["company_status"] | null
          tags?: string[] | null
          type?: Database["public"]["Enums"]["company_type"] | null
          updated_at?: string | null
          website?: string | null
        }
        Relationships: []
      }
      crm_contacts: {
        Row: {
          assistant_name: string | null
          assistant_phone: string | null
          company_id: string
          created_at: string | null
          custom_fields: Json | null
          department: string | null
          direct_line: string | null
          email: string | null
          first_name: string
          id: string
          is_active: boolean | null
          is_primary_contact: boolean | null
          last_contacted_at: string | null
          last_name: string
          linkedin_url: string | null
          mobile_phone: string | null
          notes: string | null
          phone: string | null
          preferred_contact_method: string | null
          tags: string[] | null
          timezone: string | null
          title: string | null
          updated_at: string | null
        }
        Insert: {
          assistant_name?: string | null
          assistant_phone?: string | null
          company_id: string
          created_at?: string | null
          custom_fields?: Json | null
          department?: string | null
          direct_line?: string | null
          email?: string | null
          first_name: string
          id?: string
          is_active?: boolean | null
          is_primary_contact?: boolean | null
          last_contacted_at?: string | null
          last_name: string
          linkedin_url?: string | null
          mobile_phone?: string | null
          notes?: string | null
          phone?: string | null
          preferred_contact_method?: string | null
          tags?: string[] | null
          timezone?: string | null
          title?: string | null
          updated_at?: string | null
        }
        Update: {
          assistant_name?: string | null
          assistant_phone?: string | null
          company_id?: string
          created_at?: string | null
          custom_fields?: Json | null
          department?: string | null
          direct_line?: string | null
          email?: string | null
          first_name?: string
          id?: string
          is_active?: boolean | null
          is_primary_contact?: boolean | null
          last_contacted_at?: string | null
          last_name?: string
          linkedin_url?: string | null
          mobile_phone?: string | null
          notes?: string | null
          phone?: string | null
          preferred_contact_method?: string | null
          tags?: string[] | null
          timezone?: string | null
          title?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "crm_contacts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "crm_companies"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_email_audit_logs: {
        Row: {
          action_type: string
          created_at: string
          details: Json | null
          error_message: string | null
          id: string
          ip_address: unknown | null
          resource_id: string | null
          resource_type: string
          success: boolean | null
          user_agent: string | null
          user_id: string | null
        }
        Insert: {
          action_type: string
          created_at?: string
          details?: Json | null
          error_message?: string | null
          id?: string
          ip_address?: unknown | null
          resource_id?: string | null
          resource_type: string
          success?: boolean | null
          user_agent?: string | null
          user_id?: string | null
        }
        Update: {
          action_type?: string
          created_at?: string
          details?: Json | null
          error_message?: string | null
          id?: string
          ip_address?: unknown | null
          resource_id?: string | null
          resource_type?: string
          success?: boolean | null
          user_agent?: string | null
          user_id?: string | null
        }
        Relationships: []
      }
      crm_email_connections: {
        Row: {
          access_token_encrypted: string | null
          connection_status: string
          created_at: string
          email_address: string
          id: string
          last_sync_at: string | null
          refresh_token_encrypted: string | null
          token_expires_at: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          access_token_encrypted?: string | null
          connection_status?: string
          created_at?: string
          email_address: string
          id?: string
          last_sync_at?: string | null
          refresh_token_encrypted?: string | null
          token_expires_at?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          access_token_encrypted?: string | null
          connection_status?: string
          created_at?: string
          email_address?: string
          id?: string
          last_sync_at?: string | null
          refresh_token_encrypted?: string | null
          token_expires_at?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      crm_email_messages: {
        Row: {
          bcc_recipients: Json | null
          body_content: string | null
          body_preview: string | null
          cc_recipients: Json | null
          created_at: string
          has_attachments: boolean | null
          id: string
          is_html: boolean | null
          is_read: boolean | null
          is_sent: boolean | null
          message_id: string
          message_type: string
          received_at: string | null
          recipients: Json | null
          sender_email: string | null
          sender_name: string | null
          sent_at: string | null
          subject: string | null
          thread_id: string | null
          tracking_enabled: boolean | null
          updated_at: string
          user_id: string
        }
        Insert: {
          bcc_recipients?: Json | null
          body_content?: string | null
          body_preview?: string | null
          cc_recipients?: Json | null
          created_at?: string
          has_attachments?: boolean | null
          id?: string
          is_html?: boolean | null
          is_read?: boolean | null
          is_sent?: boolean | null
          message_id: string
          message_type?: string
          received_at?: string | null
          recipients?: Json | null
          sender_email?: string | null
          sender_name?: string | null
          sent_at?: string | null
          subject?: string | null
          thread_id?: string | null
          tracking_enabled?: boolean | null
          updated_at?: string
          user_id: string
        }
        Update: {
          bcc_recipients?: Json | null
          body_content?: string | null
          body_preview?: string | null
          cc_recipients?: Json | null
          created_at?: string
          has_attachments?: boolean | null
          id?: string
          is_html?: boolean | null
          is_read?: boolean | null
          is_sent?: boolean | null
          message_id?: string
          message_type?: string
          received_at?: string | null
          recipients?: Json | null
          sender_email?: string | null
          sender_name?: string | null
          sent_at?: string | null
          subject?: string | null
          thread_id?: string | null
          tracking_enabled?: boolean | null
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      crm_email_settings: {
        Row: {
          auto_sync_enabled: boolean | null
          created_at: string
          default_signature: string | null
          enable_notifications: boolean | null
          enable_tracking: boolean | null
          id: string
          settings: Json | null
          sync_frequency_minutes: number | null
          updated_at: string
          user_id: string
        }
        Insert: {
          auto_sync_enabled?: boolean | null
          created_at?: string
          default_signature?: string | null
          enable_notifications?: boolean | null
          enable_tracking?: boolean | null
          id?: string
          settings?: Json | null
          sync_frequency_minutes?: number | null
          updated_at?: string
          user_id: string
        }
        Update: {
          auto_sync_enabled?: boolean | null
          created_at?: string
          default_signature?: string | null
          enable_notifications?: boolean | null
          enable_tracking?: boolean | null
          id?: string
          settings?: Json | null
          sync_frequency_minutes?: number | null
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      crm_email_tracking: {
        Row: {
          created_at: string
          device_info: Json | null
          id: string
          ip_address: unknown | null
          location_info: Json | null
          message_id: string
          opened_at: string
          recipient_email: string
          tracking_token: string
          user_agent: string | null
        }
        Insert: {
          created_at?: string
          device_info?: Json | null
          id?: string
          ip_address?: unknown | null
          location_info?: Json | null
          message_id: string
          opened_at?: string
          recipient_email: string
          tracking_token: string
          user_agent?: string | null
        }
        Update: {
          created_at?: string
          device_info?: Json | null
          id?: string
          ip_address?: unknown | null
          location_info?: Json | null
          message_id?: string
          opened_at?: string
          recipient_email?: string
          tracking_token?: string
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "crm_email_tracking_message_id_fkey"
            columns: ["message_id"]
            isOneToOne: false
            referencedRelation: "crm_email_messages"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_gamification_settings: {
        Row: {
          achievement_thresholds: Json | null
          achievements_enabled: boolean | null
          company_id: string
          created_at: string | null
          id: string
          is_enabled: boolean | null
          leaderboard_enabled: boolean | null
          public_leaderboard: boolean | null
          scoring_weights: Json | null
          updated_at: string | null
        }
        Insert: {
          achievement_thresholds?: Json | null
          achievements_enabled?: boolean | null
          company_id: string
          created_at?: string | null
          id?: string
          is_enabled?: boolean | null
          leaderboard_enabled?: boolean | null
          public_leaderboard?: boolean | null
          scoring_weights?: Json | null
          updated_at?: string | null
        }
        Update: {
          achievement_thresholds?: Json | null
          achievements_enabled?: boolean | null
          company_id?: string
          created_at?: string | null
          id?: string
          is_enabled?: boolean | null
          leaderboard_enabled?: boolean | null
          public_leaderboard?: boolean | null
          scoring_weights?: Json | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "crm_gamification_settings_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: true
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_leaderboard_scores: {
        Row: {
          company_id: string | null
          created_at: string | null
          id: string
          metadata: Json | null
          period_end: string | null
          period_start: string
          score_type: string
          score_value: number
          time_period: string
          updated_at: string | null
          user_id: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string | null
          id?: string
          metadata?: Json | null
          period_end?: string | null
          period_start: string
          score_type: string
          score_value?: number
          time_period: string
          updated_at?: string | null
          user_id: string
        }
        Update: {
          company_id?: string | null
          created_at?: string | null
          id?: string
          metadata?: Json | null
          period_end?: string | null
          period_start?: string
          score_type?: string
          score_value?: number
          time_period?: string
          updated_at?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "crm_leaderboard_scores_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_opportunities: {
        Row: {
          assigned_rep_id: string | null
          close_probability: number | null
          company_id: string
          competitor_won: string | null
          competitors: string[] | null
          contract_sent: boolean | null
          created_at: string | null
          custom_fields: Json | null
          deal_value: number | null
          decision_criteria: string | null
          decision_makers: string[] | null
          demo_completed: boolean | null
          discovery_completed: boolean | null
          forecast_close_date: string | null
          id: string
          last_activity_date: string | null
          lead_source: string | null
          loss_reason: string | null
          loss_reason_detail: string | null
          name: string
          next_follow_up_date: string | null
          notes: string | null
          product_line: Database["public"]["Enums"]["product_line"] | null
          proposal_id: string | null
          proposal_sent: boolean | null
          risk_assessment_id: string | null
          spin_completion_score: number | null
          stage: Database["public"]["Enums"]["opportunity_stage"] | null
          stage_updated_at: string | null
          tags: string[] | null
          updated_at: string | null
        }
        Insert: {
          assigned_rep_id?: string | null
          close_probability?: number | null
          company_id: string
          competitor_won?: string | null
          competitors?: string[] | null
          contract_sent?: boolean | null
          created_at?: string | null
          custom_fields?: Json | null
          deal_value?: number | null
          decision_criteria?: string | null
          decision_makers?: string[] | null
          demo_completed?: boolean | null
          discovery_completed?: boolean | null
          forecast_close_date?: string | null
          id?: string
          last_activity_date?: string | null
          lead_source?: string | null
          loss_reason?: string | null
          loss_reason_detail?: string | null
          name: string
          next_follow_up_date?: string | null
          notes?: string | null
          product_line?: Database["public"]["Enums"]["product_line"] | null
          proposal_id?: string | null
          proposal_sent?: boolean | null
          risk_assessment_id?: string | null
          spin_completion_score?: number | null
          stage?: Database["public"]["Enums"]["opportunity_stage"] | null
          stage_updated_at?: string | null
          tags?: string[] | null
          updated_at?: string | null
        }
        Update: {
          assigned_rep_id?: string | null
          close_probability?: number | null
          company_id?: string
          competitor_won?: string | null
          competitors?: string[] | null
          contract_sent?: boolean | null
          created_at?: string | null
          custom_fields?: Json | null
          deal_value?: number | null
          decision_criteria?: string | null
          decision_makers?: string[] | null
          demo_completed?: boolean | null
          discovery_completed?: boolean | null
          forecast_close_date?: string | null
          id?: string
          last_activity_date?: string | null
          lead_source?: string | null
          loss_reason?: string | null
          loss_reason_detail?: string | null
          name?: string
          next_follow_up_date?: string | null
          notes?: string | null
          product_line?: Database["public"]["Enums"]["product_line"] | null
          proposal_id?: string | null
          proposal_sent?: boolean | null
          risk_assessment_id?: string | null
          spin_completion_score?: number | null
          stage?: Database["public"]["Enums"]["opportunity_stage"] | null
          stage_updated_at?: string | null
          tags?: string[] | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "crm_opportunities_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "crm_companies"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "crm_opportunities_proposal_id_fkey"
            columns: ["proposal_id"]
            isOneToOne: false
            referencedRelation: "crm_proposals"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "crm_opportunities_risk_assessment_id_fkey"
            columns: ["risk_assessment_id"]
            isOneToOne: false
            referencedRelation: "crm_risk_assessments"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_proposals: {
        Row: {
          client_feedback: string | null
          company_id: string
          created_at: string | null
          created_by: string
          custom_fields: Json | null
          document_key: string | null
          executive_summary: string | null
          feedback_received_at: string | null
          id: string
          is_expired: boolean | null
          last_viewed_at: string | null
          notes: string | null
          opportunity_id: string | null
          pdf_url: string | null
          pricing_details: Json | null
          proposed_solution: string | null
          sent_at: string | null
          signed_at: string | null
          signed_by_contact_id: string | null
          status: Database["public"]["Enums"]["proposal_status"] | null
          tags: string[] | null
          template_used: string | null
          terms_conditions: string | null
          title: string
          updated_at: string | null
          valid_until: string | null
          version_number: number | null
          view_count: number | null
          viewed_at: string | null
        }
        Insert: {
          client_feedback?: string | null
          company_id: string
          created_at?: string | null
          created_by: string
          custom_fields?: Json | null
          document_key?: string | null
          executive_summary?: string | null
          feedback_received_at?: string | null
          id?: string
          is_expired?: boolean | null
          last_viewed_at?: string | null
          notes?: string | null
          opportunity_id?: string | null
          pdf_url?: string | null
          pricing_details?: Json | null
          proposed_solution?: string | null
          sent_at?: string | null
          signed_at?: string | null
          signed_by_contact_id?: string | null
          status?: Database["public"]["Enums"]["proposal_status"] | null
          tags?: string[] | null
          template_used?: string | null
          terms_conditions?: string | null
          title: string
          updated_at?: string | null
          valid_until?: string | null
          version_number?: number | null
          view_count?: number | null
          viewed_at?: string | null
        }
        Update: {
          client_feedback?: string | null
          company_id?: string
          created_at?: string | null
          created_by?: string
          custom_fields?: Json | null
          document_key?: string | null
          executive_summary?: string | null
          feedback_received_at?: string | null
          id?: string
          is_expired?: boolean | null
          last_viewed_at?: string | null
          notes?: string | null
          opportunity_id?: string | null
          pdf_url?: string | null
          pricing_details?: Json | null
          proposed_solution?: string | null
          sent_at?: string | null
          signed_at?: string | null
          signed_by_contact_id?: string | null
          status?: Database["public"]["Enums"]["proposal_status"] | null
          tags?: string[] | null
          template_used?: string | null
          terms_conditions?: string | null
          title?: string
          updated_at?: string | null
          valid_until?: string | null
          version_number?: number | null
          view_count?: number | null
          viewed_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "crm_proposals_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "crm_companies"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "crm_proposals_opportunity_id_fkey"
            columns: ["opportunity_id"]
            isOneToOne: false
            referencedRelation: "crm_opportunities"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_risk_assessments: {
        Row: {
          action_items: Json | null
          assessment_type: string | null
          assessment_url: string | null
          company_id: string
          completed_at: string | null
          completed_by: string | null
          completed_by_type: string | null
          created_at: string | null
          follow_up_date: string | null
          follow_up_notes: string | null
          id: string
          opportunity_id: string | null
          recommendations: Json | null
          requires_follow_up: boolean | null
          results_json: Json
          risk_level: string | null
          score: number
          updated_at: string | null
          version: string | null
        }
        Insert: {
          action_items?: Json | null
          assessment_type?: string | null
          assessment_url?: string | null
          company_id: string
          completed_at?: string | null
          completed_by?: string | null
          completed_by_type?: string | null
          created_at?: string | null
          follow_up_date?: string | null
          follow_up_notes?: string | null
          id?: string
          opportunity_id?: string | null
          recommendations?: Json | null
          requires_follow_up?: boolean | null
          results_json?: Json
          risk_level?: string | null
          score: number
          updated_at?: string | null
          version?: string | null
        }
        Update: {
          action_items?: Json | null
          assessment_type?: string | null
          assessment_url?: string | null
          company_id?: string
          completed_at?: string | null
          completed_by?: string | null
          completed_by_type?: string | null
          created_at?: string | null
          follow_up_date?: string | null
          follow_up_notes?: string | null
          id?: string
          opportunity_id?: string | null
          recommendations?: Json | null
          requires_follow_up?: boolean | null
          results_json?: Json
          risk_level?: string | null
          score?: number
          updated_at?: string | null
          version?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "crm_risk_assessments_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "crm_companies"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "crm_risk_assessments_opportunity_id_fkey"
            columns: ["opportunity_id"]
            isOneToOne: false
            referencedRelation: "crm_opportunities"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_season_winners: {
        Row: {
          category: string
          company_id: string | null
          created_at: string | null
          id: string
          medal: string | null
          rank: number
          score_value: number
          season_name: string
          season_period: string
          user_id: string
        }
        Insert: {
          category: string
          company_id?: string | null
          created_at?: string | null
          id?: string
          medal?: string | null
          rank: number
          score_value: number
          season_name: string
          season_period: string
          user_id: string
        }
        Update: {
          category?: string
          company_id?: string | null
          created_at?: string | null
          id?: string
          medal?: string | null
          rank?: number
          score_value?: number
          season_name?: string
          season_period?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "crm_season_winners_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_spin_contents: {
        Row: {
          created_at: string | null
          id: string
          implication: string | null
          implication_score: number | null
          insights_discovered: Json | null
          key_questions: Json | null
          need_payoff: string | null
          need_payoff_score: number | null
          opportunity_id: string
          pain_points: Json | null
          problem: string | null
          problem_score: number | null
          situation: string | null
          situation_score: number | null
          updated_at: string | null
          value_propositions: Json | null
        }
        Insert: {
          created_at?: string | null
          id?: string
          implication?: string | null
          implication_score?: number | null
          insights_discovered?: Json | null
          key_questions?: Json | null
          need_payoff?: string | null
          need_payoff_score?: number | null
          opportunity_id: string
          pain_points?: Json | null
          problem?: string | null
          problem_score?: number | null
          situation?: string | null
          situation_score?: number | null
          updated_at?: string | null
          value_propositions?: Json | null
        }
        Update: {
          created_at?: string | null
          id?: string
          implication?: string | null
          implication_score?: number | null
          insights_discovered?: Json | null
          key_questions?: Json | null
          need_payoff?: string | null
          need_payoff_score?: number | null
          opportunity_id?: string
          pain_points?: Json | null
          problem?: string | null
          problem_score?: number | null
          situation?: string | null
          situation_score?: number | null
          updated_at?: string | null
          value_propositions?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "crm_spin_contents_opportunity_id_fkey"
            columns: ["opportunity_id"]
            isOneToOne: false
            referencedRelation: "crm_opportunities"
            referencedColumns: ["id"]
          },
        ]
      }
      crm_tasks: {
        Row: {
          actual_duration_minutes: number | null
          assigned_user_id: string
          auto_rule_id: string | null
          company_id: string | null
          completed_at: string | null
          completion_notes: string | null
          contact_id: string | null
          created_at: string | null
          created_by: string
          custom_fields: Json | null
          description: string | null
          due_date: string | null
          estimated_duration_minutes: number | null
          id: string
          is_auto_generated: boolean | null
          opportunity_id: string | null
          priority: Database["public"]["Enums"]["task_priority"] | null
          reminder_date: string | null
          reminder_sent: boolean | null
          status: Database["public"]["Enums"]["task_status"] | null
          tags: string[] | null
          task_type: string | null
          title: string
          updated_at: string | null
        }
        Insert: {
          actual_duration_minutes?: number | null
          assigned_user_id: string
          auto_rule_id?: string | null
          company_id?: string | null
          completed_at?: string | null
          completion_notes?: string | null
          contact_id?: string | null
          created_at?: string | null
          created_by: string
          custom_fields?: Json | null
          description?: string | null
          due_date?: string | null
          estimated_duration_minutes?: number | null
          id?: string
          is_auto_generated?: boolean | null
          opportunity_id?: string | null
          priority?: Database["public"]["Enums"]["task_priority"] | null
          reminder_date?: string | null
          reminder_sent?: boolean | null
          status?: Database["public"]["Enums"]["task_status"] | null
          tags?: string[] | null
          task_type?: string | null
          title: string
          updated_at?: string | null
        }
        Update: {
          actual_duration_minutes?: number | null
          assigned_user_id?: string
          auto_rule_id?: string | null
          company_id?: string | null
          completed_at?: string | null
          completion_notes?: string | null
          contact_id?: string | null
          created_at?: string | null
          created_by?: string
          custom_fields?: Json | null
          description?: string | null
          due_date?: string | null
          estimated_duration_minutes?: number | null
          id?: string
          is_auto_generated?: boolean | null
          opportunity_id?: string | null
          priority?: Database["public"]["Enums"]["task_priority"] | null
          reminder_date?: string | null
          reminder_sent?: boolean | null
          status?: Database["public"]["Enums"]["task_status"] | null
          tags?: string[] | null
          task_type?: string | null
          title?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "crm_tasks_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "crm_companies"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "crm_tasks_contact_id_fkey"
            columns: ["contact_id"]
            isOneToOne: false
            referencedRelation: "crm_contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "crm_tasks_opportunity_id_fkey"
            columns: ["opportunity_id"]
            isOneToOne: false
            referencedRelation: "crm_opportunities"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "fk_crm_tasks_auto_rule"
            columns: ["auto_rule_id"]
            isOneToOne: false
            referencedRelation: "crm_automation_rules"
            referencedColumns: ["id"]
          },
        ]
      }
      dashboard_configs: {
        Row: {
          company_id: string
          created_at: string | null
          created_by: string | null
          dashboard_name: string
          dashboard_type: string
          id: string
          is_default: boolean | null
          layout_config: Json
          permissions: Json | null
          refresh_interval: number | null
          updated_at: string | null
          widget_configs: Json
        }
        Insert: {
          company_id: string
          created_at?: string | null
          created_by?: string | null
          dashboard_name: string
          dashboard_type: string
          id?: string
          is_default?: boolean | null
          layout_config?: Json
          permissions?: Json | null
          refresh_interval?: number | null
          updated_at?: string | null
          widget_configs?: Json
        }
        Update: {
          company_id?: string
          created_at?: string | null
          created_by?: string | null
          dashboard_name?: string
          dashboard_type?: string
          id?: string
          is_default?: boolean | null
          layout_config?: Json
          permissions?: Json | null
          refresh_interval?: number | null
          updated_at?: string | null
          widget_configs?: Json
        }
        Relationships: [
          {
            foreignKeyName: "dashboard_configs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      data_access_permissions: {
        Row: {
          compliance_justification: string | null
          expires_at: string | null
          granted_at: string
          granted_by: string
          id: string
          is_active: boolean
          permission_type: string
          reason: string | null
          resource_id: string | null
          resource_type: string
          user_id: string
        }
        Insert: {
          compliance_justification?: string | null
          expires_at?: string | null
          granted_at?: string
          granted_by: string
          id?: string
          is_active?: boolean
          permission_type: string
          reason?: string | null
          resource_id?: string | null
          resource_type: string
          user_id: string
        }
        Update: {
          compliance_justification?: string | null
          expires_at?: string | null
          granted_at?: string
          granted_by?: string
          id?: string
          is_active?: boolean
          permission_type?: string
          reason?: string | null
          resource_id?: string | null
          resource_type?: string
          user_id?: string
        }
        Relationships: []
      }
      data_classifications: {
        Row: {
          access_level_required: string
          classification_level: string
          column_name: string
          compliance_requirements: string[] | null
          created_at: string
          data_type: string
          encryption_required: boolean
          id: string
          masking_rules: Json | null
          retention_period_days: number | null
          table_name: string
        }
        Insert: {
          access_level_required: string
          classification_level: string
          column_name: string
          compliance_requirements?: string[] | null
          created_at?: string
          data_type: string
          encryption_required?: boolean
          id?: string
          masking_rules?: Json | null
          retention_period_days?: number | null
          table_name: string
        }
        Update: {
          access_level_required?: string
          classification_level?: string
          column_name?: string
          compliance_requirements?: string[] | null
          created_at?: string
          data_type?: string
          encryption_required?: boolean
          id?: string
          masking_rules?: Json | null
          retention_period_days?: number | null
          table_name?: string
        }
        Relationships: []
      }
      databridge_alerts: {
        Row: {
          alert_type: string
          alerted_at: string
          created_at: string | null
          id: string
          log_id: string
          recipient_email: string
          status: string
          updated_at: string | null
        }
        Insert: {
          alert_type?: string
          alerted_at?: string
          created_at?: string | null
          id?: string
          log_id: string
          recipient_email: string
          status?: string
          updated_at?: string | null
        }
        Update: {
          alert_type?: string
          alerted_at?: string
          created_at?: string | null
          id?: string
          log_id?: string
          recipient_email?: string
          status?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "databridge_alerts_log_id_fkey"
            columns: ["log_id"]
            isOneToOne: false
            referencedRelation: "databridge_logs"
            referencedColumns: ["id"]
          },
        ]
      }
      databridge_logs: {
        Row: {
          created_at: string | null
          error_message: string | null
          id: string
          last_synced_at: string
          module_name: string
          origin_module: string | null
          records_processed: number | null
          retry_count: number | null
          status: string
          sync_duration_ms: number | null
          target_module: string | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          error_message?: string | null
          id?: string
          last_synced_at?: string
          module_name: string
          origin_module?: string | null
          records_processed?: number | null
          retry_count?: number | null
          status: string
          sync_duration_ms?: number | null
          target_module?: string | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          error_message?: string | null
          id?: string
          last_synced_at?: string
          module_name?: string
          origin_module?: string | null
          records_processed?: number | null
          retry_count?: number | null
          status?: string
          sync_duration_ms?: number | null
          target_module?: string | null
          updated_at?: string | null
        }
        Relationships: []
      }
      deal_activities: {
        Row: {
          activity_type: string
          completed: boolean
          completed_at: string | null
          created_at: string
          created_by: string
          deal_id: string
          description: string | null
          id: string
          scheduled_at: string | null
          subject: string
          updated_at: string
        }
        Insert: {
          activity_type: string
          completed?: boolean
          completed_at?: string | null
          created_at?: string
          created_by: string
          deal_id: string
          description?: string | null
          id?: string
          scheduled_at?: string | null
          subject: string
          updated_at?: string
        }
        Update: {
          activity_type?: string
          completed?: boolean
          completed_at?: string | null
          created_at?: string
          created_by?: string
          deal_id?: string
          description?: string | null
          id?: string
          scheduled_at?: string | null
          subject?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "deal_activities_deal_id_fkey"
            columns: ["deal_id"]
            isOneToOne: false
            referencedRelation: "deals"
            referencedColumns: ["id"]
          },
        ]
      }
      deal_stages: {
        Row: {
          color: string | null
          created_at: string
          id: string
          is_active: boolean
          name: string
          probability: number
          stage_order: number
          updated_at: string
        }
        Insert: {
          color?: string | null
          created_at?: string
          id?: string
          is_active?: boolean
          name: string
          probability?: number
          stage_order: number
          updated_at?: string
        }
        Update: {
          color?: string | null
          created_at?: string
          id?: string
          is_active?: boolean
          name?: string
          probability?: number
          stage_order?: number
          updated_at?: string
        }
        Relationships: []
      }
      deals: {
        Row: {
          actual_close_date: string | null
          assigned_to: string | null
          company_id: string | null
          company_name: string
          contact_email: string
          contact_name: string
          created_at: string
          currency: string
          expected_close_date: string | null
          id: string
          investment_analysis_id: string | null
          last_activity_date: string | null
          lead_id: string | null
          loss_reason: string | null
          next_follow_up_date: string | null
          notes: string | null
          probability: number
          product_line: string | null
          proposal_id: string | null
          risk_assessment_id: string | null
          sarah_recommendations: Json | null
          spin_completion_score: number | null
          spin_implication: string | null
          spin_need_payoff: string | null
          spin_problem: string | null
          spin_situation: string | null
          stage_id: string
          status: string
          title: string
          updated_at: string
          value: number
        }
        Insert: {
          actual_close_date?: string | null
          assigned_to?: string | null
          company_id?: string | null
          company_name: string
          contact_email: string
          contact_name: string
          created_at?: string
          currency?: string
          expected_close_date?: string | null
          id?: string
          investment_analysis_id?: string | null
          last_activity_date?: string | null
          lead_id?: string | null
          loss_reason?: string | null
          next_follow_up_date?: string | null
          notes?: string | null
          probability?: number
          product_line?: string | null
          proposal_id?: string | null
          risk_assessment_id?: string | null
          sarah_recommendations?: Json | null
          spin_completion_score?: number | null
          spin_implication?: string | null
          spin_need_payoff?: string | null
          spin_problem?: string | null
          spin_situation?: string | null
          stage_id: string
          status?: string
          title: string
          updated_at?: string
          value?: number
        }
        Update: {
          actual_close_date?: string | null
          assigned_to?: string | null
          company_id?: string | null
          company_name?: string
          contact_email?: string
          contact_name?: string
          created_at?: string
          currency?: string
          expected_close_date?: string | null
          id?: string
          investment_analysis_id?: string | null
          last_activity_date?: string | null
          lead_id?: string | null
          loss_reason?: string | null
          next_follow_up_date?: string | null
          notes?: string | null
          probability?: number
          product_line?: string | null
          proposal_id?: string | null
          risk_assessment_id?: string | null
          sarah_recommendations?: Json | null
          spin_completion_score?: number | null
          spin_implication?: string | null
          spin_need_payoff?: string | null
          spin_problem?: string | null
          spin_situation?: string | null
          stage_id?: string
          status?: string
          title?: string
          updated_at?: string
          value?: number
        }
        Relationships: [
          {
            foreignKeyName: "deals_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "deals_investment_analysis_id_fkey"
            columns: ["investment_analysis_id"]
            isOneToOne: false
            referencedRelation: "investment_analysis"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "deals_lead_id_fkey"
            columns: ["lead_id"]
            isOneToOne: false
            referencedRelation: "leads"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "deals_risk_assessment_id_fkey"
            columns: ["risk_assessment_id"]
            isOneToOne: false
            referencedRelation: "assessments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "deals_stage_id_fkey"
            columns: ["stage_id"]
            isOneToOne: false
            referencedRelation: "deal_stages"
            referencedColumns: ["id"]
          },
        ]
      }
      deduction_codes: {
        Row: {
          code: string
          created_at: string
          created_by: string | null
          description: string
          gl_code: string | null
          id: string
          pre_tax: boolean
          updated_at: string
        }
        Insert: {
          code: string
          created_at?: string
          created_by?: string | null
          description: string
          gl_code?: string | null
          id?: string
          pre_tax?: boolean
          updated_at?: string
        }
        Update: {
          code?: string
          created_at?: string
          created_by?: string | null
          description?: string
          gl_code?: string | null
          id?: string
          pre_tax?: boolean
          updated_at?: string
        }
        Relationships: []
      }
      deduction_definitions: {
        Row: {
          annual_limit: number | null
          calculation_method: string
          code: string
          company_id: string
          created_at: string
          created_by: string | null
          custom_formula: string | null
          deduction_schedule: string | null
          deduction_type: string
          default_amount: number | null
          effective_end_date: string | null
          effective_start_date: string
          employer_match_percentage: number | null
          gl_code: string | null
          id: string
          is_active: boolean | null
          is_employee_paid: boolean | null
          is_employer_paid: boolean | null
          is_global: boolean | null
          is_reimbursable: boolean | null
          is_taxable: boolean | null
          name: string
          per_check_limit: number | null
          percentage_rate: number | null
          show_on_pay_stub: boolean | null
          updated_at: string
          w2_reporting_code: string | null
        }
        Insert: {
          annual_limit?: number | null
          calculation_method?: string
          code: string
          company_id: string
          created_at?: string
          created_by?: string | null
          custom_formula?: string | null
          deduction_schedule?: string | null
          deduction_type: string
          default_amount?: number | null
          effective_end_date?: string | null
          effective_start_date?: string
          employer_match_percentage?: number | null
          gl_code?: string | null
          id?: string
          is_active?: boolean | null
          is_employee_paid?: boolean | null
          is_employer_paid?: boolean | null
          is_global?: boolean | null
          is_reimbursable?: boolean | null
          is_taxable?: boolean | null
          name: string
          per_check_limit?: number | null
          percentage_rate?: number | null
          show_on_pay_stub?: boolean | null
          updated_at?: string
          w2_reporting_code?: string | null
        }
        Update: {
          annual_limit?: number | null
          calculation_method?: string
          code?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          custom_formula?: string | null
          deduction_schedule?: string | null
          deduction_type?: string
          default_amount?: number | null
          effective_end_date?: string | null
          effective_start_date?: string
          employer_match_percentage?: number | null
          gl_code?: string | null
          id?: string
          is_active?: boolean | null
          is_employee_paid?: boolean | null
          is_employer_paid?: boolean | null
          is_global?: boolean | null
          is_reimbursable?: boolean | null
          is_taxable?: boolean | null
          name?: string
          per_check_limit?: number | null
          percentage_rate?: number | null
          show_on_pay_stub?: boolean | null
          updated_at?: string
          w2_reporting_code?: string | null
        }
        Relationships: []
      }
      deduction_types: {
        Row: {
          code: string
          company_id: string | null
          created_at: string | null
          description: string | null
          id: string
          is_active: boolean | null
          is_pre_tax: boolean | null
          name: string
          updated_at: string | null
        }
        Insert: {
          code: string
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          is_pre_tax?: boolean | null
          name: string
          updated_at?: string | null
        }
        Update: {
          code?: string
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          is_pre_tax?: boolean | null
          name?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "deduction_types_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      departments: {
        Row: {
          code: string | null
          created_at: string
          division_id: string
          id: string
          is_active: boolean
          name: string
          updated_at: string
        }
        Insert: {
          code?: string | null
          created_at?: string
          division_id: string
          id?: string
          is_active?: boolean
          name: string
          updated_at?: string
        }
        Update: {
          code?: string | null
          created_at?: string
          division_id?: string
          id?: string
          is_active?: boolean
          name?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "departments_division_id_fkey"
            columns: ["division_id"]
            isOneToOne: false
            referencedRelation: "divisions"
            referencedColumns: ["id"]
          },
        ]
      }
      development_plans: {
        Row: {
          approved_at: string | null
          approved_by: string | null
          check_in_schedule: Json | null
          company_id: string
          completion_notes: string | null
          created_at: string
          created_by: string | null
          description: string | null
          employee_id: string
          end_date: string
          evaluation_id: string | null
          final_evaluation_date: string | null
          goals: Json
          id: string
          start_date: string
          status: Database["public"]["Enums"]["development_plan_status"]
          title: string
          training_assignments: Json | null
          trigger_reason: string | null
          updated_at: string
        }
        Insert: {
          approved_at?: string | null
          approved_by?: string | null
          check_in_schedule?: Json | null
          company_id: string
          completion_notes?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          employee_id: string
          end_date: string
          evaluation_id?: string | null
          final_evaluation_date?: string | null
          goals?: Json
          id?: string
          start_date: string
          status?: Database["public"]["Enums"]["development_plan_status"]
          title: string
          training_assignments?: Json | null
          trigger_reason?: string | null
          updated_at?: string
        }
        Update: {
          approved_at?: string | null
          approved_by?: string | null
          check_in_schedule?: Json | null
          company_id?: string
          completion_notes?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          employee_id?: string
          end_date?: string
          evaluation_id?: string | null
          final_evaluation_date?: string | null
          goals?: Json
          id?: string
          start_date?: string
          status?: Database["public"]["Enums"]["development_plan_status"]
          title?: string
          training_assignments?: Json | null
          trigger_reason?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "development_plans_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "development_plans_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "development_plans_evaluation_id_fkey"
            columns: ["evaluation_id"]
            isOneToOne: false
            referencedRelation: "performance_evaluations"
            referencedColumns: ["id"]
          },
        ]
      }
      disbursement_batches: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          disbursement_type: string
          funding_confirmed: boolean
          funding_confirmed_at: string | null
          funding_required: number
          id: string
          method: string
          nacha_file_id: string | null
          pay_run_id: string | null
          scheduled_date: string
          status: string
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          disbursement_type: string
          funding_confirmed?: boolean
          funding_confirmed_at?: string | null
          funding_required?: number
          id?: string
          method: string
          nacha_file_id?: string | null
          pay_run_id?: string | null
          scheduled_date: string
          status?: string
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          disbursement_type?: string
          funding_confirmed?: boolean
          funding_confirmed_at?: string | null
          funding_required?: number
          id?: string
          method?: string
          nacha_file_id?: string | null
          pay_run_id?: string | null
          scheduled_date?: string
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "disbursement_batches_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "disbursement_batches_pay_run_id_fkey"
            columns: ["pay_run_id"]
            isOneToOne: false
            referencedRelation: "payroll_pay_runs"
            referencedColumns: ["id"]
          },
        ]
      }
      disbursement_instructions: {
        Row: {
          amount: number
          bank_account_id: string | null
          batch_id: string
          created_at: string
          failure_reason: string | null
          id: string
          memo: string | null
          processed_at: string | null
          recipient_id: string
          recipient_type: string
          reference_code: string | null
          retry_count: number
          status: string
          updated_at: string
        }
        Insert: {
          amount: number
          bank_account_id?: string | null
          batch_id: string
          created_at?: string
          failure_reason?: string | null
          id?: string
          memo?: string | null
          processed_at?: string | null
          recipient_id: string
          recipient_type: string
          reference_code?: string | null
          retry_count?: number
          status?: string
          updated_at?: string
        }
        Update: {
          amount?: number
          bank_account_id?: string | null
          batch_id?: string
          created_at?: string
          failure_reason?: string | null
          id?: string
          memo?: string | null
          processed_at?: string | null
          recipient_id?: string
          recipient_type?: string
          reference_code?: string | null
          retry_count?: number
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "disbursement_instructions_bank_account_id_fkey"
            columns: ["bank_account_id"]
            isOneToOne: false
            referencedRelation: "employee_bank_accounts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "disbursement_instructions_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "disbursement_batches"
            referencedColumns: ["id"]
          },
        ]
      }
      disbursement_routing_rules: {
        Row: {
          company_id: string
          conditions: Json
          created_at: string
          cutoff_time: string | null
          fallback_method: string | null
          id: string
          is_active: boolean
          max_amount: number | null
          priority: number
          recipient_type: string
          routing_method: string
          rule_name: string
          updated_at: string
        }
        Insert: {
          company_id: string
          conditions?: Json
          created_at?: string
          cutoff_time?: string | null
          fallback_method?: string | null
          id?: string
          is_active?: boolean
          max_amount?: number | null
          priority?: number
          recipient_type: string
          routing_method: string
          rule_name: string
          updated_at?: string
        }
        Update: {
          company_id?: string
          conditions?: Json
          created_at?: string
          cutoff_time?: string | null
          fallback_method?: string | null
          id?: string
          is_active?: boolean
          max_amount?: number | null
          priority?: number
          recipient_type?: string
          routing_method?: string
          rule_name?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "disbursement_routing_rules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      disbursement_vendors: {
        Row: {
          company_id: string
          contact_info: Json | null
          created_at: string
          id: string
          is_active: boolean
          payment_preferences: Json | null
          tax_id: string | null
          updated_at: string
          vendor_name: string
          vendor_type: string
        }
        Insert: {
          company_id: string
          contact_info?: Json | null
          created_at?: string
          id?: string
          is_active?: boolean
          payment_preferences?: Json | null
          tax_id?: string | null
          updated_at?: string
          vendor_name: string
          vendor_type: string
        }
        Update: {
          company_id?: string
          contact_info?: Json | null
          created_at?: string
          id?: string
          is_active?: boolean
          payment_preferences?: Json | null
          tax_id?: string | null
          updated_at?: string
          vendor_name?: string
          vendor_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "disbursement_vendors_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      divisions: {
        Row: {
          code: string | null
          company_id: string
          created_at: string
          default_bank_account_id: string | null
          id: string
          invoice_template_id: string | null
          is_active: boolean
          location_id: string | null
          name: string
          payroll_schedule_id: string | null
          updated_at: string
        }
        Insert: {
          code?: string | null
          company_id: string
          created_at?: string
          default_bank_account_id?: string | null
          id?: string
          invoice_template_id?: string | null
          is_active?: boolean
          location_id?: string | null
          name: string
          payroll_schedule_id?: string | null
          updated_at?: string
        }
        Update: {
          code?: string | null
          company_id?: string
          created_at?: string
          default_bank_account_id?: string | null
          id?: string
          invoice_template_id?: string | null
          is_active?: boolean
          location_id?: string | null
          name?: string
          payroll_schedule_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "divisions_location_id_fkey"
            columns: ["location_id"]
            isOneToOne: false
            referencedRelation: "locations"
            referencedColumns: ["id"]
          },
        ]
      }
      document_approvals: {
        Row: {
          approval_type: string
          approver_id: string
          created_at: string
          digital_signature: string | null
          document_id: string
          id: string
          notes: string | null
          signed_at: string | null
          status: string
        }
        Insert: {
          approval_type?: string
          approver_id: string
          created_at?: string
          digital_signature?: string | null
          document_id: string
          id?: string
          notes?: string | null
          signed_at?: string | null
          status?: string
        }
        Update: {
          approval_type?: string
          approver_id?: string
          created_at?: string
          digital_signature?: string | null
          document_id?: string
          id?: string
          notes?: string | null
          signed_at?: string | null
          status?: string
        }
        Relationships: [
          {
            foreignKeyName: "document_approvals_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "documents"
            referencedColumns: ["id"]
          },
        ]
      }
      document_comments: {
        Row: {
          comment_text: string
          comment_type: string
          created_at: string
          document_id: string
          id: string
          is_resolved: boolean
          section_id: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          comment_text: string
          comment_type?: string
          created_at?: string
          document_id: string
          id?: string
          is_resolved?: boolean
          section_id?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          comment_text?: string
          comment_type?: string
          created_at?: string
          document_id?: string
          id?: string
          is_resolved?: boolean
          section_id?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "document_comments_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "documents"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "document_comments_section_id_fkey"
            columns: ["section_id"]
            isOneToOne: false
            referencedRelation: "document_sections"
            referencedColumns: ["id"]
          },
        ]
      }
      document_sections: {
        Row: {
          created_at: string
          document_id: string
          id: string
          is_collapsed: boolean
          is_locked: boolean
          is_required: boolean
          section_content: Json
          section_order: number
          section_title: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          document_id: string
          id?: string
          is_collapsed?: boolean
          is_locked?: boolean
          is_required?: boolean
          section_content?: Json
          section_order?: number
          section_title: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          document_id?: string
          id?: string
          is_collapsed?: boolean
          is_locked?: boolean
          is_required?: boolean
          section_content?: Json
          section_order?: number
          section_title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "document_sections_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "documents"
            referencedColumns: ["id"]
          },
        ]
      }
      document_share_tokens: {
        Row: {
          created_at: string
          created_by: string
          document_id: string
          document_type: string
          expires_at: string
          id: string
          is_active: boolean
          max_uses: number
          token: string
          used_at: string | null
          used_by_ip: unknown | null
          view_count: number
        }
        Insert: {
          created_at?: string
          created_by: string
          document_id: string
          document_type: string
          expires_at: string
          id?: string
          is_active?: boolean
          max_uses?: number
          token: string
          used_at?: string | null
          used_by_ip?: unknown | null
          view_count?: number
        }
        Update: {
          created_at?: string
          created_by?: string
          document_id?: string
          document_type?: string
          expires_at?: string
          id?: string
          is_active?: boolean
          max_uses?: number
          token?: string
          used_at?: string | null
          used_by_ip?: unknown | null
          view_count?: number
        }
        Relationships: []
      }
      document_templates: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          description: string | null
          document_type_id: string
          id: string
          is_default: boolean
          is_public: boolean
          name: string
          tags: string[] | null
          template_data: Json
          updated_at: string
          version: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          document_type_id: string
          id?: string
          is_default?: boolean
          is_public?: boolean
          name: string
          tags?: string[] | null
          template_data?: Json
          updated_at?: string
          version?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          document_type_id?: string
          id?: string
          is_default?: boolean
          is_public?: boolean
          name?: string
          tags?: string[] | null
          template_data?: Json
          updated_at?: string
          version?: string
        }
        Relationships: [
          {
            foreignKeyName: "document_templates_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "document_templates_document_type_id_fkey"
            columns: ["document_type_id"]
            isOneToOne: false
            referencedRelation: "document_types"
            referencedColumns: ["id"]
          },
        ]
      }
      document_types: {
        Row: {
          category: string
          compliance_framework: string[] | null
          created_at: string
          description: string | null
          id: string
          is_active: boolean
          legal_disclaimer: string | null
          name: string
          updated_at: string
        }
        Insert: {
          category: string
          compliance_framework?: string[] | null
          created_at?: string
          description?: string | null
          id?: string
          is_active?: boolean
          legal_disclaimer?: string | null
          name: string
          updated_at?: string
        }
        Update: {
          category?: string
          compliance_framework?: string[] | null
          created_at?: string
          description?: string | null
          id?: string
          is_active?: boolean
          legal_disclaimer?: string | null
          name?: string
          updated_at?: string
        }
        Relationships: []
      }
      document_versions: {
        Row: {
          change_summary: string | null
          content: Json
          created_at: string
          created_by: string
          document_id: string
          dynamic_fields: Json
          id: string
          version: string
        }
        Insert: {
          change_summary?: string | null
          content: Json
          created_at?: string
          created_by: string
          document_id: string
          dynamic_fields?: Json
          id?: string
          version: string
        }
        Update: {
          change_summary?: string | null
          content?: Json
          created_at?: string
          created_by?: string
          document_id?: string
          dynamic_fields?: Json
          id?: string
          version?: string
        }
        Relationships: [
          {
            foreignKeyName: "document_versions_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "documents"
            referencedColumns: ["id"]
          },
        ]
      }
      documents: {
        Row: {
          company_id: string
          content: Json
          created_at: string
          created_by: string
          document_type_id: string
          dynamic_fields: Json
          id: string
          is_locked: boolean
          last_modified_by: string | null
          metadata: Json | null
          pdf_url: string | null
          published_at: string | null
          published_by: string | null
          status: string
          template_id: string | null
          title: string
          updated_at: string
          version: string
        }
        Insert: {
          company_id: string
          content?: Json
          created_at?: string
          created_by: string
          document_type_id: string
          dynamic_fields?: Json
          id?: string
          is_locked?: boolean
          last_modified_by?: string | null
          metadata?: Json | null
          pdf_url?: string | null
          published_at?: string | null
          published_by?: string | null
          status?: string
          template_id?: string | null
          title: string
          updated_at?: string
          version?: string
        }
        Update: {
          company_id?: string
          content?: Json
          created_at?: string
          created_by?: string
          document_type_id?: string
          dynamic_fields?: Json
          id?: string
          is_locked?: boolean
          last_modified_by?: string | null
          metadata?: Json | null
          pdf_url?: string | null
          published_at?: string | null
          published_by?: string | null
          status?: string
          template_id?: string | null
          title?: string
          updated_at?: string
          version?: string
        }
        Relationships: [
          {
            foreignKeyName: "documents_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "documents_document_type_id_fkey"
            columns: ["document_type_id"]
            isOneToOne: false
            referencedRelation: "document_types"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "documents_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "document_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      dynamic_fields: {
        Row: {
          created_at: string
          default_value: string | null
          description: string | null
          field_label: string
          field_name: string
          field_type: string
          id: string
          is_required: boolean
          source_column: string | null
          source_table: string | null
          validation_rules: Json | null
        }
        Insert: {
          created_at?: string
          default_value?: string | null
          description?: string | null
          field_label: string
          field_name: string
          field_type?: string
          id?: string
          is_required?: boolean
          source_column?: string | null
          source_table?: string | null
          validation_rules?: Json | null
        }
        Update: {
          created_at?: string
          default_value?: string | null
          description?: string | null
          field_label?: string
          field_name?: string
          field_type?: string
          id?: string
          is_required?: boolean
          source_column?: string | null
          source_table?: string | null
          validation_rules?: Json | null
        }
        Relationships: []
      }
      dynamic_hints: {
        Row: {
          created_at: string | null
          hint_content: string
          hint_type: string | null
          id: string
          is_active: boolean | null
          module_id: string
          priority: number | null
          question_id: string | null
          topic: string
          trigger_condition: Json
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          hint_content: string
          hint_type?: string | null
          id?: string
          is_active?: boolean | null
          module_id: string
          priority?: number | null
          question_id?: string | null
          topic: string
          trigger_condition: Json
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          hint_content?: string
          hint_type?: string | null
          id?: string
          is_active?: boolean | null
          module_id?: string
          priority?: number | null
          question_id?: string | null
          topic?: string
          trigger_condition?: Json
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "dynamic_hints_module_id_fkey"
            columns: ["module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      earnings_types: {
        Row: {
          code: string
          company_id: string | null
          created_at: string | null
          description: string | null
          id: string
          is_active: boolean | null
          is_overtime: boolean | null
          is_taxable: boolean | null
          name: string
          updated_at: string | null
        }
        Insert: {
          code: string
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          is_overtime?: boolean | null
          is_taxable?: boolean | null
          name: string
          updated_at?: string | null
        }
        Update: {
          code?: string
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          is_overtime?: boolean | null
          is_taxable?: boolean | null
          name?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "earnings_types_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      eligibility_rules: {
        Row: {
          created_at: string
          created_by: string | null
          id: string
          measurement_method: Database["public"]["Enums"]["measurement_method"]
          min_hours_per_week: number
          name: string
          rehire_reset_period: number
          updated_at: string
          waiting_period_days: number
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          id?: string
          measurement_method?: Database["public"]["Enums"]["measurement_method"]
          min_hours_per_week?: number
          name: string
          rehire_reset_period?: number
          updated_at?: string
          waiting_period_days?: number
        }
        Update: {
          created_at?: string
          created_by?: string | null
          id?: string
          measurement_method?: Database["public"]["Enums"]["measurement_method"]
          min_hours_per_week?: number
          name?: string
          rehire_reset_period?: number
          updated_at?: string
          waiting_period_days?: number
        }
        Relationships: []
      }
      email_ab_tests: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          ended_at: string | null
          id: string
          is_active: boolean
          name: string
          split_percentage: number
          started_at: string | null
          test_type: string
          updated_at: string
          variant_a_config: Json
          variant_b_config: Json
          winner_variant: string | null
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          ended_at?: string | null
          id?: string
          is_active?: boolean
          name: string
          split_percentage?: number
          started_at?: string | null
          test_type?: string
          updated_at?: string
          variant_a_config: Json
          variant_b_config: Json
          winner_variant?: string | null
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          ended_at?: string | null
          id?: string
          is_active?: boolean
          name?: string
          split_percentage?: number
          started_at?: string | null
          test_type?: string
          updated_at?: string
          variant_a_config?: Json
          variant_b_config?: Json
          winner_variant?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "email_ab_tests_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      email_audit_logs: {
        Row: {
          action_type: string
          created_at: string
          id: string
          ip_address: unknown | null
          metadata: Json | null
          recipient_email: string
          subject: string | null
          template_id: string | null
          user_agent: string | null
          user_id: string | null
        }
        Insert: {
          action_type: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          recipient_email: string
          subject?: string | null
          template_id?: string | null
          user_agent?: string | null
          user_id?: string | null
        }
        Update: {
          action_type?: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          recipient_email?: string
          subject?: string | null
          template_id?: string | null
          user_agent?: string | null
          user_id?: string | null
        }
        Relationships: []
      }
      email_automation_logs: {
        Row: {
          automation_id: string
          clicked_at: string | null
          email_id: string | null
          email_status: string
          error_message: string | null
          id: string
          opened_at: string | null
          recipient_email: string
          recipient_type: string
          sent_at: string
          trigger_data: Json | null
        }
        Insert: {
          automation_id: string
          clicked_at?: string | null
          email_id?: string | null
          email_status?: string
          error_message?: string | null
          id?: string
          opened_at?: string | null
          recipient_email: string
          recipient_type: string
          sent_at?: string
          trigger_data?: Json | null
        }
        Update: {
          automation_id?: string
          clicked_at?: string | null
          email_id?: string | null
          email_status?: string
          error_message?: string | null
          id?: string
          opened_at?: string | null
          recipient_email?: string
          recipient_type?: string
          sent_at?: string
          trigger_data?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "email_automation_logs_automation_id_fkey"
            columns: ["automation_id"]
            isOneToOne: false
            referencedRelation: "email_automations"
            referencedColumns: ["id"]
          },
        ]
      }
      email_automation_queue: {
        Row: {
          attempts: number
          automation_id: string
          created_at: string
          error_message: string | null
          id: string
          max_attempts: number
          processed_at: string | null
          recipient_email: string
          recipient_type: string
          scheduled_for: string
          status: string
          trigger_data: Json
        }
        Insert: {
          attempts?: number
          automation_id: string
          created_at?: string
          error_message?: string | null
          id?: string
          max_attempts?: number
          processed_at?: string | null
          recipient_email: string
          recipient_type: string
          scheduled_for: string
          status?: string
          trigger_data: Json
        }
        Update: {
          attempts?: number
          automation_id?: string
          created_at?: string
          error_message?: string | null
          id?: string
          max_attempts?: number
          processed_at?: string | null
          recipient_email?: string
          recipient_type?: string
          scheduled_for?: string
          status?: string
          trigger_data?: Json
        }
        Relationships: [
          {
            foreignKeyName: "email_automation_queue_automation_id_fkey"
            columns: ["automation_id"]
            isOneToOne: false
            referencedRelation: "email_automations"
            referencedColumns: ["id"]
          },
        ]
      }
      email_automation_rules: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          delay_minutes: number | null
          description: string | null
          id: string
          is_active: boolean
          name: string
          template_id: string | null
          trigger_conditions: Json | null
          trigger_type: string
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          delay_minutes?: number | null
          description?: string | null
          id?: string
          is_active?: boolean
          name: string
          template_id?: string | null
          trigger_conditions?: Json | null
          trigger_type: string
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          delay_minutes?: number | null
          description?: string | null
          id?: string
          is_active?: boolean
          name?: string
          template_id?: string | null
          trigger_conditions?: Json | null
          trigger_type?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "email_automation_rules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "email_automation_rules_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "email_templates_v2"
            referencedColumns: ["id"]
          },
        ]
      }
      email_automations: {
        Row: {
          body_template: string | null
          company_id: string | null
          created_at: string
          created_by: string | null
          delay_hours: number
          id: string
          is_active: boolean
          last_run_at: string | null
          last_sent_count: number | null
          name: string
          send_to_admin: boolean
          send_to_learner: boolean
          send_to_manager: boolean
          subject_template: string
          template_type: string
          trigger_type: string
          updated_at: string
        }
        Insert: {
          body_template?: string | null
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          delay_hours?: number
          id?: string
          is_active?: boolean
          last_run_at?: string | null
          last_sent_count?: number | null
          name: string
          send_to_admin?: boolean
          send_to_learner?: boolean
          send_to_manager?: boolean
          subject_template: string
          template_type?: string
          trigger_type: string
          updated_at?: string
        }
        Update: {
          body_template?: string | null
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          delay_hours?: number
          id?: string
          is_active?: boolean
          last_run_at?: string | null
          last_sent_count?: number | null
          name?: string
          send_to_admin?: boolean
          send_to_learner?: boolean
          send_to_manager?: boolean
          subject_template?: string
          template_type?: string
          trigger_type?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "email_automations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      email_calendar_events: {
        Row: {
          created_at: string
          description: string | null
          end_date: string
          id: string
          metadata: Json | null
          sender_name: string | null
          start_date: string
          status: string | null
          title: string
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          description?: string | null
          end_date: string
          id?: string
          metadata?: Json | null
          sender_name?: string | null
          start_date: string
          status?: string | null
          title: string
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          description?: string | null
          end_date?: string
          id?: string
          metadata?: Json | null
          sender_name?: string | null
          start_date?: string
          status?: string | null
          title?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      email_campaign_recipients: {
        Row: {
          bounced_at: string | null
          campaign_id: string | null
          clicked_at: string | null
          created_at: string
          email: string
          error_message: string | null
          id: string
          lead_id: string | null
          name: string | null
          opened_at: string | null
          sent_at: string | null
          status: string
          tracking_id: string | null
          updated_at: string
        }
        Insert: {
          bounced_at?: string | null
          campaign_id?: string | null
          clicked_at?: string | null
          created_at?: string
          email: string
          error_message?: string | null
          id?: string
          lead_id?: string | null
          name?: string | null
          opened_at?: string | null
          sent_at?: string | null
          status?: string
          tracking_id?: string | null
          updated_at?: string
        }
        Update: {
          bounced_at?: string | null
          campaign_id?: string | null
          clicked_at?: string | null
          created_at?: string
          email?: string
          error_message?: string | null
          id?: string
          lead_id?: string | null
          name?: string | null
          opened_at?: string | null
          sent_at?: string | null
          status?: string
          tracking_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "email_campaign_recipients_campaign_id_fkey"
            columns: ["campaign_id"]
            isOneToOne: false
            referencedRelation: "email_campaigns"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "email_campaign_recipients_lead_id_fkey"
            columns: ["lead_id"]
            isOneToOne: false
            referencedRelation: "leads"
            referencedColumns: ["id"]
          },
        ]
      }
      email_campaigns: {
        Row: {
          bounced_count: number | null
          clicked_count: number | null
          created_at: string
          created_by: string
          id: string
          mailchimp_campaign_id: string | null
          mailchimp_list_id: string | null
          mailchimp_status: string | null
          name: string
          opened_count: number | null
          send_at: string | null
          sent_count: number | null
          status: string
          subject: string
          sync_analytics: boolean | null
          template_id: string | null
          total_recipients: number | null
          updated_at: string
        }
        Insert: {
          bounced_count?: number | null
          clicked_count?: number | null
          created_at?: string
          created_by: string
          id?: string
          mailchimp_campaign_id?: string | null
          mailchimp_list_id?: string | null
          mailchimp_status?: string | null
          name: string
          opened_count?: number | null
          send_at?: string | null
          sent_count?: number | null
          status?: string
          subject: string
          sync_analytics?: boolean | null
          template_id?: string | null
          total_recipients?: number | null
          updated_at?: string
        }
        Update: {
          bounced_count?: number | null
          clicked_count?: number | null
          created_at?: string
          created_by?: string
          id?: string
          mailchimp_campaign_id?: string | null
          mailchimp_list_id?: string | null
          mailchimp_status?: string | null
          name?: string
          opened_count?: number | null
          send_at?: string | null
          sent_count?: number | null
          status?: string
          subject?: string
          sync_analytics?: boolean | null
          template_id?: string | null
          total_recipients?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "email_campaigns_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "email_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      email_case_mappings: {
        Row: {
          case_id: string | null
          created_at: string
          email_id: string
          email_message_id: string | null
          email_thread_id: string | null
          id: string
          updated_at: string
        }
        Insert: {
          case_id?: string | null
          created_at?: string
          email_id: string
          email_message_id?: string | null
          email_thread_id?: string | null
          id?: string
          updated_at?: string
        }
        Update: {
          case_id?: string | null
          created_at?: string
          email_id?: string
          email_message_id?: string | null
          email_thread_id?: string | null
          id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "email_case_mappings_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
        ]
      }
      email_list_recipients: {
        Row: {
          created_at: string
          email: string
          id: string
          list_id: string | null
          metadata: Json | null
          name: string | null
          status: string
          subscribed_at: string | null
          unsubscribed_at: string | null
        }
        Insert: {
          created_at?: string
          email: string
          id?: string
          list_id?: string | null
          metadata?: Json | null
          name?: string | null
          status?: string
          subscribed_at?: string | null
          unsubscribed_at?: string | null
        }
        Update: {
          created_at?: string
          email?: string
          id?: string
          list_id?: string | null
          metadata?: Json | null
          name?: string | null
          status?: string
          subscribed_at?: string | null
          unsubscribed_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "email_list_recipients_list_id_fkey"
            columns: ["list_id"]
            isOneToOne: false
            referencedRelation: "email_lists"
            referencedColumns: ["id"]
          },
        ]
      }
      email_lists: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          description: string | null
          id: string
          is_active: boolean
          name: string
          recipient_count: number
          tags: Json | null
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean
          name: string
          recipient_count?: number
          tags?: Json | null
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean
          name?: string
          recipient_count?: number
          tags?: Json | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "email_lists_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      email_logs: {
        Row: {
          body: string | null
          bounce_reason: string | null
          clicked_at: string | null
          company_id: string | null
          contact_id: string | null
          created_at: string
          delivered_at: string | null
          error_message: string | null
          from_email: string | null
          from_name: string | null
          id: string
          lead_id: string | null
          message_id: string | null
          opened_at: string | null
          reply_to: string | null
          sender_id: string | null
          sent_at: string | null
          status: string
          subject: string
          template_id: string | null
          to_email: string
          updated_at: string
        }
        Insert: {
          body?: string | null
          bounce_reason?: string | null
          clicked_at?: string | null
          company_id?: string | null
          contact_id?: string | null
          created_at?: string
          delivered_at?: string | null
          error_message?: string | null
          from_email?: string | null
          from_name?: string | null
          id?: string
          lead_id?: string | null
          message_id?: string | null
          opened_at?: string | null
          reply_to?: string | null
          sender_id?: string | null
          sent_at?: string | null
          status?: string
          subject: string
          template_id?: string | null
          to_email: string
          updated_at?: string
        }
        Update: {
          body?: string | null
          bounce_reason?: string | null
          clicked_at?: string | null
          company_id?: string | null
          contact_id?: string | null
          created_at?: string
          delivered_at?: string | null
          error_message?: string | null
          from_email?: string | null
          from_name?: string | null
          id?: string
          lead_id?: string | null
          message_id?: string | null
          opened_at?: string | null
          reply_to?: string | null
          sender_id?: string | null
          sent_at?: string | null
          status?: string
          subject?: string
          template_id?: string | null
          to_email?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "email_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "email_logs_contact_id_fkey"
            columns: ["contact_id"]
            isOneToOne: false
            referencedRelation: "company_contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "email_logs_lead_id_fkey"
            columns: ["lead_id"]
            isOneToOne: false
            referencedRelation: "leads"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "email_logs_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "email_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      email_sending_history: {
        Row: {
          bounced_at: string | null
          clicked_at: string | null
          error_message: string | null
          id: string
          metadata: Json | null
          opened_at: string | null
          recipient_email: string
          recipient_name: string | null
          sent_at: string
          sent_by: string | null
          status: string
          subject: string
          template_id: string | null
        }
        Insert: {
          bounced_at?: string | null
          clicked_at?: string | null
          error_message?: string | null
          id?: string
          metadata?: Json | null
          opened_at?: string | null
          recipient_email: string
          recipient_name?: string | null
          sent_at?: string
          sent_by?: string | null
          status?: string
          subject: string
          template_id?: string | null
        }
        Update: {
          bounced_at?: string | null
          clicked_at?: string | null
          error_message?: string | null
          id?: string
          metadata?: Json | null
          opened_at?: string | null
          recipient_email?: string
          recipient_name?: string | null
          sent_at?: string
          sent_by?: string | null
          status?: string
          subject?: string
          template_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "email_sending_history_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "email_templates_v2"
            referencedColumns: ["id"]
          },
        ]
      }
      email_signatures: {
        Row: {
          created_at: string
          html_content: string
          id: string
          is_default: boolean
          name: string
          text_content: string | null
          updated_at: string
          user_id: string | null
        }
        Insert: {
          created_at?: string
          html_content: string
          id?: string
          is_default?: boolean
          name?: string
          text_content?: string | null
          updated_at?: string
          user_id?: string | null
        }
        Update: {
          created_at?: string
          html_content?: string
          id?: string
          is_default?: boolean
          name?: string
          text_content?: string | null
          updated_at?: string
          user_id?: string | null
        }
        Relationships: []
      }
      email_tasks: {
        Row: {
          created_at: string
          due_date: string | null
          email_timestamp: string | null
          id: string
          metadata: Json | null
          notes: string | null
          priority: string | null
          sender_name: string | null
          status: string | null
          tags: string[] | null
          title: string
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          due_date?: string | null
          email_timestamp?: string | null
          id?: string
          metadata?: Json | null
          notes?: string | null
          priority?: string | null
          sender_name?: string | null
          status?: string | null
          tags?: string[] | null
          title: string
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          due_date?: string | null
          email_timestamp?: string | null
          id?: string
          metadata?: Json | null
          notes?: string | null
          priority?: string | null
          sender_name?: string | null
          status?: string | null
          tags?: string[] | null
          title?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      email_templates: {
        Row: {
          brand_identity: string | null
          created_at: string
          created_by: string
          html_content: string
          id: string
          is_active: boolean
          mailchimp_template_id: string | null
          name: string
          subject: string
          sync_to_mailchimp: boolean | null
          template_type: string
          text_content: string | null
          updated_at: string
          variables: Json | null
        }
        Insert: {
          brand_identity?: string | null
          created_at?: string
          created_by: string
          html_content: string
          id?: string
          is_active?: boolean
          mailchimp_template_id?: string | null
          name: string
          subject: string
          sync_to_mailchimp?: boolean | null
          template_type?: string
          text_content?: string | null
          updated_at?: string
          variables?: Json | null
        }
        Update: {
          brand_identity?: string | null
          created_at?: string
          created_by?: string
          html_content?: string
          id?: string
          is_active?: boolean
          mailchimp_template_id?: string | null
          name?: string
          subject?: string
          sync_to_mailchimp?: boolean | null
          template_type?: string
          text_content?: string | null
          updated_at?: string
          variables?: Json | null
        }
        Relationships: []
      }
      email_templates_v2: {
        Row: {
          category: string | null
          company_id: string | null
          created_at: string
          created_by: string | null
          design_config: Json | null
          html_content: string
          id: string
          is_active: boolean
          is_system_template: boolean
          name: string
          subject: string
          template_type: string
          text_content: string | null
          updated_at: string
          variables: Json | null
        }
        Insert: {
          category?: string | null
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          design_config?: Json | null
          html_content: string
          id?: string
          is_active?: boolean
          is_system_template?: boolean
          name: string
          subject: string
          template_type?: string
          text_content?: string | null
          updated_at?: string
          variables?: Json | null
        }
        Update: {
          category?: string | null
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          design_config?: Json | null
          html_content?: string
          id?: string
          is_active?: boolean
          is_system_template?: boolean
          name?: string
          subject?: string
          template_type?: string
          text_content?: string | null
          updated_at?: string
          variables?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "email_templates_v2_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      email_webhooks: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          events: Json
          id: string
          is_active: boolean
          last_triggered_at: string | null
          name: string
          secret_key: string | null
          updated_at: string
          webhook_url: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          events?: Json
          id?: string
          is_active?: boolean
          last_triggered_at?: string | null
          name: string
          secret_key?: string | null
          updated_at?: string
          webhook_url: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          events?: Json
          id?: string
          is_active?: boolean
          last_triggered_at?: string | null
          name?: string
          secret_key?: string | null
          updated_at?: string
          webhook_url?: string
        }
        Relationships: [
          {
            foreignKeyName: "email_webhooks_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      email_workflow_executions: {
        Row: {
          completed_at: string | null
          created_at: string
          current_step: number | null
          data: Json | null
          id: string
          lead_id: string | null
          next_execution_at: string | null
          started_at: string
          status: string
          updated_at: string
          workflow_id: string | null
        }
        Insert: {
          completed_at?: string | null
          created_at?: string
          current_step?: number | null
          data?: Json | null
          id?: string
          lead_id?: string | null
          next_execution_at?: string | null
          started_at?: string
          status?: string
          updated_at?: string
          workflow_id?: string | null
        }
        Update: {
          completed_at?: string | null
          created_at?: string
          current_step?: number | null
          data?: Json | null
          id?: string
          lead_id?: string | null
          next_execution_at?: string | null
          started_at?: string
          status?: string
          updated_at?: string
          workflow_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "email_workflow_executions_lead_id_fkey"
            columns: ["lead_id"]
            isOneToOne: false
            referencedRelation: "leads"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "email_workflow_executions_workflow_id_fkey"
            columns: ["workflow_id"]
            isOneToOne: false
            referencedRelation: "email_workflows"
            referencedColumns: ["id"]
          },
        ]
      }
      email_workflow_steps: {
        Row: {
          conditions: Json | null
          created_at: string
          delay_amount: number | null
          id: string
          is_active: boolean
          step_order: number
          step_type: string
          template_id: string | null
          updated_at: string
          workflow_id: string | null
        }
        Insert: {
          conditions?: Json | null
          created_at?: string
          delay_amount?: number | null
          id?: string
          is_active?: boolean
          step_order: number
          step_type?: string
          template_id?: string | null
          updated_at?: string
          workflow_id?: string | null
        }
        Update: {
          conditions?: Json | null
          created_at?: string
          delay_amount?: number | null
          id?: string
          is_active?: boolean
          step_order?: number
          step_type?: string
          template_id?: string | null
          updated_at?: string
          workflow_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "email_workflow_steps_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "email_templates"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "email_workflow_steps_workflow_id_fkey"
            columns: ["workflow_id"]
            isOneToOne: false
            referencedRelation: "email_workflows"
            referencedColumns: ["id"]
          },
        ]
      }
      email_workflows: {
        Row: {
          created_at: string
          created_by: string
          description: string | null
          id: string
          is_active: boolean
          name: string
          trigger_conditions: Json | null
          trigger_type: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by: string
          description?: string | null
          id?: string
          is_active?: boolean
          name: string
          trigger_conditions?: Json | null
          trigger_type: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string
          description?: string | null
          id?: string
          is_active?: boolean
          name?: string
          trigger_conditions?: Json | null
          trigger_type?: string
          updated_at?: string
        }
        Relationships: []
      }
      employee_acknowledgment_signatures: {
        Row: {
          document_name: string
          document_type: string
          id: string
          ip_address: unknown | null
          onboarding_id: string | null
          signature_data: string
          signed_at: string | null
          user_agent: string | null
        }
        Insert: {
          document_name: string
          document_type: string
          id?: string
          ip_address?: unknown | null
          onboarding_id?: string | null
          signature_data: string
          signed_at?: string | null
          user_agent?: string | null
        }
        Update: {
          document_name?: string
          document_type?: string
          id?: string
          ip_address?: unknown | null
          onboarding_id?: string | null
          signature_data?: string
          signed_at?: string | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_acknowledgment_signatures_onboarding_id_fkey"
            columns: ["onboarding_id"]
            isOneToOne: false
            referencedRelation: "employee_onboarding"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_alerts: {
        Row: {
          action_label: string | null
          action_required: boolean | null
          action_url: string | null
          alert_type: string
          created_at: string
          employee_id: string
          expires_at: string | null
          id: string
          is_read: boolean | null
          message: string
          metadata: Json | null
          priority: string | null
          read_at: string | null
          title: string
          updated_at: string
        }
        Insert: {
          action_label?: string | null
          action_required?: boolean | null
          action_url?: string | null
          alert_type: string
          created_at?: string
          employee_id: string
          expires_at?: string | null
          id?: string
          is_read?: boolean | null
          message: string
          metadata?: Json | null
          priority?: string | null
          read_at?: string | null
          title: string
          updated_at?: string
        }
        Update: {
          action_label?: string | null
          action_required?: boolean | null
          action_url?: string | null
          alert_type?: string
          created_at?: string
          employee_id?: string
          expires_at?: string | null
          id?: string
          is_read?: boolean | null
          message?: string
          metadata?: Json | null
          priority?: string | null
          read_at?: string | null
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_alerts_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_bank_accounts: {
        Row: {
          account_nickname: string | null
          account_number_encrypted: string
          account_type: string
          company_id: string
          created_at: string | null
          created_by: string | null
          deposit_amount: number | null
          deposit_percentage: number | null
          deposit_priority: number | null
          deposit_type: string
          employee_id: string
          id: string
          is_active: boolean | null
          is_primary: boolean | null
          last_verified_at: string | null
          routing_number_encrypted: string
          updated_at: string | null
          verification_status: string | null
        }
        Insert: {
          account_nickname?: string | null
          account_number_encrypted: string
          account_type: string
          company_id: string
          created_at?: string | null
          created_by?: string | null
          deposit_amount?: number | null
          deposit_percentage?: number | null
          deposit_priority?: number | null
          deposit_type?: string
          employee_id: string
          id?: string
          is_active?: boolean | null
          is_primary?: boolean | null
          last_verified_at?: string | null
          routing_number_encrypted: string
          updated_at?: string | null
          verification_status?: string | null
        }
        Update: {
          account_nickname?: string | null
          account_number_encrypted?: string
          account_type?: string
          company_id?: string
          created_at?: string | null
          created_by?: string | null
          deposit_amount?: number | null
          deposit_percentage?: number | null
          deposit_priority?: number | null
          deposit_type?: string
          employee_id?: string
          id?: string
          is_active?: boolean | null
          is_primary?: boolean | null
          last_verified_at?: string | null
          routing_number_encrypted?: string
          updated_at?: string | null
          verification_status?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_bank_accounts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_biometric_data: {
        Row: {
          biometric_template: string | null
          company_id: string
          consent_date: string | null
          consent_given: boolean
          created_at: string
          employee_id: string
          face_encoding: string | null
          id: string
          is_active: boolean
          pin_hash: string | null
          reference_photo_url: string | null
          updated_at: string
        }
        Insert: {
          biometric_template?: string | null
          company_id: string
          consent_date?: string | null
          consent_given?: boolean
          created_at?: string
          employee_id: string
          face_encoding?: string | null
          id?: string
          is_active?: boolean
          pin_hash?: string | null
          reference_photo_url?: string | null
          updated_at?: string
        }
        Update: {
          biometric_template?: string | null
          company_id?: string
          consent_date?: string | null
          consent_given?: boolean
          created_at?: string
          employee_id?: string
          face_encoding?: string | null
          id?: string
          is_active?: boolean
          pin_hash?: string | null
          reference_photo_url?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      employee_copilot_conversations: {
        Row: {
          answer: string
          confidence_score: number | null
          created_at: string
          employee_id: string
          feedback_comment: string | null
          feedback_rating: number | null
          id: string
          question: string
          session_id: string
          sources: Json | null
        }
        Insert: {
          answer: string
          confidence_score?: number | null
          created_at?: string
          employee_id: string
          feedback_comment?: string | null
          feedback_rating?: number | null
          id?: string
          question: string
          session_id: string
          sources?: Json | null
        }
        Update: {
          answer?: string
          confidence_score?: number | null
          created_at?: string
          employee_id?: string
          feedback_comment?: string | null
          feedback_rating?: number | null
          id?: string
          question?: string
          session_id?: string
          sources?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_copilot_conversations_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_deductions: {
        Row: {
          amount: number | null
          created_at: string | null
          deduction_name: string
          deduction_type: string
          effective_date: string | null
          employee_id: string
          end_date: string | null
          frequency: string | null
          id: string
          is_active: boolean | null
          is_pre_tax: boolean | null
          max_annual_amount: number | null
          percentage: number | null
          updated_at: string | null
        }
        Insert: {
          amount?: number | null
          created_at?: string | null
          deduction_name: string
          deduction_type: string
          effective_date?: string | null
          employee_id: string
          end_date?: string | null
          frequency?: string | null
          id?: string
          is_active?: boolean | null
          is_pre_tax?: boolean | null
          max_annual_amount?: number | null
          percentage?: number | null
          updated_at?: string | null
        }
        Update: {
          amount?: number | null
          created_at?: string | null
          deduction_name?: string
          deduction_type?: string
          effective_date?: string | null
          employee_id?: string
          end_date?: string | null
          frequency?: string | null
          id?: string
          is_active?: boolean | null
          is_pre_tax?: boolean | null
          max_annual_amount?: number | null
          percentage?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_deductions_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_direct_deposit_accounts: {
        Row: {
          account_number_encrypted: string
          account_type: string | null
          allocation_type: string | null
          allocation_value: number | null
          bank_name: string | null
          created_at: string | null
          id: string
          is_verified: boolean | null
          onboarding_id: string | null
          priority_order: number | null
          routing_number: string
        }
        Insert: {
          account_number_encrypted: string
          account_type?: string | null
          allocation_type?: string | null
          allocation_value?: number | null
          bank_name?: string | null
          created_at?: string | null
          id?: string
          is_verified?: boolean | null
          onboarding_id?: string | null
          priority_order?: number | null
          routing_number: string
        }
        Update: {
          account_number_encrypted?: string
          account_type?: string | null
          allocation_type?: string | null
          allocation_value?: number | null
          bank_name?: string | null
          created_at?: string | null
          id?: string
          is_verified?: boolean | null
          onboarding_id?: string | null
          priority_order?: number | null
          routing_number?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_direct_deposit_accounts_onboarding_id_fkey"
            columns: ["onboarding_id"]
            isOneToOne: false
            referencedRelation: "employee_onboarding"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_direct_deposits: {
        Row: {
          account_nickname: string
          account_number_encrypted: string
          account_type: string | null
          allocation_type: string | null
          allocation_value: number | null
          bank_name: string | null
          created_at: string
          effective_date: string | null
          employee_id: string
          id: string
          is_active: boolean | null
          is_primary: boolean | null
          routing_number: string
          updated_at: string
          verification_amounts: number[] | null
          verification_status: string | null
        }
        Insert: {
          account_nickname: string
          account_number_encrypted: string
          account_type?: string | null
          allocation_type?: string | null
          allocation_value?: number | null
          bank_name?: string | null
          created_at?: string
          effective_date?: string | null
          employee_id: string
          id?: string
          is_active?: boolean | null
          is_primary?: boolean | null
          routing_number: string
          updated_at?: string
          verification_amounts?: number[] | null
          verification_status?: string | null
        }
        Update: {
          account_nickname?: string
          account_number_encrypted?: string
          account_type?: string | null
          allocation_type?: string | null
          allocation_value?: number | null
          bank_name?: string | null
          created_at?: string
          effective_date?: string | null
          employee_id?: string
          id?: string
          is_active?: boolean | null
          is_primary?: boolean | null
          routing_number?: string
          updated_at?: string
          verification_amounts?: number[] | null
          verification_status?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_direct_deposits_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_onboarding: {
        Row: {
          address: Json | null
          approved_at: string | null
          company_id: string | null
          compensation_amount: number | null
          compensation_type:
            | Database["public"]["Enums"]["compensation_type"]
            | null
          created_at: string | null
          current_step: number | null
          date_of_birth: string | null
          department: string | null
          direct_deposit_completed: boolean | null
          email: string | null
          emergency_contact: Json | null
          employer_notes: string | null
          employment_type: Database["public"]["Enums"]["employment_type"] | null
          esignature_completed: boolean | null
          first_name: string | null
          handbook_acknowledged: boolean | null
          i9_section1_completed: boolean | null
          i9_section2_completed: boolean | null
          id: string
          language_preference:
            | Database["public"]["Enums"]["user_language"]
            | null
          last_name: string | null
          middle_name: string | null
          onboarding_code_id: string | null
          overtime_eligible: boolean | null
          personal_info_completed: boolean | null
          phone: string | null
          position_title: string | null
          reviewed_at: string | null
          reviewed_by: string | null
          ssn_encrypted: string | null
          start_date: string | null
          state_tax_completed: boolean | null
          status: Database["public"]["Enums"]["onboarding_status"] | null
          total_steps: number | null
          updated_at: string | null
          w4_completed: boolean | null
        }
        Insert: {
          address?: Json | null
          approved_at?: string | null
          company_id?: string | null
          compensation_amount?: number | null
          compensation_type?:
            | Database["public"]["Enums"]["compensation_type"]
            | null
          created_at?: string | null
          current_step?: number | null
          date_of_birth?: string | null
          department?: string | null
          direct_deposit_completed?: boolean | null
          email?: string | null
          emergency_contact?: Json | null
          employer_notes?: string | null
          employment_type?:
            | Database["public"]["Enums"]["employment_type"]
            | null
          esignature_completed?: boolean | null
          first_name?: string | null
          handbook_acknowledged?: boolean | null
          i9_section1_completed?: boolean | null
          i9_section2_completed?: boolean | null
          id?: string
          language_preference?:
            | Database["public"]["Enums"]["user_language"]
            | null
          last_name?: string | null
          middle_name?: string | null
          onboarding_code_id?: string | null
          overtime_eligible?: boolean | null
          personal_info_completed?: boolean | null
          phone?: string | null
          position_title?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          ssn_encrypted?: string | null
          start_date?: string | null
          state_tax_completed?: boolean | null
          status?: Database["public"]["Enums"]["onboarding_status"] | null
          total_steps?: number | null
          updated_at?: string | null
          w4_completed?: boolean | null
        }
        Update: {
          address?: Json | null
          approved_at?: string | null
          company_id?: string | null
          compensation_amount?: number | null
          compensation_type?:
            | Database["public"]["Enums"]["compensation_type"]
            | null
          created_at?: string | null
          current_step?: number | null
          date_of_birth?: string | null
          department?: string | null
          direct_deposit_completed?: boolean | null
          email?: string | null
          emergency_contact?: Json | null
          employer_notes?: string | null
          employment_type?:
            | Database["public"]["Enums"]["employment_type"]
            | null
          esignature_completed?: boolean | null
          first_name?: string | null
          handbook_acknowledged?: boolean | null
          i9_section1_completed?: boolean | null
          i9_section2_completed?: boolean | null
          id?: string
          language_preference?:
            | Database["public"]["Enums"]["user_language"]
            | null
          last_name?: string | null
          middle_name?: string | null
          onboarding_code_id?: string | null
          overtime_eligible?: boolean | null
          personal_info_completed?: boolean | null
          phone?: string | null
          position_title?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          ssn_encrypted?: string | null
          start_date?: string | null
          state_tax_completed?: boolean | null
          status?: Database["public"]["Enums"]["onboarding_status"] | null
          total_steps?: number | null
          updated_at?: string | null
          w4_completed?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_onboarding_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "onboarding_companies"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_onboarding_onboarding_code_id_fkey"
            columns: ["onboarding_code_id"]
            isOneToOne: false
            referencedRelation: "onboarding_codes"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_onboarding_workflow: {
        Row: {
          completed_at: string | null
          created_at: string | null
          data: Json | null
          employee_id: string
          id: string
          notes: string | null
          status: string | null
          step_name: string
          step_order: number
          updated_at: string | null
        }
        Insert: {
          completed_at?: string | null
          created_at?: string | null
          data?: Json | null
          employee_id: string
          id?: string
          notes?: string | null
          status?: string | null
          step_name: string
          step_order: number
          updated_at?: string | null
        }
        Update: {
          completed_at?: string | null
          created_at?: string | null
          data?: Json | null
          employee_id?: string
          id?: string
          notes?: string | null
          status?: string | null
          step_name?: string
          step_order?: number
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_onboarding_workflow_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_org_assignments: {
        Row: {
          created_at: string
          department_id: string | null
          division_id: string | null
          effective_date: string | null
          employee_id: string
          id: string
          location_id: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          department_id?: string | null
          division_id?: string | null
          effective_date?: string | null
          employee_id: string
          id?: string
          location_id: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          department_id?: string | null
          division_id?: string | null
          effective_date?: string | null
          employee_id?: string
          id?: string
          location_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_org_assignments_department_id_fkey"
            columns: ["department_id"]
            isOneToOne: false
            referencedRelation: "departments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_org_assignments_division_id_fkey"
            columns: ["division_id"]
            isOneToOne: false
            referencedRelation: "divisions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_org_assignments_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: true
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_org_assignments_location_id_fkey"
            columns: ["location_id"]
            isOneToOne: false
            referencedRelation: "locations"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_pay_calendar: {
        Row: {
          created_at: string
          employee_id: string
          hours_approved: boolean | null
          hours_submitted: boolean | null
          id: string
          notification_sent: boolean | null
          pay_date: string
          payroll_deadline: string | null
          payroll_period_id: string | null
          period_end: string
          period_start: string
          status: string | null
          timecard_deadline: string | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          employee_id: string
          hours_approved?: boolean | null
          hours_submitted?: boolean | null
          id?: string
          notification_sent?: boolean | null
          pay_date: string
          payroll_deadline?: string | null
          payroll_period_id?: string | null
          period_end: string
          period_start: string
          status?: string | null
          timecard_deadline?: string | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          employee_id?: string
          hours_approved?: boolean | null
          hours_submitted?: boolean | null
          id?: string
          notification_sent?: boolean | null
          pay_date?: string
          payroll_deadline?: string | null
          payroll_period_id?: string | null
          period_end?: string
          period_start?: string
          status?: string | null
          timecard_deadline?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_pay_calendar_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_pay_calendar_payroll_period_id_fkey"
            columns: ["payroll_period_id"]
            isOneToOne: false
            referencedRelation: "payroll_periods"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_pay_rates: {
        Row: {
          created_at: string
          effective_date: string
          employee_id: string
          end_date: string | null
          id: string
          is_active: boolean
          notes: string | null
          overtime_rate_multiplier: number | null
          rate_amount: number
          rate_type: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          effective_date?: string
          employee_id: string
          end_date?: string | null
          id?: string
          is_active?: boolean
          notes?: string | null
          overtime_rate_multiplier?: number | null
          rate_amount: number
          rate_type: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          effective_date?: string
          employee_id?: string
          end_date?: string | null
          id?: string
          is_active?: boolean
          notes?: string | null
          overtime_rate_multiplier?: number | null
          rate_amount?: number
          rate_type?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_pay_rates_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_pay_stubs: {
        Row: {
          created_at: string
          deduction_breakdown: Json | null
          earnings_breakdown: Json | null
          employee_id: string
          gross_pay: number
          hours_breakdown: Json | null
          id: string
          net_pay: number
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_period_id: string | null
          pdf_url: string | null
          status: string | null
          tax_breakdown: Json | null
          total_deductions: number
          total_taxes: number
          updated_at: string
        }
        Insert: {
          created_at?: string
          deduction_breakdown?: Json | null
          earnings_breakdown?: Json | null
          employee_id: string
          gross_pay?: number
          hours_breakdown?: Json | null
          id?: string
          net_pay?: number
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_period_id?: string | null
          pdf_url?: string | null
          status?: string | null
          tax_breakdown?: Json | null
          total_deductions?: number
          total_taxes?: number
          updated_at?: string
        }
        Update: {
          created_at?: string
          deduction_breakdown?: Json | null
          earnings_breakdown?: Json | null
          employee_id?: string
          gross_pay?: number
          hours_breakdown?: Json | null
          id?: string
          net_pay?: number
          pay_date?: string
          pay_period_end?: string
          pay_period_start?: string
          payroll_period_id?: string | null
          pdf_url?: string | null
          status?: string | null
          tax_breakdown?: Json | null
          total_deductions?: number
          total_taxes?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_pay_stubs_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_pay_stubs_payroll_period_id_fkey"
            columns: ["payroll_period_id"]
            isOneToOne: false
            referencedRelation: "payroll_periods"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_payroll_details: {
        Row: {
          created_at: string | null
          effective_date: string | null
          employee_id: string
          id: string
          is_active: boolean | null
          overtime_eligible: boolean | null
          overtime_rate: number | null
          pay_frequency: string | null
          pay_rate: number | null
          pay_schedule_id: string | null
          standard_hours_per_week: number | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          effective_date?: string | null
          employee_id: string
          id?: string
          is_active?: boolean | null
          overtime_eligible?: boolean | null
          overtime_rate?: number | null
          pay_frequency?: string | null
          pay_rate?: number | null
          pay_schedule_id?: string | null
          standard_hours_per_week?: number | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          effective_date?: string | null
          employee_id?: string
          id?: string
          is_active?: boolean | null
          overtime_eligible?: boolean | null
          overtime_rate?: number | null
          pay_frequency?: string | null
          pay_rate?: number | null
          pay_schedule_id?: string | null
          standard_hours_per_week?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_payroll_details_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_profiles: {
        Row: {
          created_at: string
          employee_id: string
          id: string
          last_login_at: string | null
          notification_preferences: Json | null
          preferred_name: string | null
          profile_photo_url: string | null
          session_timeout_minutes: number | null
          theme_preference: string | null
          two_factor_enabled: boolean | null
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          employee_id: string
          id?: string
          last_login_at?: string | null
          notification_preferences?: Json | null
          preferred_name?: string | null
          profile_photo_url?: string | null
          session_timeout_minutes?: number | null
          theme_preference?: string | null
          two_factor_enabled?: boolean | null
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          employee_id?: string
          id?: string
          last_login_at?: string | null
          notification_preferences?: Json | null
          preferred_name?: string | null
          profile_photo_url?: string | null
          session_timeout_minutes?: number | null
          theme_preference?: string | null
          two_factor_enabled?: boolean | null
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_profiles_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: true
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_punches: {
        Row: {
          billable_rate: number | null
          cost_center: string | null
          created_at: string
          device_info: Json | null
          employee_id: string
          id: string
          job_code_id: string | null
          location: string | null
          punch_time: string
          punch_type: string
          updated_at: string
        }
        Insert: {
          billable_rate?: number | null
          cost_center?: string | null
          created_at?: string
          device_info?: Json | null
          employee_id: string
          id?: string
          job_code_id?: string | null
          location?: string | null
          punch_time?: string
          punch_type: string
          updated_at?: string
        }
        Update: {
          billable_rate?: number | null
          cost_center?: string | null
          created_at?: string
          device_info?: Json | null
          employee_id?: string
          id?: string
          job_code_id?: string | null
          location?: string | null
          punch_time?: string
          punch_type?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_punches_job_code_id_fkey"
            columns: ["job_code_id"]
            isOneToOne: false
            referencedRelation: "job_codes"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_registration_tokens: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          employee_id: string
          expires_at: string
          id: string
          token: string
          used_at: string | null
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          employee_id: string
          expires_at: string
          id?: string
          token: string
          used_at?: string | null
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          employee_id?: string
          expires_at?: string
          id?: string
          token?: string
          used_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_registration_tokens_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_registration_tokens_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_schedules: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          employee_id: string
          end_time: string
          id: string
          job_code: string | null
          location_id: string | null
          recurrence_rule: Json | null
          scheduled_break_minutes: number | null
          start_time: string
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          employee_id: string
          end_time: string
          id?: string
          job_code?: string | null
          location_id?: string | null
          recurrence_rule?: Json | null
          scheduled_break_minutes?: number | null
          start_time: string
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          employee_id?: string
          end_time?: string
          id?: string
          job_code?: string | null
          location_id?: string | null
          recurrence_rule?: Json | null
          scheduled_break_minutes?: number | null
          start_time?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_schedules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_schedules_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "employee_schedules_location_id_fkey"
            columns: ["location_id"]
            isOneToOne: false
            referencedRelation: "org_locations"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_tax_documents: {
        Row: {
          available_date: string | null
          correction_reason: string | null
          created_at: string
          document_status: string | null
          document_type: string
          document_url: string
          employee_id: string
          id: string
          metadata: Json | null
          tax_year: number
          updated_at: string
        }
        Insert: {
          available_date?: string | null
          correction_reason?: string | null
          created_at?: string
          document_status?: string | null
          document_type: string
          document_url: string
          employee_id: string
          id?: string
          metadata?: Json | null
          tax_year: number
          updated_at?: string
        }
        Update: {
          available_date?: string | null
          correction_reason?: string | null
          created_at?: string
          document_status?: string | null
          document_type?: string
          document_url?: string
          employee_id?: string
          id?: string
          metadata?: Json | null
          tax_year?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_tax_documents_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_tax_profiles: {
        Row: {
          additional_federal_withholding: number
          additional_state_withholding: number
          created_at: string
          employee_id: string
          federal_allowances: number
          filing_status: string
          id: string
          is_exempt_federal: boolean
          is_exempt_state: boolean
          state_allowances: number | null
          state_code: string
          state_filing_status: string | null
          updated_at: string
          w4_deductions: number
          w4_dependents_amount: number
          w4_other_income: number
          w4_step2_checkbox: boolean
        }
        Insert: {
          additional_federal_withholding?: number
          additional_state_withholding?: number
          created_at?: string
          employee_id: string
          federal_allowances?: number
          filing_status?: string
          id?: string
          is_exempt_federal?: boolean
          is_exempt_state?: boolean
          state_allowances?: number | null
          state_code?: string
          state_filing_status?: string | null
          updated_at?: string
          w4_deductions?: number
          w4_dependents_amount?: number
          w4_other_income?: number
          w4_step2_checkbox?: boolean
        }
        Update: {
          additional_federal_withholding?: number
          additional_state_withholding?: number
          created_at?: string
          employee_id?: string
          federal_allowances?: number
          filing_status?: string
          id?: string
          is_exempt_federal?: boolean
          is_exempt_state?: boolean
          state_allowances?: number | null
          state_code?: string
          state_filing_status?: string | null
          updated_at?: string
          w4_deductions?: number
          w4_dependents_amount?: number
          w4_other_income?: number
          w4_step2_checkbox?: boolean
        }
        Relationships: []
      }
      employee_time_attendance: {
        Row: {
          break_tracking_enabled: boolean | null
          created_at: string | null
          employee_id: string
          id: string
          location_tracking_enabled: boolean | null
          overtime_approval_required: boolean | null
          pto_accrual_rate: number | null
          pto_balance: number | null
          sick_leave_balance: number | null
          time_tracking_enabled: boolean | null
          updated_at: string | null
        }
        Insert: {
          break_tracking_enabled?: boolean | null
          created_at?: string | null
          employee_id: string
          id?: string
          location_tracking_enabled?: boolean | null
          overtime_approval_required?: boolean | null
          pto_accrual_rate?: number | null
          pto_balance?: number | null
          sick_leave_balance?: number | null
          time_tracking_enabled?: boolean | null
          updated_at?: string | null
        }
        Update: {
          break_tracking_enabled?: boolean | null
          created_at?: string | null
          employee_id?: string
          id?: string
          location_tracking_enabled?: boolean | null
          overtime_approval_required?: boolean | null
          pto_accrual_rate?: number | null
          pto_balance?: number | null
          sick_leave_balance?: number | null
          time_tracking_enabled?: boolean | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employee_time_attendance_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_wage_compliance: {
        Row: {
          actual_rate: number | null
          applicable_jurisdiction: string | null
          check_date: string
          compliance_status: string
          created_at: string
          employee_id: string
          gap_amount: number | null
          id: string
          required_rate: number | null
          resolution_notes: string | null
          resolved_at: string | null
          resolved_by: string | null
          updated_at: string
          violation_details: Json | null
          wage_rule_id: string | null
          wage_type: string
        }
        Insert: {
          actual_rate?: number | null
          applicable_jurisdiction?: string | null
          check_date?: string
          compliance_status: string
          created_at?: string
          employee_id: string
          gap_amount?: number | null
          id?: string
          required_rate?: number | null
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          updated_at?: string
          violation_details?: Json | null
          wage_rule_id?: string | null
          wage_type: string
        }
        Update: {
          actual_rate?: number | null
          applicable_jurisdiction?: string | null
          check_date?: string
          compliance_status?: string
          created_at?: string
          employee_id?: string
          gap_amount?: number | null
          id?: string
          required_rate?: number | null
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          updated_at?: string
          violation_details?: Json | null
          wage_rule_id?: string | null
          wage_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "employee_wage_compliance_wage_rule_id_fkey"
            columns: ["wage_rule_id"]
            isOneToOne: false
            referencedRelation: "wage_rules"
            referencedColumns: ["id"]
          },
        ]
      }
      employee_ytd_wages: {
        Row: {
          created_at: string
          employee_id: string
          id: string
          last_updated: string
          year: number
          ytd_federal_withholding: number
          ytd_gross: number
          ytd_medicare: number
          ytd_sdi: number
          ytd_social_security: number
          ytd_state_withholding: number
        }
        Insert: {
          created_at?: string
          employee_id: string
          id?: string
          last_updated?: string
          year: number
          ytd_federal_withholding?: number
          ytd_gross?: number
          ytd_medicare?: number
          ytd_sdi?: number
          ytd_social_security?: number
          ytd_state_withholding?: number
        }
        Update: {
          created_at?: string
          employee_id?: string
          id?: string
          last_updated?: string
          year?: number
          ytd_federal_withholding?: number
          ytd_gross?: number
          ytd_medicare?: number
          ytd_sdi?: number
          ytd_social_security?: number
          ytd_state_withholding?: number
        }
        Relationships: []
      }
      employees: {
        Row: {
          badge_qr_code: string | null
          company_id: string
          created_at: string
          department: string | null
          division: string | null
          email: string
          employee_id: string | null
          first_name: string
          id: string
          job_title: string | null
          last_name: string
          location: string
          onboarding_status: string | null
          phone_number: string | null
          photo_reference_url: string | null
          position: string | null
          preferred_language: string | null
          registration_complete: boolean | null
          registration_completed_at: string | null
          status: string | null
          time_tracking_pin_hash: string | null
          updated_at: string
          user_id: string | null
        }
        Insert: {
          badge_qr_code?: string | null
          company_id: string
          created_at?: string
          department?: string | null
          division?: string | null
          email: string
          employee_id?: string | null
          first_name: string
          id?: string
          job_title?: string | null
          last_name: string
          location: string
          onboarding_status?: string | null
          phone_number?: string | null
          photo_reference_url?: string | null
          position?: string | null
          preferred_language?: string | null
          registration_complete?: boolean | null
          registration_completed_at?: string | null
          status?: string | null
          time_tracking_pin_hash?: string | null
          updated_at?: string
          user_id?: string | null
        }
        Update: {
          badge_qr_code?: string | null
          company_id?: string
          created_at?: string
          department?: string | null
          division?: string | null
          email?: string
          employee_id?: string | null
          first_name?: string
          id?: string
          job_title?: string | null
          last_name?: string
          location?: string
          onboarding_status?: string | null
          phone_number?: string | null
          photo_reference_url?: string | null
          position?: string | null
          preferred_language?: string | null
          registration_complete?: boolean | null
          registration_completed_at?: string | null
          status?: string | null
          time_tracking_pin_hash?: string | null
          updated_at?: string
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "employees_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      encryption_keys: {
        Row: {
          algorithm: string
          created_at: string
          created_by: string | null
          expires_at: string | null
          id: string
          is_active: boolean
          key_name: string
          key_type: string
          key_version: number
          next_rotation_date: string | null
          rotation_date: string | null
        }
        Insert: {
          algorithm?: string
          created_at?: string
          created_by?: string | null
          expires_at?: string | null
          id?: string
          is_active?: boolean
          key_name: string
          key_type: string
          key_version?: number
          next_rotation_date?: string | null
          rotation_date?: string | null
        }
        Update: {
          algorithm?: string
          created_at?: string
          created_by?: string | null
          expires_at?: string | null
          id?: string
          is_active?: boolean
          key_name?: string
          key_type?: string
          key_version?: number
          next_rotation_date?: string | null
          rotation_date?: string | null
        }
        Relationships: []
      }
      evaluation_templates: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          description: string | null
          evaluation_type: Database["public"]["Enums"]["evaluation_type"]
          form_config: Json
          id: string
          is_active: boolean
          name: string
          scoring_model: Json
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          evaluation_type: Database["public"]["Enums"]["evaluation_type"]
          form_config?: Json
          id?: string
          is_active?: boolean
          name: string
          scoring_model?: Json
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          evaluation_type?: Database["public"]["Enums"]["evaluation_type"]
          form_config?: Json
          id?: string
          is_active?: boolean
          name?: string
          scoring_model?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "evaluation_templates_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      federal_tax_brackets: {
        Row: {
          base_tax: number
          bracket_max: number | null
          bracket_min: number
          created_at: string
          filing_status: string
          id: string
          tax_rate: number
          tax_year: number
        }
        Insert: {
          base_tax?: number
          bracket_max?: number | null
          bracket_min: number
          created_at?: string
          filing_status: string
          id?: string
          tax_rate: number
          tax_year: number
        }
        Update: {
          base_tax?: number
          bracket_max?: number | null
          bracket_min?: number
          created_at?: string
          filing_status?: string
          id?: string
          tax_rate?: number
          tax_year?: number
        }
        Relationships: []
      }
      field_mappings: {
        Row: {
          company_id: string | null
          created_at: string
          default_value: string | null
          external_field: string
          field_type: string
          id: string
          integration_id: string | null
          internal_field: string
          is_required: boolean
          transformation_rules: Json | null
          updated_at: string
          validation_rules: Json | null
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          default_value?: string | null
          external_field: string
          field_type: string
          id?: string
          integration_id?: string | null
          internal_field: string
          is_required?: boolean
          transformation_rules?: Json | null
          updated_at?: string
          validation_rules?: Json | null
        }
        Update: {
          company_id?: string | null
          created_at?: string
          default_value?: string | null
          external_field?: string
          field_type?: string
          id?: string
          integration_id?: string | null
          internal_field?: string
          is_required?: boolean
          transformation_rules?: Json | null
          updated_at?: string
          validation_rules?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "field_mappings_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "field_mappings_integration_id_fkey"
            columns: ["integration_id"]
            isOneToOne: false
            referencedRelation: "integrations"
            referencedColumns: ["id"]
          },
        ]
      }
      funding_transactions: {
        Row: {
          amount: number
          batch_id: string
          confirmed_at: string | null
          created_at: string
          external_reference: string | null
          failure_reason: string | null
          funding_method: string
          id: string
          source_bank_account_id: string | null
          status: string
          updated_at: string
        }
        Insert: {
          amount: number
          batch_id: string
          confirmed_at?: string | null
          created_at?: string
          external_reference?: string | null
          failure_reason?: string | null
          funding_method: string
          id?: string
          source_bank_account_id?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          amount?: number
          batch_id?: string
          confirmed_at?: string | null
          created_at?: string
          external_reference?: string | null
          failure_reason?: string | null
          funding_method?: string
          id?: string
          source_bank_account_id?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "funding_transactions_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "disbursement_batches"
            referencedColumns: ["id"]
          },
        ]
      }
      general_ledger: {
        Row: {
          account_name: string
          amount: number
          balance: number
          company_id: string
          created_at: string
          date: string
          description: string | null
          id: string
          name: string | null
          reference: string | null
          split_account: string
          type: string
          updated_at: string
        }
        Insert: {
          account_name: string
          amount: number
          balance: number
          company_id: string
          created_at?: string
          date: string
          description?: string | null
          id?: string
          name?: string | null
          reference?: string | null
          split_account: string
          type: string
          updated_at?: string
        }
        Update: {
          account_name?: string
          amount?: number
          balance?: number
          company_id?: string
          created_at?: string
          date?: string
          description?: string | null
          id?: string
          name?: string | null
          reference?: string | null
          split_account?: string
          type?: string
          updated_at?: string
        }
        Relationships: []
      }
      gl_account_mappings: {
        Row: {
          chart_account_id: string
          company_id: string
          created_at: string | null
          created_by: string | null
          gl_account_name: string
          gl_field_type: string
          id: string
          updated_at: string | null
        }
        Insert: {
          chart_account_id: string
          company_id: string
          created_at?: string | null
          created_by?: string | null
          gl_account_name: string
          gl_field_type?: string
          id?: string
          updated_at?: string | null
        }
        Update: {
          chart_account_id?: string
          company_id?: string
          created_at?: string | null
          created_by?: string | null
          gl_account_name?: string
          gl_field_type?: string
          id?: string
          updated_at?: string | null
        }
        Relationships: []
      }
      gl_batches: {
        Row: {
          batch_name: string
          batch_number: string
          company_id: string
          created_at: string
          created_by: string
          description: string | null
          id: string
          posted_at: string | null
          posted_by: string | null
          reviewed_at: string | null
          reviewed_by: string | null
          status: string
          total_credits: number
          total_debits: number
          total_journals: number
          updated_at: string
        }
        Insert: {
          batch_name: string
          batch_number: string
          company_id: string
          created_at?: string
          created_by: string
          description?: string | null
          id?: string
          posted_at?: string | null
          posted_by?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          status?: string
          total_credits?: number
          total_debits?: number
          total_journals?: number
          updated_at?: string
        }
        Update: {
          batch_name?: string
          batch_number?: string
          company_id?: string
          created_at?: string
          created_by?: string
          description?: string | null
          id?: string
          posted_at?: string | null
          posted_by?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          status?: string
          total_credits?: number
          total_debits?: number
          total_journals?: number
          updated_at?: string
        }
        Relationships: []
      }
      gl_entries: {
        Row: {
          account_id: string
          created_at: string
          credit_amount: number
          debit_amount: number
          description: string | null
          entity_id: string | null
          entity_type: string | null
          id: string
          journal_id: string
          line_number: number
        }
        Insert: {
          account_id: string
          created_at?: string
          credit_amount?: number
          debit_amount?: number
          description?: string | null
          entity_id?: string | null
          entity_type?: string | null
          id?: string
          journal_id: string
          line_number: number
        }
        Update: {
          account_id?: string
          created_at?: string
          credit_amount?: number
          debit_amount?: number
          description?: string | null
          entity_id?: string | null
          entity_type?: string | null
          id?: string
          journal_id?: string
          line_number?: number
        }
        Relationships: [
          {
            foreignKeyName: "gl_entries_account_id_fkey"
            columns: ["account_id"]
            isOneToOne: false
            referencedRelation: "chart_of_accounts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "gl_entries_journal_id_fkey"
            columns: ["journal_id"]
            isOneToOne: false
            referencedRelation: "gl_journals"
            referencedColumns: ["id"]
          },
        ]
      }
      gl_journals: {
        Row: {
          batch_id: string | null
          company_id: string
          created_at: string
          created_by: string
          date: string
          id: string
          is_balanced: boolean
          journal_number: string
          memo: string | null
          posted_at: string | null
          posted_by: string | null
          reversal_of: string | null
          source: string
          source_id: string | null
          status: string
          total_credits: number
          total_debits: number
          updated_at: string
        }
        Insert: {
          batch_id?: string | null
          company_id: string
          created_at?: string
          created_by: string
          date: string
          id?: string
          is_balanced?: boolean
          journal_number: string
          memo?: string | null
          posted_at?: string | null
          posted_by?: string | null
          reversal_of?: string | null
          source?: string
          source_id?: string | null
          status?: string
          total_credits?: number
          total_debits?: number
          updated_at?: string
        }
        Update: {
          batch_id?: string | null
          company_id?: string
          created_at?: string
          created_by?: string
          date?: string
          id?: string
          is_balanced?: boolean
          journal_number?: string
          memo?: string | null
          posted_at?: string | null
          posted_by?: string | null
          reversal_of?: string | null
          source?: string
          source_id?: string | null
          status?: string
          total_credits?: number
          total_debits?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "fk_gl_journals_batch_id"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "gl_batches"
            referencedColumns: ["id"]
          },
        ]
      }
      gl_settings: {
        Row: {
          allow_future_posting: boolean
          auto_journal_number_prefix: string
          company_id: string
          created_at: string
          current_period_open: string | null
          default_posting_rules: Json
          id: string
          lock_posted_entries: boolean
          next_journal_number: number
          next_period_open: string | null
          require_batch_approval: boolean
          updated_at: string
        }
        Insert: {
          allow_future_posting?: boolean
          auto_journal_number_prefix?: string
          company_id: string
          created_at?: string
          current_period_open?: string | null
          default_posting_rules?: Json
          id?: string
          lock_posted_entries?: boolean
          next_journal_number?: number
          next_period_open?: string | null
          require_batch_approval?: boolean
          updated_at?: string
        }
        Update: {
          allow_future_posting?: boolean
          auto_journal_number_prefix?: string
          company_id?: string
          created_at?: string
          current_period_open?: string | null
          default_posting_rules?: Json
          id?: string
          lock_posted_entries?: boolean
          next_journal_number?: number
          next_period_open?: string | null
          require_batch_approval?: boolean
          updated_at?: string
        }
        Relationships: []
      }
      global_email_signature_settings: {
        Row: {
          allow_user_customization: boolean
          available_tokens: string[]
          created_at: string
          created_by: string | null
          id: string
          is_enabled: boolean
          preview_data: Json
          template_html: string
          template_text: string
          updated_at: string
        }
        Insert: {
          allow_user_customization?: boolean
          available_tokens?: string[]
          created_at?: string
          created_by?: string | null
          id?: string
          is_enabled?: boolean
          preview_data?: Json
          template_html?: string
          template_text?: string
          updated_at?: string
        }
        Update: {
          allow_user_customization?: boolean
          available_tokens?: string[]
          created_at?: string
          created_by?: string | null
          id?: string
          is_enabled?: boolean
          preview_data?: Json
          template_html?: string
          template_text?: string
          updated_at?: string
        }
        Relationships: []
      }
      global_job_descriptions: {
        Row: {
          created_at: string
          created_by: string
          duties: Json
          flsa_classification: Database["public"]["Enums"]["flsa_classification"]
          id: string
          job_title_id: string
          notes: string | null
          physical_requirements: string | null
          skills_qualifications: string
          summary: string
          supervisory: boolean
          supervisory_details: string | null
          updated_at: string
          work_environment: string | null
        }
        Insert: {
          created_at?: string
          created_by: string
          duties?: Json
          flsa_classification: Database["public"]["Enums"]["flsa_classification"]
          id?: string
          job_title_id: string
          notes?: string | null
          physical_requirements?: string | null
          skills_qualifications: string
          summary: string
          supervisory?: boolean
          supervisory_details?: string | null
          updated_at?: string
          work_environment?: string | null
        }
        Update: {
          created_at?: string
          created_by?: string
          duties?: Json
          flsa_classification?: Database["public"]["Enums"]["flsa_classification"]
          id?: string
          job_title_id?: string
          notes?: string | null
          physical_requirements?: string | null
          skills_qualifications?: string
          summary?: string
          supervisory?: boolean
          supervisory_details?: string | null
          updated_at?: string
          work_environment?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "global_job_descriptions_job_title_id_fkey"
            columns: ["job_title_id"]
            isOneToOne: false
            referencedRelation: "global_job_titles"
            referencedColumns: ["id"]
          },
        ]
      }
      global_job_titles: {
        Row: {
          category_tags: string[] | null
          created_at: string
          created_by: string
          description: string | null
          effective_date: string
          end_date: string | null
          id: string
          title_name: string
          updated_at: string
          wc_code_id: string | null
        }
        Insert: {
          category_tags?: string[] | null
          created_at?: string
          created_by: string
          description?: string | null
          effective_date?: string
          end_date?: string | null
          id?: string
          title_name: string
          updated_at?: string
          wc_code_id?: string | null
        }
        Update: {
          category_tags?: string[] | null
          created_at?: string
          created_by?: string
          description?: string | null
          effective_date?: string
          end_date?: string | null
          id?: string
          title_name?: string
          updated_at?: string
          wc_code_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "global_job_titles_wc_code_id_fkey"
            columns: ["wc_code_id"]
            isOneToOne: false
            referencedRelation: "workers_comp_codes"
            referencedColumns: ["id"]
          },
        ]
      }
      global_tax_engine_settings: {
        Row: {
          configuration: Json
          created_at: string
          created_by: string | null
          credentials: Json
          display_name: string
          error_count: number
          id: string
          is_active: boolean
          last_error: string | null
          last_sync_at: string | null
          provider_name: string
          updated_at: string
          webhook_secret: string | null
          webhook_url: string | null
        }
        Insert: {
          configuration?: Json
          created_at?: string
          created_by?: string | null
          credentials?: Json
          display_name: string
          error_count?: number
          id?: string
          is_active?: boolean
          last_error?: string | null
          last_sync_at?: string | null
          provider_name: string
          updated_at?: string
          webhook_secret?: string | null
          webhook_url?: string | null
        }
        Update: {
          configuration?: Json
          created_at?: string
          created_by?: string | null
          credentials?: Json
          display_name?: string
          error_count?: number
          id?: string
          is_active?: boolean
          last_error?: string | null
          last_sync_at?: string | null
          provider_name?: string
          updated_at?: string
          webhook_secret?: string | null
          webhook_url?: string | null
        }
        Relationships: []
      }
      haalo_core_modules: {
        Row: {
          created_at: string | null
          description: string | null
          id: string
          is_active: boolean | null
          module_key: string
          module_name: string
          updated_at: string | null
          version: string | null
        }
        Insert: {
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          module_key: string
          module_name: string
          updated_at?: string | null
          version?: string | null
        }
        Update: {
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          module_key?: string
          module_name?: string
          updated_at?: string | null
          version?: string | null
        }
        Relationships: []
      }
      hali_configurations: {
        Row: {
          allowed_keywords: string[] | null
          auto_responses: Json | null
          company_id: string | null
          created_at: string | null
          created_by: string | null
          escalation_enabled: boolean | null
          escalation_routing: Json | null
          id: string
          is_active: boolean | null
          updated_at: string | null
          vault_file_settings: Json | null
        }
        Insert: {
          allowed_keywords?: string[] | null
          auto_responses?: Json | null
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          escalation_enabled?: boolean | null
          escalation_routing?: Json | null
          id?: string
          is_active?: boolean | null
          updated_at?: string | null
          vault_file_settings?: Json | null
        }
        Update: {
          allowed_keywords?: string[] | null
          auto_responses?: Json | null
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          escalation_enabled?: boolean | null
          escalation_routing?: Json | null
          id?: string
          is_active?: boolean | null
          updated_at?: string | null
          vault_file_settings?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "hali_configurations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halo_approval_requests: {
        Row: {
          action: Database["public"]["Enums"]["permission_action"] | null
          approved_at: string | null
          approved_by: string | null
          client_id: string | null
          created_at: string | null
          expires_at: string | null
          id: string
          justification: string | null
          module: Database["public"]["Enums"]["halo_module"] | null
          rejected_at: string | null
          rejected_by: string | null
          rejection_reason: string | null
          request_data: Json
          request_type: string
          requested_by: string
          resource_id: string | null
          status: string
          updated_at: string | null
        }
        Insert: {
          action?: Database["public"]["Enums"]["permission_action"] | null
          approved_at?: string | null
          approved_by?: string | null
          client_id?: string | null
          created_at?: string | null
          expires_at?: string | null
          id?: string
          justification?: string | null
          module?: Database["public"]["Enums"]["halo_module"] | null
          rejected_at?: string | null
          rejected_by?: string | null
          rejection_reason?: string | null
          request_data?: Json
          request_type: string
          requested_by: string
          resource_id?: string | null
          status?: string
          updated_at?: string | null
        }
        Update: {
          action?: Database["public"]["Enums"]["permission_action"] | null
          approved_at?: string | null
          approved_by?: string | null
          client_id?: string | null
          created_at?: string | null
          expires_at?: string | null
          id?: string
          justification?: string | null
          module?: Database["public"]["Enums"]["halo_module"] | null
          rejected_at?: string | null
          rejected_by?: string | null
          rejection_reason?: string | null
          request_data?: Json
          request_type?: string
          requested_by?: string
          resource_id?: string | null
          status?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "halo_approval_requests_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halo_audit_trail: {
        Row: {
          action: Database["public"]["Enums"]["permission_action"]
          approval_request_id: string | null
          client_id: string | null
          created_at: string | null
          id: string
          ip_address: unknown | null
          module: Database["public"]["Enums"]["halo_module"]
          new_values: Json | null
          old_values: Json | null
          override_used: boolean | null
          resource_id: string | null
          resource_type: string | null
          risk_score: number | null
          session_id: string | null
          user_agent: string | null
          user_id: string
        }
        Insert: {
          action: Database["public"]["Enums"]["permission_action"]
          approval_request_id?: string | null
          client_id?: string | null
          created_at?: string | null
          id?: string
          ip_address?: unknown | null
          module: Database["public"]["Enums"]["halo_module"]
          new_values?: Json | null
          old_values?: Json | null
          override_used?: boolean | null
          resource_id?: string | null
          resource_type?: string | null
          risk_score?: number | null
          session_id?: string | null
          user_agent?: string | null
          user_id: string
        }
        Update: {
          action?: Database["public"]["Enums"]["permission_action"]
          approval_request_id?: string | null
          client_id?: string | null
          created_at?: string | null
          id?: string
          ip_address?: unknown | null
          module?: Database["public"]["Enums"]["halo_module"]
          new_values?: Json | null
          old_values?: Json | null
          override_used?: boolean | null
          resource_id?: string | null
          resource_type?: string | null
          risk_score?: number | null
          session_id?: string | null
          user_agent?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "halo_audit_trail_approval_request_id_fkey"
            columns: ["approval_request_id"]
            isOneToOne: false
            referencedRelation: "halo_approval_requests"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halo_audit_trail_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halo_copilot_logs: {
        Row: {
          answer: string
          company_id: string | null
          context: Json | null
          created_at: string
          id: string
          model_used: string | null
          question: string
          response_time_ms: number | null
          updated_at: string
          user_satisfaction: number | null
        }
        Insert: {
          answer: string
          company_id?: string | null
          context?: Json | null
          created_at?: string
          id?: string
          model_used?: string | null
          question: string
          response_time_ms?: number | null
          updated_at?: string
          user_satisfaction?: number | null
        }
        Update: {
          answer?: string
          company_id?: string | null
          context?: Json | null
          created_at?: string
          id?: string
          model_used?: string | null
          question?: string
          response_time_ms?: number | null
          updated_at?: string
          user_satisfaction?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "halo_copilot_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halo_event_log: {
        Row: {
          acknowledged: boolean | null
          acknowledged_at: string | null
          acknowledged_by: string | null
          actor_id: string | null
          company_id: string | null
          created_at: string
          event_source: string
          event_type: string
          id: string
          message: string
          metadata: Json | null
          payroll_run_id: string | null
          severity: string
          title: string
        }
        Insert: {
          acknowledged?: boolean | null
          acknowledged_at?: string | null
          acknowledged_by?: string | null
          actor_id?: string | null
          company_id?: string | null
          created_at?: string
          event_source?: string
          event_type: string
          id?: string
          message: string
          metadata?: Json | null
          payroll_run_id?: string | null
          severity?: string
          title: string
        }
        Update: {
          acknowledged?: boolean | null
          acknowledged_at?: string | null
          acknowledged_by?: string | null
          actor_id?: string | null
          company_id?: string | null
          created_at?: string
          event_source?: string
          event_type?: string
          id?: string
          message?: string
          metadata?: Json | null
          payroll_run_id?: string | null
          severity?: string
          title?: string
        }
        Relationships: [
          {
            foreignKeyName: "halo_event_log_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halo_event_log_payroll_run_id_fkey"
            columns: ["payroll_run_id"]
            isOneToOne: false
            referencedRelation: "payroll_runs"
            referencedColumns: ["id"]
          },
        ]
      }
      halo_permission_overrides: {
        Row: {
          action: Database["public"]["Enums"]["permission_action"]
          client_id: string | null
          created_at: string | null
          expires_at: string | null
          granted_by: string
          id: string
          is_granted: boolean
          module: Database["public"]["Enums"]["halo_module"]
          reason: string
          updated_at: string | null
          user_id: string
        }
        Insert: {
          action: Database["public"]["Enums"]["permission_action"]
          client_id?: string | null
          created_at?: string | null
          expires_at?: string | null
          granted_by: string
          id?: string
          is_granted: boolean
          module: Database["public"]["Enums"]["halo_module"]
          reason: string
          updated_at?: string | null
          user_id: string
        }
        Update: {
          action?: Database["public"]["Enums"]["permission_action"]
          client_id?: string | null
          created_at?: string | null
          expires_at?: string | null
          granted_by?: string
          id?: string
          is_granted?: boolean
          module?: Database["public"]["Enums"]["halo_module"]
          reason?: string
          updated_at?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "halo_permission_overrides_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halo_role_permissions: {
        Row: {
          action: Database["public"]["Enums"]["permission_action"]
          created_at: string | null
          id: string
          is_allowed: boolean
          module: Database["public"]["Enums"]["halo_module"]
          requires_approval: boolean
          role: Database["public"]["Enums"]["halo_role"]
        }
        Insert: {
          action: Database["public"]["Enums"]["permission_action"]
          created_at?: string | null
          id?: string
          is_allowed?: boolean
          module: Database["public"]["Enums"]["halo_module"]
          requires_approval?: boolean
          role: Database["public"]["Enums"]["halo_role"]
        }
        Update: {
          action?: Database["public"]["Enums"]["permission_action"]
          created_at?: string | null
          id?: string
          is_allowed?: boolean
          module?: Database["public"]["Enums"]["halo_module"]
          requires_approval?: boolean
          role?: Database["public"]["Enums"]["halo_role"]
        }
        Relationships: []
      }
      halo_user_roles: {
        Row: {
          client_id: string | null
          created_at: string | null
          expires_at: string | null
          granted_at: string | null
          granted_by: string | null
          id: string
          is_active: boolean
          is_internal: boolean
          role: Database["public"]["Enums"]["halo_role"]
          updated_at: string | null
          user_id: string
        }
        Insert: {
          client_id?: string | null
          created_at?: string | null
          expires_at?: string | null
          granted_at?: string | null
          granted_by?: string | null
          id?: string
          is_active?: boolean
          is_internal?: boolean
          role: Database["public"]["Enums"]["halo_role"]
          updated_at?: string | null
          user_id: string
        }
        Update: {
          client_id?: string | null
          created_at?: string | null
          expires_at?: string | null
          granted_at?: string | null
          granted_by?: string | null
          id?: string
          is_active?: boolean
          is_internal?: boolean
          role?: Database["public"]["Enums"]["halo_role"]
          updated_at?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "halo_user_roles_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_actions: {
        Row: {
          action_name: string
          action_type: Database["public"]["Enums"]["haloassist_action_type"]
          completed_at: string | null
          conversation_id: string | null
          created_at: string | null
          description: string | null
          error_message: string | null
          executed_at: string | null
          execution_status: string | null
          id: string
          message_id: string | null
          metadata: Json | null
          parameters: Json | null
          result_data: Json | null
          triggered_by: string
        }
        Insert: {
          action_name: string
          action_type: Database["public"]["Enums"]["haloassist_action_type"]
          completed_at?: string | null
          conversation_id?: string | null
          created_at?: string | null
          description?: string | null
          error_message?: string | null
          executed_at?: string | null
          execution_status?: string | null
          id?: string
          message_id?: string | null
          metadata?: Json | null
          parameters?: Json | null
          result_data?: Json | null
          triggered_by: string
        }
        Update: {
          action_name?: string
          action_type?: Database["public"]["Enums"]["haloassist_action_type"]
          completed_at?: string | null
          conversation_id?: string | null
          created_at?: string | null
          description?: string | null
          error_message?: string | null
          executed_at?: string | null
          execution_status?: string | null
          id?: string
          message_id?: string | null
          metadata?: Json | null
          parameters?: Json | null
          result_data?: Json | null
          triggered_by?: string
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_actions_conversation_id_fkey"
            columns: ["conversation_id"]
            isOneToOne: false
            referencedRelation: "haloassist_conversations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "haloassist_actions_message_id_fkey"
            columns: ["message_id"]
            isOneToOne: false
            referencedRelation: "haloassist_messages"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_analytics: {
        Row: {
          company_id: string | null
          conversation_type:
            | Database["public"]["Enums"]["haloassist_conversation_type"]
            | null
          created_at: string | null
          date_recorded: string | null
          dimensions: Json | null
          id: string
          metric_name: string
          metric_type: string
          metric_value: number
          user_type: Database["public"]["Enums"]["haloassist_user_type"] | null
        }
        Insert: {
          company_id?: string | null
          conversation_type?:
            | Database["public"]["Enums"]["haloassist_conversation_type"]
            | null
          created_at?: string | null
          date_recorded?: string | null
          dimensions?: Json | null
          id?: string
          metric_name: string
          metric_type: string
          metric_value: number
          user_type?: Database["public"]["Enums"]["haloassist_user_type"] | null
        }
        Update: {
          company_id?: string | null
          conversation_type?:
            | Database["public"]["Enums"]["haloassist_conversation_type"]
            | null
          created_at?: string | null
          date_recorded?: string | null
          dimensions?: Json | null
          id?: string
          metric_name?: string
          metric_type?: string
          metric_value?: number
          user_type?: Database["public"]["Enums"]["haloassist_user_type"] | null
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_analytics_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_conversations: {
        Row: {
          company_id: string | null
          context_data: Json | null
          conversation_type: Database["public"]["Enums"]["haloassist_conversation_type"]
          created_at: string | null
          id: string
          input_mode: Database["public"]["Enums"]["haloassist_input_mode"]
          is_active: boolean | null
          last_activity_at: string | null
          metadata: Json | null
          title: string | null
          total_messages: number | null
          updated_at: string | null
          user_id: string
          user_type: Database["public"]["Enums"]["haloassist_user_type"]
        }
        Insert: {
          company_id?: string | null
          context_data?: Json | null
          conversation_type: Database["public"]["Enums"]["haloassist_conversation_type"]
          created_at?: string | null
          id?: string
          input_mode?: Database["public"]["Enums"]["haloassist_input_mode"]
          is_active?: boolean | null
          last_activity_at?: string | null
          metadata?: Json | null
          title?: string | null
          total_messages?: number | null
          updated_at?: string | null
          user_id: string
          user_type: Database["public"]["Enums"]["haloassist_user_type"]
        }
        Update: {
          company_id?: string | null
          context_data?: Json | null
          conversation_type?: Database["public"]["Enums"]["haloassist_conversation_type"]
          created_at?: string | null
          id?: string
          input_mode?: Database["public"]["Enums"]["haloassist_input_mode"]
          is_active?: boolean | null
          last_activity_at?: string | null
          metadata?: Json | null
          title?: string | null
          total_messages?: number | null
          updated_at?: string | null
          user_id?: string
          user_type?: Database["public"]["Enums"]["haloassist_user_type"]
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_conversations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_feedback: {
        Row: {
          comment: string | null
          conversation_id: string | null
          created_at: string | null
          feedback_type: Database["public"]["Enums"]["haloassist_feedback_type"]
          id: string
          message_id: string | null
          metadata: Json | null
          rating: number | null
          suggestions: string | null
          user_id: string
        }
        Insert: {
          comment?: string | null
          conversation_id?: string | null
          created_at?: string | null
          feedback_type: Database["public"]["Enums"]["haloassist_feedback_type"]
          id?: string
          message_id?: string | null
          metadata?: Json | null
          rating?: number | null
          suggestions?: string | null
          user_id: string
        }
        Update: {
          comment?: string | null
          conversation_id?: string | null
          created_at?: string | null
          feedback_type?: Database["public"]["Enums"]["haloassist_feedback_type"]
          id?: string
          message_id?: string | null
          metadata?: Json | null
          rating?: number | null
          suggestions?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_feedback_conversation_id_fkey"
            columns: ["conversation_id"]
            isOneToOne: false
            referencedRelation: "haloassist_conversations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "haloassist_feedback_message_id_fkey"
            columns: ["message_id"]
            isOneToOne: false
            referencedRelation: "haloassist_messages"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_integrations: {
        Row: {
          api_endpoints: Json | null
          company_id: string | null
          configuration: Json | null
          created_at: string | null
          error_count: number | null
          id: string
          integration_name: string
          integration_type: Database["public"]["Enums"]["haloassist_integration_type"]
          is_active: boolean | null
          last_sync_at: string | null
          metadata: Json | null
          permissions: Json | null
          sync_status: string | null
          updated_at: string | null
        }
        Insert: {
          api_endpoints?: Json | null
          company_id?: string | null
          configuration?: Json | null
          created_at?: string | null
          error_count?: number | null
          id?: string
          integration_name: string
          integration_type: Database["public"]["Enums"]["haloassist_integration_type"]
          is_active?: boolean | null
          last_sync_at?: string | null
          metadata?: Json | null
          permissions?: Json | null
          sync_status?: string | null
          updated_at?: string | null
        }
        Update: {
          api_endpoints?: Json | null
          company_id?: string | null
          configuration?: Json | null
          created_at?: string | null
          error_count?: number | null
          id?: string
          integration_name?: string
          integration_type?: Database["public"]["Enums"]["haloassist_integration_type"]
          is_active?: boolean | null
          last_sync_at?: string | null
          metadata?: Json | null
          permissions?: Json | null
          sync_status?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_integrations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_knowledge_base: {
        Row: {
          category: string
          company_id: string | null
          content: string
          created_at: string | null
          created_by: string | null
          id: string
          is_active: boolean | null
          last_used_at: string | null
          metadata: Json | null
          relevance_score: number | null
          source_type: string | null
          source_url: string | null
          tags: string[] | null
          title: string
          updated_at: string | null
          usage_count: number | null
        }
        Insert: {
          category: string
          company_id?: string | null
          content: string
          created_at?: string | null
          created_by?: string | null
          id?: string
          is_active?: boolean | null
          last_used_at?: string | null
          metadata?: Json | null
          relevance_score?: number | null
          source_type?: string | null
          source_url?: string | null
          tags?: string[] | null
          title: string
          updated_at?: string | null
          usage_count?: number | null
        }
        Update: {
          category?: string
          company_id?: string | null
          content?: string
          created_at?: string | null
          created_by?: string | null
          id?: string
          is_active?: boolean | null
          last_used_at?: string | null
          metadata?: Json | null
          relevance_score?: number | null
          source_type?: string | null
          source_url?: string | null
          tags?: string[] | null
          title?: string
          updated_at?: string | null
          usage_count?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_knowledge_base_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_messages: {
        Row: {
          ai_model: string | null
          attachments: Json | null
          audio_url: string | null
          confidence_score: number | null
          content: string
          context_used: Json | null
          conversation_id: string | null
          created_at: string | null
          id: string
          input_mode:
            | Database["public"]["Enums"]["haloassist_input_mode"]
            | null
          message_type: Database["public"]["Enums"]["haloassist_message_type"]
          metadata: Json | null
          processing_time_ms: number | null
          role: string
          user_id: string | null
        }
        Insert: {
          ai_model?: string | null
          attachments?: Json | null
          audio_url?: string | null
          confidence_score?: number | null
          content: string
          context_used?: Json | null
          conversation_id?: string | null
          created_at?: string | null
          id?: string
          input_mode?:
            | Database["public"]["Enums"]["haloassist_input_mode"]
            | null
          message_type: Database["public"]["Enums"]["haloassist_message_type"]
          metadata?: Json | null
          processing_time_ms?: number | null
          role: string
          user_id?: string | null
        }
        Update: {
          ai_model?: string | null
          attachments?: Json | null
          audio_url?: string | null
          confidence_score?: number | null
          content?: string
          context_used?: Json | null
          conversation_id?: string | null
          created_at?: string | null
          id?: string
          input_mode?:
            | Database["public"]["Enums"]["haloassist_input_mode"]
            | null
          message_type?: Database["public"]["Enums"]["haloassist_message_type"]
          metadata?: Json | null
          processing_time_ms?: number | null
          role?: string
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_messages_conversation_id_fkey"
            columns: ["conversation_id"]
            isOneToOne: false
            referencedRelation: "haloassist_conversations"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_training_data: {
        Row: {
          actual_output: string | null
          approved_by: string | null
          company_id: string | null
          conversation_id: string | null
          created_at: string | null
          data_source: string | null
          expected_output: string
          feedback_score: number | null
          id: string
          input_text: string
          is_approved: boolean | null
          metadata: Json | null
          quality_score: number | null
          training_status: string | null
          updated_at: string | null
        }
        Insert: {
          actual_output?: string | null
          approved_by?: string | null
          company_id?: string | null
          conversation_id?: string | null
          created_at?: string | null
          data_source?: string | null
          expected_output: string
          feedback_score?: number | null
          id?: string
          input_text: string
          is_approved?: boolean | null
          metadata?: Json | null
          quality_score?: number | null
          training_status?: string | null
          updated_at?: string | null
        }
        Update: {
          actual_output?: string | null
          approved_by?: string | null
          company_id?: string | null
          conversation_id?: string | null
          created_at?: string | null
          data_source?: string | null
          expected_output?: string
          feedback_score?: number | null
          id?: string
          input_text?: string
          is_approved?: boolean | null
          metadata?: Json | null
          quality_score?: number | null
          training_status?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_training_data_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "haloassist_training_data_conversation_id_fkey"
            columns: ["conversation_id"]
            isOneToOne: false
            referencedRelation: "haloassist_conversations"
            referencedColumns: ["id"]
          },
        ]
      }
      haloassist_user_preferences: {
        Row: {
          company_id: string | null
          created_at: string | null
          custom_shortcuts: Json | null
          id: string
          language_code: string | null
          notification_preferences: Json | null
          personality_settings: Json | null
          preferred_input_mode:
            | Database["public"]["Enums"]["haloassist_input_mode"]
            | null
          privacy_settings: Json | null
          updated_at: string | null
          user_id: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string | null
          custom_shortcuts?: Json | null
          id?: string
          language_code?: string | null
          notification_preferences?: Json | null
          personality_settings?: Json | null
          preferred_input_mode?:
            | Database["public"]["Enums"]["haloassist_input_mode"]
            | null
          privacy_settings?: Json | null
          updated_at?: string | null
          user_id: string
        }
        Update: {
          company_id?: string | null
          created_at?: string | null
          custom_shortcuts?: Json | null
          id?: string
          language_code?: string | null
          notification_preferences?: Json | null
          personality_settings?: Json | null
          preferred_input_mode?:
            | Database["public"]["Enums"]["haloassist_input_mode"]
            | null
          privacy_settings?: Json | null
          updated_at?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "haloassist_user_preferences_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_billing_alerts: {
        Row: {
          alert_type: string
          client_id: string | null
          created_at: string
          description: string
          id: string
          invoice_id: string | null
          metadata: Json | null
          resolved: boolean
          resolved_at: string | null
          resolved_by: string | null
          severity: string
          title: string
          updated_at: string
        }
        Insert: {
          alert_type: string
          client_id?: string | null
          created_at?: string
          description: string
          id?: string
          invoice_id?: string | null
          metadata?: Json | null
          resolved?: boolean
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          title: string
          updated_at?: string
        }
        Update: {
          alert_type?: string
          client_id?: string | null
          created_at?: string
          description?: string
          id?: string
          invoice_id?: string | null
          metadata?: Json | null
          resolved?: boolean
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobill_billing_alerts_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_billing_alerts_invoice_id_fkey"
            columns: ["invoice_id"]
            isOneToOne: false
            referencedRelation: "halobill_invoices"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_client_subscriptions: {
        Row: {
          auto_cutoff_enabled: boolean
          billing_frequency: string
          client_id: string | null
          created_at: string
          cutoff_grace_days: number
          grace_period_days: number
          id: string
          next_billing_date: string
          pricing_model_id: string | null
          status: string
          updated_at: string
        }
        Insert: {
          auto_cutoff_enabled?: boolean
          billing_frequency?: string
          client_id?: string | null
          created_at?: string
          cutoff_grace_days?: number
          grace_period_days?: number
          id?: string
          next_billing_date: string
          pricing_model_id?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          auto_cutoff_enabled?: boolean
          billing_frequency?: string
          client_id?: string | null
          created_at?: string
          cutoff_grace_days?: number
          grace_period_days?: number
          id?: string
          next_billing_date?: string
          pricing_model_id?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobill_client_subscriptions_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_client_subscriptions_pricing_model_id_fkey"
            columns: ["pricing_model_id"]
            isOneToOne: false
            referencedRelation: "halobill_pricing_models"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_commissions: {
        Row: {
          client_id: string | null
          commission_amount: number
          commission_period_end: string
          commission_period_start: string
          commission_rate: number
          created_at: string
          id: string
          invoice_id: string | null
          paid_date: string | null
          partner_id: string | null
          payment_reference: string | null
          revenue_amount: number
          status: string
          updated_at: string
        }
        Insert: {
          client_id?: string | null
          commission_amount: number
          commission_period_end: string
          commission_period_start: string
          commission_rate: number
          created_at?: string
          id?: string
          invoice_id?: string | null
          paid_date?: string | null
          partner_id?: string | null
          payment_reference?: string | null
          revenue_amount: number
          status?: string
          updated_at?: string
        }
        Update: {
          client_id?: string | null
          commission_amount?: number
          commission_period_end?: string
          commission_period_start?: string
          commission_rate?: number
          created_at?: string
          id?: string
          invoice_id?: string | null
          paid_date?: string | null
          partner_id?: string | null
          payment_reference?: string | null
          revenue_amount?: number
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobill_commissions_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_commissions_invoice_id_fkey"
            columns: ["invoice_id"]
            isOneToOne: false
            referencedRelation: "halobill_invoices"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_commissions_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobill_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_feature_skus: {
        Row: {
          billing_trigger: string
          created_at: string
          description: string | null
          feature_name: string
          id: string
          is_active: boolean
          pricing_type: string
          sku_code: string
          unit_price: number
          updated_at: string
        }
        Insert: {
          billing_trigger: string
          created_at?: string
          description?: string | null
          feature_name: string
          id?: string
          is_active?: boolean
          pricing_type: string
          sku_code: string
          unit_price: number
          updated_at?: string
        }
        Update: {
          billing_trigger?: string
          created_at?: string
          description?: string | null
          feature_name?: string
          id?: string
          is_active?: boolean
          pricing_type?: string
          sku_code?: string
          unit_price?: number
          updated_at?: string
        }
        Relationships: []
      }
      halobill_invoice_line_items: {
        Row: {
          created_at: string
          description: string
          feature_sku_id: string | null
          id: string
          invoice_id: string | null
          line_total: number
          metadata: Json | null
          quantity: number
          unit_price: number
          usage_period_end: string | null
          usage_period_start: string | null
        }
        Insert: {
          created_at?: string
          description: string
          feature_sku_id?: string | null
          id?: string
          invoice_id?: string | null
          line_total: number
          metadata?: Json | null
          quantity?: number
          unit_price: number
          usage_period_end?: string | null
          usage_period_start?: string | null
        }
        Update: {
          created_at?: string
          description?: string
          feature_sku_id?: string | null
          id?: string
          invoice_id?: string | null
          line_total?: number
          metadata?: Json | null
          quantity?: number
          unit_price?: number
          usage_period_end?: string | null
          usage_period_start?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "halobill_invoice_line_items_feature_sku_id_fkey"
            columns: ["feature_sku_id"]
            isOneToOne: false
            referencedRelation: "halobill_feature_skus"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_invoice_line_items_invoice_id_fkey"
            columns: ["invoice_id"]
            isOneToOne: false
            referencedRelation: "halobill_invoices"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_invoices: {
        Row: {
          billing_period_end: string
          billing_period_start: string
          client_id: string | null
          created_at: string
          due_date: string
          id: string
          invoice_number: string
          late_fee_amount: number
          paid_date: string | null
          payment_method: string | null
          payment_reference: string | null
          pdf_url: string | null
          sent_at: string | null
          status: string
          subscription_id: string | null
          subtotal: number
          tax_amount: number
          total_amount: number
          updated_at: string
        }
        Insert: {
          billing_period_end: string
          billing_period_start: string
          client_id?: string | null
          created_at?: string
          due_date: string
          id?: string
          invoice_number: string
          late_fee_amount?: number
          paid_date?: string | null
          payment_method?: string | null
          payment_reference?: string | null
          pdf_url?: string | null
          sent_at?: string | null
          status?: string
          subscription_id?: string | null
          subtotal?: number
          tax_amount?: number
          total_amount?: number
          updated_at?: string
        }
        Update: {
          billing_period_end?: string
          billing_period_start?: string
          client_id?: string | null
          created_at?: string
          due_date?: string
          id?: string
          invoice_number?: string
          late_fee_amount?: number
          paid_date?: string | null
          payment_method?: string | null
          payment_reference?: string | null
          pdf_url?: string | null
          sent_at?: string | null
          status?: string
          subscription_id?: string | null
          subtotal?: number
          tax_amount?: number
          total_amount?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobill_invoices_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_invoices_subscription_id_fkey"
            columns: ["subscription_id"]
            isOneToOne: false
            referencedRelation: "halobill_client_subscriptions"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_partner_clients: {
        Row: {
          client_id: string | null
          commission_rate: number
          created_at: string
          effective_date: string
          expires_date: string | null
          id: string
          is_active: boolean
          partner_id: string | null
          updated_at: string
        }
        Insert: {
          client_id?: string | null
          commission_rate: number
          created_at?: string
          effective_date?: string
          expires_date?: string | null
          id?: string
          is_active?: boolean
          partner_id?: string | null
          updated_at?: string
        }
        Update: {
          client_id?: string | null
          commission_rate?: number
          created_at?: string
          effective_date?: string
          expires_date?: string | null
          id?: string
          is_active?: boolean
          partner_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobill_partner_clients_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_partner_clients_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobill_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_partners: {
        Row: {
          commission_rate: number
          contact_email: string
          created_at: string
          id: string
          is_active: boolean
          minimum_payout: number
          partner_name: string
          partner_type: string
          payment_method: string | null
          payment_schedule: string
          tax_id: string | null
          updated_at: string
        }
        Insert: {
          commission_rate?: number
          contact_email: string
          created_at?: string
          id?: string
          is_active?: boolean
          minimum_payout?: number
          partner_name: string
          partner_type: string
          payment_method?: string | null
          payment_schedule?: string
          tax_id?: string | null
          updated_at?: string
        }
        Update: {
          commission_rate?: number
          contact_email?: string
          created_at?: string
          id?: string
          is_active?: boolean
          minimum_payout?: number
          partner_name?: string
          partner_type?: string
          payment_method?: string | null
          payment_schedule?: string
          tax_id?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      halobill_payments: {
        Row: {
          amount: number
          client_id: string | null
          created_at: string
          failure_reason: string | null
          id: string
          invoice_id: string | null
          metadata: Json | null
          payment_method: string
          processed_at: string | null
          processor: string
          processor_payment_id: string | null
          refund_amount: number | null
          refunded_at: string | null
          status: string
          updated_at: string
        }
        Insert: {
          amount: number
          client_id?: string | null
          created_at?: string
          failure_reason?: string | null
          id?: string
          invoice_id?: string | null
          metadata?: Json | null
          payment_method: string
          processed_at?: string | null
          processor: string
          processor_payment_id?: string | null
          refund_amount?: number | null
          refunded_at?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          amount?: number
          client_id?: string | null
          created_at?: string
          failure_reason?: string | null
          id?: string
          invoice_id?: string | null
          metadata?: Json | null
          payment_method?: string
          processed_at?: string | null
          processor?: string
          processor_payment_id?: string | null
          refund_amount?: number | null
          refunded_at?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobill_payments_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_payments_invoice_id_fkey"
            columns: ["invoice_id"]
            isOneToOne: false
            referencedRelation: "halobill_invoices"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_pricing_models: {
        Row: {
          base_rate: number
          company_id: string | null
          created_at: string
          effective_date: string
          expires_date: string | null
          id: string
          is_active: boolean
          maximum_fee: number | null
          minimum_fee: number | null
          model_type: string
          name: string
          per_check_rate: number | null
          per_employee_rate: number | null
          updated_at: string
        }
        Insert: {
          base_rate?: number
          company_id?: string | null
          created_at?: string
          effective_date?: string
          expires_date?: string | null
          id?: string
          is_active?: boolean
          maximum_fee?: number | null
          minimum_fee?: number | null
          model_type: string
          name: string
          per_check_rate?: number | null
          per_employee_rate?: number | null
          updated_at?: string
        }
        Update: {
          base_rate?: number
          company_id?: string | null
          created_at?: string
          effective_date?: string
          expires_date?: string | null
          id?: string
          is_active?: boolean
          maximum_fee?: number | null
          minimum_fee?: number | null
          model_type?: string
          name?: string
          per_check_rate?: number | null
          per_employee_rate?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobill_pricing_models_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_revenue_metrics: {
        Row: {
          amount: number
          client_count: number | null
          created_at: string
          id: string
          metadata: Json | null
          metric_date: string
          metric_type: string
        }
        Insert: {
          amount?: number
          client_count?: number | null
          created_at?: string
          id?: string
          metadata?: Json | null
          metric_date?: string
          metric_type: string
        }
        Update: {
          amount?: number
          client_count?: number | null
          created_at?: string
          id?: string
          metadata?: Json | null
          metric_date?: string
          metric_type?: string
        }
        Relationships: []
      }
      halobill_subscription_features: {
        Row: {
          activated_at: string
          created_at: string
          current_usage: number
          deactivated_at: string | null
          feature_sku_id: string | null
          id: string
          is_active: boolean
          subscription_id: string | null
          updated_at: string
          usage_limit: number | null
        }
        Insert: {
          activated_at?: string
          created_at?: string
          current_usage?: number
          deactivated_at?: string | null
          feature_sku_id?: string | null
          id?: string
          is_active?: boolean
          subscription_id?: string | null
          updated_at?: string
          usage_limit?: number | null
        }
        Update: {
          activated_at?: string
          created_at?: string
          current_usage?: number
          deactivated_at?: string | null
          feature_sku_id?: string | null
          id?: string
          is_active?: boolean
          subscription_id?: string | null
          updated_at?: string
          usage_limit?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "halobill_subscription_features_feature_sku_id_fkey"
            columns: ["feature_sku_id"]
            isOneToOne: false
            referencedRelation: "halobill_feature_skus"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_subscription_features_subscription_id_fkey"
            columns: ["subscription_id"]
            isOneToOne: false
            referencedRelation: "halobill_client_subscriptions"
            referencedColumns: ["id"]
          },
        ]
      }
      halobill_usage_tracking: {
        Row: {
          billable_amount: number | null
          client_id: string | null
          created_at: string
          feature_sku_id: string | null
          id: string
          metadata: Json | null
          processed: boolean
          quantity: number
          usage_date: string
          usage_type: string
        }
        Insert: {
          billable_amount?: number | null
          client_id?: string | null
          created_at?: string
          feature_sku_id?: string | null
          id?: string
          metadata?: Json | null
          processed?: boolean
          quantity?: number
          usage_date?: string
          usage_type: string
        }
        Update: {
          billable_amount?: number | null
          client_id?: string | null
          created_at?: string
          feature_sku_id?: string | null
          id?: string
          metadata?: Json | null
          processed?: boolean
          quantity?: number
          usage_date?: string
          usage_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobill_usage_tracking_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobill_usage_tracking_feature_sku_id_fkey"
            columns: ["feature_sku_id"]
            isOneToOne: false
            referencedRelation: "halobill_feature_skus"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_audit_logs: {
        Row: {
          action_type: string
          created_at: string
          entity_id: string
          entity_type: string
          id: string
          ip_address: unknown | null
          metadata: Json | null
          new_values: Json | null
          old_values: Json | null
          partner_id: string | null
          performed_by: string | null
          user_agent: string | null
        }
        Insert: {
          action_type: string
          created_at?: string
          entity_id: string
          entity_type: string
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          new_values?: Json | null
          old_values?: Json | null
          partner_id?: string | null
          performed_by?: string | null
          user_agent?: string | null
        }
        Update: {
          action_type?: string
          created_at?: string
          entity_id?: string
          entity_type?: string
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          new_values?: Json | null
          old_values?: Json | null
          partner_id?: string | null
          performed_by?: string | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "halobroker_audit_logs_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobroker_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_certifications: {
        Row: {
          attempts: number | null
          certificate_url: string | null
          certification_type: string
          completed_at: string | null
          created_at: string
          expires_at: string | null
          id: string
          partner_id: string
          score: number | null
          started_at: string | null
          status: string
          training_module_id: string | null
          updated_at: string
        }
        Insert: {
          attempts?: number | null
          certificate_url?: string | null
          certification_type: string
          completed_at?: string | null
          created_at?: string
          expires_at?: string | null
          id?: string
          partner_id: string
          score?: number | null
          started_at?: string | null
          status?: string
          training_module_id?: string | null
          updated_at?: string
        }
        Update: {
          attempts?: number | null
          certificate_url?: string | null
          certification_type?: string
          completed_at?: string | null
          created_at?: string
          expires_at?: string | null
          id?: string
          partner_id?: string
          score?: number | null
          started_at?: string | null
          status?: string
          training_module_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobroker_certifications_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobroker_partners"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobroker_certifications_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "halobroker_training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_commission_statements: {
        Row: {
          created_at: string
          generated_at: string | null
          id: string
          net_amount: number | null
          paid_at: string | null
          partner_id: string
          pdf_url: string | null
          period_end: string
          period_start: string
          sent_at: string | null
          statement_number: string
          status: string
          total_commissions: number
          total_deductions: number
          updated_at: string
        }
        Insert: {
          created_at?: string
          generated_at?: string | null
          id?: string
          net_amount?: number | null
          paid_at?: string | null
          partner_id: string
          pdf_url?: string | null
          period_end: string
          period_start: string
          sent_at?: string | null
          statement_number: string
          status?: string
          total_commissions?: number
          total_deductions?: number
          updated_at?: string
        }
        Update: {
          created_at?: string
          generated_at?: string | null
          id?: string
          net_amount?: number | null
          paid_at?: string | null
          partner_id?: string
          pdf_url?: string | null
          period_end?: string
          period_start?: string
          sent_at?: string | null
          statement_number?: string
          status?: string
          total_commissions?: number
          total_deductions?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobroker_commission_statements_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobroker_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_commissions: {
        Row: {
          base_amount: number
          client_id: string | null
          commission_amount: number
          commission_rate: number
          commission_type: string
          created_at: string
          id: string
          lead_id: string | null
          metadata: Json | null
          partner_id: string
          payment_date: string | null
          payment_status: string
          period_end: string | null
          period_start: string | null
          product_category: string
          statement_id: string | null
          tier_bonus: number | null
          total_commission: number | null
          updated_at: string
        }
        Insert: {
          base_amount: number
          client_id?: string | null
          commission_amount: number
          commission_rate: number
          commission_type: string
          created_at?: string
          id?: string
          lead_id?: string | null
          metadata?: Json | null
          partner_id: string
          payment_date?: string | null
          payment_status?: string
          period_end?: string | null
          period_start?: string | null
          product_category: string
          statement_id?: string | null
          tier_bonus?: number | null
          total_commission?: number | null
          updated_at?: string
        }
        Update: {
          base_amount?: number
          client_id?: string | null
          commission_amount?: number
          commission_rate?: number
          commission_type?: string
          created_at?: string
          id?: string
          lead_id?: string | null
          metadata?: Json | null
          partner_id?: string
          payment_date?: string | null
          payment_status?: string
          period_end?: string | null
          period_start?: string | null
          product_category?: string
          statement_id?: string | null
          tier_bonus?: number | null
          total_commission?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobroker_commissions_lead_id_fkey"
            columns: ["lead_id"]
            isOneToOne: false
            referencedRelation: "halobroker_leads"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halobroker_commissions_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobroker_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_compliance_documents: {
        Row: {
          created_at: string
          document_name: string
          document_type: string
          expiry_date: string | null
          file_path: string | null
          id: string
          metadata: Json | null
          partner_id: string
          review_notes: string | null
          reviewed_at: string | null
          reviewed_by: string | null
          status: string
          updated_at: string
          uploaded_at: string | null
        }
        Insert: {
          created_at?: string
          document_name: string
          document_type: string
          expiry_date?: string | null
          file_path?: string | null
          id?: string
          metadata?: Json | null
          partner_id: string
          review_notes?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          status?: string
          updated_at?: string
          uploaded_at?: string | null
        }
        Update: {
          created_at?: string
          document_name?: string
          document_type?: string
          expiry_date?: string | null
          file_path?: string | null
          id?: string
          metadata?: Json | null
          partner_id?: string
          review_notes?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          status?: string
          updated_at?: string
          uploaded_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "halobroker_compliance_documents_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobroker_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_leads: {
        Row: {
          annual_revenue: number | null
          assigned_to: string | null
          company_name: string
          company_size: string | null
          contact_email: string
          contact_name: string
          contact_phone: string | null
          converted_at: string | null
          created_at: string
          duplicate_check_hash: string | null
          estimated_value: number | null
          expected_close_date: string | null
          id: string
          industry: string | null
          lead_source: string | null
          notes: string | null
          partner_id: string
          priority: string | null
          services_interested: string[] | null
          stage: string
          stage_history: Json | null
          updated_at: string
        }
        Insert: {
          annual_revenue?: number | null
          assigned_to?: string | null
          company_name: string
          company_size?: string | null
          contact_email: string
          contact_name: string
          contact_phone?: string | null
          converted_at?: string | null
          created_at?: string
          duplicate_check_hash?: string | null
          estimated_value?: number | null
          expected_close_date?: string | null
          id?: string
          industry?: string | null
          lead_source?: string | null
          notes?: string | null
          partner_id: string
          priority?: string | null
          services_interested?: string[] | null
          stage?: string
          stage_history?: Json | null
          updated_at?: string
        }
        Update: {
          annual_revenue?: number | null
          assigned_to?: string | null
          company_name?: string
          company_size?: string | null
          contact_email?: string
          contact_name?: string
          contact_phone?: string | null
          converted_at?: string | null
          created_at?: string
          duplicate_check_hash?: string | null
          estimated_value?: number | null
          expected_close_date?: string | null
          id?: string
          industry?: string | null
          lead_source?: string | null
          notes?: string | null
          partner_id?: string
          priority?: string | null
          services_interested?: string[] | null
          stage?: string
          stage_history?: Json | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobroker_leads_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobroker_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_marketing_assets: {
        Row: {
          asset_name: string
          asset_type: string
          category: string
          created_at: string
          created_by: string | null
          description: string | null
          download_count: number | null
          file_format: string | null
          file_path: string | null
          file_size: number | null
          id: string
          is_active: boolean | null
          updated_at: string
          white_label_available: boolean | null
        }
        Insert: {
          asset_name: string
          asset_type: string
          category: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          download_count?: number | null
          file_format?: string | null
          file_path?: string | null
          file_size?: number | null
          id?: string
          is_active?: boolean | null
          updated_at?: string
          white_label_available?: boolean | null
        }
        Update: {
          asset_name?: string
          asset_type?: string
          category?: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          download_count?: number | null
          file_format?: string | null
          file_path?: string | null
          file_size?: number | null
          id?: string
          is_active?: boolean | null
          updated_at?: string
          white_label_available?: boolean | null
        }
        Relationships: []
      }
      halobroker_notifications: {
        Row: {
          action_url: string | null
          created_at: string
          id: string
          is_read: boolean | null
          message: string
          metadata: Json | null
          notification_type: string
          partner_id: string
          priority: string | null
          read_at: string | null
          title: string
          updated_at: string
        }
        Insert: {
          action_url?: string | null
          created_at?: string
          id?: string
          is_read?: boolean | null
          message: string
          metadata?: Json | null
          notification_type: string
          partner_id: string
          priority?: string | null
          read_at?: string | null
          title: string
          updated_at?: string
        }
        Update: {
          action_url?: string | null
          created_at?: string
          id?: string
          is_read?: boolean | null
          message?: string
          metadata?: Json | null
          notification_type?: string
          partner_id?: string
          priority?: string | null
          read_at?: string | null
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobroker_notifications_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobroker_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_partners: {
        Row: {
          address: Json | null
          commission_rate: number | null
          company_name: string
          contact_name: string
          created_at: string
          email: string
          id: string
          license_expiry: string | null
          license_number: string | null
          onboarded_at: string | null
          partner_type: string
          phone: string | null
          specializations: string[] | null
          status: string
          territory: string[] | null
          tier_level: string
          updated_at: string
          user_id: string | null
        }
        Insert: {
          address?: Json | null
          commission_rate?: number | null
          company_name: string
          contact_name: string
          created_at?: string
          email: string
          id?: string
          license_expiry?: string | null
          license_number?: string | null
          onboarded_at?: string | null
          partner_type?: string
          phone?: string | null
          specializations?: string[] | null
          status?: string
          territory?: string[] | null
          tier_level?: string
          updated_at?: string
          user_id?: string | null
        }
        Update: {
          address?: Json | null
          commission_rate?: number | null
          company_name?: string
          contact_name?: string
          created_at?: string
          email?: string
          id?: string
          license_expiry?: string | null
          license_number?: string | null
          onboarded_at?: string | null
          partner_type?: string
          phone?: string | null
          specializations?: string[] | null
          status?: string
          territory?: string[] | null
          tier_level?: string
          updated_at?: string
          user_id?: string | null
        }
        Relationships: []
      }
      halobroker_referral_widgets: {
        Row: {
          configuration: Json
          created_at: string
          embed_code: string | null
          id: string
          is_active: boolean | null
          last_used_at: string | null
          partner_id: string
          tracking_code: string
          updated_at: string
          usage_count: number | null
          widget_name: string
          widget_type: string
        }
        Insert: {
          configuration?: Json
          created_at?: string
          embed_code?: string | null
          id?: string
          is_active?: boolean | null
          last_used_at?: string | null
          partner_id: string
          tracking_code: string
          updated_at?: string
          usage_count?: number | null
          widget_name: string
          widget_type: string
        }
        Update: {
          configuration?: Json
          created_at?: string
          embed_code?: string | null
          id?: string
          is_active?: boolean | null
          last_used_at?: string | null
          partner_id?: string
          tracking_code?: string
          updated_at?: string
          usage_count?: number | null
          widget_name?: string
          widget_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "halobroker_referral_widgets_partner_id_fkey"
            columns: ["partner_id"]
            isOneToOne: false
            referencedRelation: "halobroker_partners"
            referencedColumns: ["id"]
          },
        ]
      }
      halobroker_training_modules: {
        Row: {
          category: string
          content_type: string
          content_url: string | null
          created_at: string
          created_by: string | null
          description: string | null
          difficulty_level: string | null
          duration_minutes: number | null
          id: string
          is_active: boolean | null
          is_required: boolean | null
          passing_score: number | null
          prerequisites: string[] | null
          sort_order: number | null
          title: string
          updated_at: string
        }
        Insert: {
          category: string
          content_type: string
          content_url?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          difficulty_level?: string | null
          duration_minutes?: number | null
          id?: string
          is_active?: boolean | null
          is_required?: boolean | null
          passing_score?: number | null
          prerequisites?: string[] | null
          sort_order?: number | null
          title: string
          updated_at?: string
        }
        Update: {
          category?: string
          content_type?: string
          content_url?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          difficulty_level?: string | null
          duration_minutes?: number | null
          id?: string
          is_active?: boolean | null
          is_required?: boolean | null
          passing_score?: number | null
          prerequisites?: string[] | null
          sort_order?: number | null
          title?: string
          updated_at?: string
        }
        Relationships: []
      }
      halodata_alerts: {
        Row: {
          alert_type: string
          auto_resolve_at: string | null
          created_at: string
          description: string
          entity_id: string | null
          entity_type: string
          id: string
          is_read: boolean
          is_resolved: boolean
          notification_channels: string[] | null
          recipients: string[]
          resolved_at: string | null
          resolved_by: string | null
          severity: string
          title: string
          trigger_conditions: Json
          updated_at: string
        }
        Insert: {
          alert_type: string
          auto_resolve_at?: string | null
          created_at?: string
          description: string
          entity_id?: string | null
          entity_type: string
          id?: string
          is_read?: boolean
          is_resolved?: boolean
          notification_channels?: string[] | null
          recipients: string[]
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          title: string
          trigger_conditions: Json
          updated_at?: string
        }
        Update: {
          alert_type?: string
          auto_resolve_at?: string | null
          created_at?: string
          description?: string
          entity_id?: string | null
          entity_type?: string
          id?: string
          is_read?: boolean
          is_resolved?: boolean
          notification_channels?: string[] | null
          recipients?: string[]
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          title?: string
          trigger_conditions?: Json
          updated_at?: string
        }
        Relationships: []
      }
      halodata_client_health: {
        Row: {
          assessment_date: string
          client_id: string
          cost_to_serve: number | null
          created_at: string
          error_rate: number | null
          health_score: number
          id: string
          last_activity_date: string | null
          late_submission_count: number | null
          profit_margin: number | null
          profitability_score: number
          revenue_trend: string | null
          risk_factors: Json | null
          risk_level: string
          updated_at: string
          volatility_score: number | null
        }
        Insert: {
          assessment_date?: string
          client_id: string
          cost_to_serve?: number | null
          created_at?: string
          error_rate?: number | null
          health_score: number
          id?: string
          last_activity_date?: string | null
          late_submission_count?: number | null
          profit_margin?: number | null
          profitability_score: number
          revenue_trend?: string | null
          risk_factors?: Json | null
          risk_level?: string
          updated_at?: string
          volatility_score?: number | null
        }
        Update: {
          assessment_date?: string
          client_id?: string
          cost_to_serve?: number | null
          created_at?: string
          error_rate?: number | null
          health_score?: number
          id?: string
          last_activity_date?: string | null
          late_submission_count?: number | null
          profit_margin?: number | null
          profitability_score?: number
          revenue_trend?: string | null
          risk_factors?: Json | null
          risk_level?: string
          updated_at?: string
          volatility_score?: number | null
        }
        Relationships: []
      }
      halodata_compliance_status: {
        Row: {
          client_id: string
          compliance_status: string
          created_at: string
          days_overdue: number | null
          id: string
          jurisdiction: string
          last_filing_date: string | null
          next_due_date: string | null
          notes: string | null
          penalty_amount: number | null
          regulation_type: string
          risk_score: number
          updated_at: string
        }
        Insert: {
          client_id: string
          compliance_status: string
          created_at?: string
          days_overdue?: number | null
          id?: string
          jurisdiction: string
          last_filing_date?: string | null
          next_due_date?: string | null
          notes?: string | null
          penalty_amount?: number | null
          regulation_type: string
          risk_score: number
          updated_at?: string
        }
        Update: {
          client_id?: string
          compliance_status?: string
          created_at?: string
          days_overdue?: number | null
          id?: string
          jurisdiction?: string
          last_filing_date?: string | null
          next_due_date?: string | null
          notes?: string | null
          penalty_amount?: number | null
          regulation_type?: string
          risk_score?: number
          updated_at?: string
        }
        Relationships: []
      }
      halodata_metrics: {
        Row: {
          created_at: string
          date_recorded: string
          dimensions: Json | null
          id: string
          metadata: Json | null
          metric_category: string
          metric_name: string
          metric_unit: string | null
          metric_value: number
          time_period: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          date_recorded?: string
          dimensions?: Json | null
          id?: string
          metadata?: Json | null
          metric_category: string
          metric_name: string
          metric_unit?: string | null
          metric_value: number
          time_period: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          date_recorded?: string
          dimensions?: Json | null
          id?: string
          metadata?: Json | null
          metric_category?: string
          metric_name?: string
          metric_unit?: string | null
          metric_value?: number
          time_period?: string
          updated_at?: string
        }
        Relationships: []
      }
      halodata_permissions: {
        Row: {
          created_at: string
          expires_at: string | null
          granted_by: string
          id: string
          is_active: boolean
          permission_type: string
          scope_type: string
          scope_values: Json | null
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          expires_at?: string | null
          granted_by: string
          id?: string
          is_active?: boolean
          permission_type: string
          scope_type?: string
          scope_values?: Json | null
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          expires_at?: string | null
          granted_by?: string
          id?: string
          is_active?: boolean
          permission_type?: string
          scope_type?: string
          scope_values?: Json | null
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      halodata_predictions: {
        Row: {
          confidence_level: number
          created_at: string
          entity_id: string
          entity_type: string
          explanation: Json | null
          id: string
          input_features: Json
          model_version: string
          prediction_date: string
          prediction_type: string
          prediction_value: number
          status: string | null
          updated_at: string
          valid_until: string | null
        }
        Insert: {
          confidence_level: number
          created_at?: string
          entity_id: string
          entity_type: string
          explanation?: Json | null
          id?: string
          input_features: Json
          model_version: string
          prediction_date: string
          prediction_type: string
          prediction_value: number
          status?: string | null
          updated_at?: string
          valid_until?: string | null
        }
        Update: {
          confidence_level?: number
          created_at?: string
          entity_id?: string
          entity_type?: string
          explanation?: Json | null
          id?: string
          input_features?: Json
          model_version?: string
          prediction_date?: string
          prediction_type?: string
          prediction_value?: number
          status?: string | null
          updated_at?: string
          valid_until?: string | null
        }
        Relationships: []
      }
      halodata_sales_pipeline: {
        Row: {
          activities_count: number | null
          actual_close_date: string | null
          broker_id: string | null
          created_at: string
          estimated_value: number | null
          expected_close_date: string | null
          id: string
          industry: string | null
          last_activity_date: string | null
          lead_score: number | null
          opportunity_id: string | null
          probability: number | null
          prospect_name: string
          region: string | null
          sales_rep_id: string | null
          source_channel: string | null
          stage: string
          updated_at: string
        }
        Insert: {
          activities_count?: number | null
          actual_close_date?: string | null
          broker_id?: string | null
          created_at?: string
          estimated_value?: number | null
          expected_close_date?: string | null
          id?: string
          industry?: string | null
          last_activity_date?: string | null
          lead_score?: number | null
          opportunity_id?: string | null
          probability?: number | null
          prospect_name: string
          region?: string | null
          sales_rep_id?: string | null
          source_channel?: string | null
          stage: string
          updated_at?: string
        }
        Update: {
          activities_count?: number | null
          actual_close_date?: string | null
          broker_id?: string | null
          created_at?: string
          estimated_value?: number | null
          expected_close_date?: string | null
          id?: string
          industry?: string | null
          last_activity_date?: string | null
          lead_score?: number | null
          opportunity_id?: string | null
          probability?: number | null
          prospect_name?: string
          region?: string | null
          sales_rep_id?: string | null
          source_channel?: string | null
          stage?: string
          updated_at?: string
        }
        Relationships: []
      }
      halodata_scheduled_reports: {
        Row: {
          created_at: string
          created_by: string
          filters: Json | null
          format: string
          id: string
          is_active: boolean
          last_generated_at: string | null
          next_generation_at: string | null
          recipients: string[]
          report_name: string
          report_type: string
          schedule_day_of_month: number | null
          schedule_day_of_week: number | null
          schedule_frequency: string
          schedule_time: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by: string
          filters?: Json | null
          format?: string
          id?: string
          is_active?: boolean
          last_generated_at?: string | null
          next_generation_at?: string | null
          recipients: string[]
          report_name: string
          report_type: string
          schedule_day_of_month?: number | null
          schedule_day_of_week?: number | null
          schedule_frequency: string
          schedule_time?: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string
          filters?: Json | null
          format?: string
          id?: string
          is_active?: boolean
          last_generated_at?: string | null
          next_generation_at?: string | null
          recipients?: string[]
          report_name?: string
          report_type?: string
          schedule_day_of_month?: number | null
          schedule_day_of_week?: number | null
          schedule_frequency?: string
          schedule_time?: string
          updated_at?: string
        }
        Relationships: []
      }
      halofiling_alerts: {
        Row: {
          alert_type: string
          company_id: string
          context_data: Json
          created_at: string
          id: string
          is_resolved: boolean
          message: string
          related_id: string | null
          related_table: string | null
          resolved_at: string | null
          resolved_by: string | null
          severity: string
          title: string
          updated_at: string
        }
        Insert: {
          alert_type: string
          company_id: string
          context_data?: Json
          created_at?: string
          id?: string
          is_resolved?: boolean
          message: string
          related_id?: string | null
          related_table?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          title: string
          updated_at?: string
        }
        Update: {
          alert_type?: string
          company_id?: string
          context_data?: Json
          created_at?: string
          id?: string
          is_resolved?: boolean
          message?: string
          related_id?: string | null
          related_table?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halofiling_alerts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halofiling_amendments: {
        Row: {
          amended_submission_id: string | null
          amendment_reason: string
          changes_summary: Json
          company_id: string
          created_at: string
          created_by: string | null
          id: string
          original_submission_id: string
          updated_at: string
        }
        Insert: {
          amended_submission_id?: string | null
          amendment_reason: string
          changes_summary: Json
          company_id: string
          created_at?: string
          created_by?: string | null
          id?: string
          original_submission_id: string
          updated_at?: string
        }
        Update: {
          amended_submission_id?: string | null
          amendment_reason?: string
          changes_summary?: Json
          company_id?: string
          created_at?: string
          created_by?: string | null
          id?: string
          original_submission_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halofiling_amendments_amended_submission_id_fkey"
            columns: ["amended_submission_id"]
            isOneToOne: false
            referencedRelation: "halofiling_submissions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halofiling_amendments_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halofiling_amendments_original_submission_id_fkey"
            columns: ["original_submission_id"]
            isOneToOne: false
            referencedRelation: "halofiling_submissions"
            referencedColumns: ["id"]
          },
        ]
      }
      halofiling_form_templates: {
        Row: {
          created_at: string
          effective_date: string
          expires_date: string | null
          form_type: Database["public"]["Enums"]["form_type"]
          form_version: string
          id: string
          is_active: boolean
          jurisdiction: string
          template_data: Json
          updated_at: string
          validation_rules: Json
        }
        Insert: {
          created_at?: string
          effective_date: string
          expires_date?: string | null
          form_type: Database["public"]["Enums"]["form_type"]
          form_version: string
          id?: string
          is_active?: boolean
          jurisdiction: string
          template_data: Json
          updated_at?: string
          validation_rules?: Json
        }
        Update: {
          created_at?: string
          effective_date?: string
          expires_date?: string | null
          form_type?: Database["public"]["Enums"]["form_type"]
          form_version?: string
          id?: string
          is_active?: boolean
          jurisdiction?: string
          template_data?: Json
          updated_at?: string
          validation_rules?: Json
        }
        Relationships: []
      }
      halofiling_liabilities: {
        Row: {
          adjustments: number
          calculated_amount: number
          calculation_data: Json
          calculation_date: string
          company_id: string
          created_at: string
          created_by: string | null
          final_amount: number
          id: string
          liability_type: Database["public"]["Enums"]["liability_type"]
          schedule_id: string
          updated_at: string
        }
        Insert: {
          adjustments?: number
          calculated_amount?: number
          calculation_data?: Json
          calculation_date?: string
          company_id: string
          created_at?: string
          created_by?: string | null
          final_amount?: number
          id?: string
          liability_type: Database["public"]["Enums"]["liability_type"]
          schedule_id: string
          updated_at?: string
        }
        Update: {
          adjustments?: number
          calculated_amount?: number
          calculation_data?: Json
          calculation_date?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          final_amount?: number
          id?: string
          liability_type?: Database["public"]["Enums"]["liability_type"]
          schedule_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halofiling_liabilities_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halofiling_liabilities_schedule_id_fkey"
            columns: ["schedule_id"]
            isOneToOne: false
            referencedRelation: "halofiling_schedules"
            referencedColumns: ["id"]
          },
        ]
      }
      halofiling_payments: {
        Row: {
          amount: number
          company_id: string
          confirmation_number: string | null
          created_at: string
          created_by: string | null
          external_reference: string | null
          id: string
          payment_data: Json
          payment_date: string
          payment_method: Database["public"]["Enums"]["filing_payment_method"]
          status: string
          submission_id: string
          updated_at: string
        }
        Insert: {
          amount: number
          company_id: string
          confirmation_number?: string | null
          created_at?: string
          created_by?: string | null
          external_reference?: string | null
          id?: string
          payment_data?: Json
          payment_date: string
          payment_method: Database["public"]["Enums"]["filing_payment_method"]
          status?: string
          submission_id: string
          updated_at?: string
        }
        Update: {
          amount?: number
          company_id?: string
          confirmation_number?: string | null
          created_at?: string
          created_by?: string | null
          external_reference?: string | null
          id?: string
          payment_data?: Json
          payment_date?: string
          payment_method?: Database["public"]["Enums"]["filing_payment_method"]
          status?: string
          submission_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halofiling_payments_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halofiling_payments_submission_id_fkey"
            columns: ["submission_id"]
            isOneToOne: false
            referencedRelation: "halofiling_submissions"
            referencedColumns: ["id"]
          },
        ]
      }
      halofiling_schedules: {
        Row: {
          auto_file: boolean
          company_id: string
          created_at: string
          due_date: string
          filing_frequency: string
          filing_period: string
          filing_year: number
          form_type: Database["public"]["Enums"]["form_type"]
          id: string
          jurisdiction: string
          reminder_sent_at: string | null
          status: Database["public"]["Enums"]["filing_status"]
          updated_at: string
        }
        Insert: {
          auto_file?: boolean
          company_id: string
          created_at?: string
          due_date: string
          filing_frequency: string
          filing_period: string
          filing_year: number
          form_type: Database["public"]["Enums"]["form_type"]
          id?: string
          jurisdiction: string
          reminder_sent_at?: string | null
          status?: Database["public"]["Enums"]["filing_status"]
          updated_at?: string
        }
        Update: {
          auto_file?: boolean
          company_id?: string
          created_at?: string
          due_date?: string
          filing_frequency?: string
          filing_period?: string
          filing_year?: number
          form_type?: Database["public"]["Enums"]["form_type"]
          id?: string
          jurisdiction?: string
          reminder_sent_at?: string | null
          status?: Database["public"]["Enums"]["filing_status"]
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halofiling_schedules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halofiling_submissions: {
        Row: {
          accepted_at: string | null
          company_id: string
          confirmation_number: string | null
          created_at: string
          created_by: string | null
          form_data: Json
          form_type: Database["public"]["Enums"]["form_type"]
          id: string
          payment_amount: number | null
          payment_due_date: string | null
          payment_required: boolean
          rejected_at: string | null
          rejection_reason: string | null
          schedule_id: string
          status: Database["public"]["Enums"]["filing_status"]
          submission_id: string | null
          submitted_at: string | null
          updated_at: string
        }
        Insert: {
          accepted_at?: string | null
          company_id: string
          confirmation_number?: string | null
          created_at?: string
          created_by?: string | null
          form_data: Json
          form_type: Database["public"]["Enums"]["form_type"]
          id?: string
          payment_amount?: number | null
          payment_due_date?: string | null
          payment_required?: boolean
          rejected_at?: string | null
          rejection_reason?: string | null
          schedule_id: string
          status?: Database["public"]["Enums"]["filing_status"]
          submission_id?: string | null
          submitted_at?: string | null
          updated_at?: string
        }
        Update: {
          accepted_at?: string | null
          company_id?: string
          confirmation_number?: string | null
          created_at?: string
          created_by?: string | null
          form_data?: Json
          form_type?: Database["public"]["Enums"]["form_type"]
          id?: string
          payment_amount?: number | null
          payment_due_date?: string | null
          payment_required?: boolean
          rejected_at?: string | null
          rejection_reason?: string | null
          schedule_id?: string
          status?: Database["public"]["Enums"]["filing_status"]
          submission_id?: string | null
          submitted_at?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halofiling_submissions_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halofiling_submissions_schedule_id_fkey"
            columns: ["schedule_id"]
            isOneToOne: false
            referencedRelation: "halofiling_schedules"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_chat_messages: {
        Row: {
          content: string
          created_at: string
          id: string
          message_type: string
          metadata: Json | null
          session_id: string
        }
        Insert: {
          content: string
          created_at?: string
          id?: string
          message_type: string
          metadata?: Json | null
          session_id: string
        }
        Update: {
          content?: string
          created_at?: string
          id?: string
          message_type?: string
          metadata?: Json | null
          session_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "halome_chat_messages_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "halome_chat_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_chat_sessions: {
        Row: {
          context_type: string | null
          created_at: string
          employee_id: string
          id: string
          is_active: boolean
          session_title: string | null
          updated_at: string
        }
        Insert: {
          context_type?: string | null
          created_at?: string
          employee_id: string
          id?: string
          is_active?: boolean
          session_title?: string | null
          updated_at?: string
        }
        Update: {
          context_type?: string | null
          created_at?: string
          employee_id?: string
          id?: string
          is_active?: boolean
          session_title?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halome_chat_sessions_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_employee_bank_accounts: {
        Row: {
          account_nickname: string
          account_number_encrypted: string
          account_number_last_four: string
          account_type: string
          allocation_type: string
          allocation_value: number
          bank_name: string
          created_at: string
          employee_id: string
          id: string
          is_active: boolean
          is_primary: boolean
          priority_order: number
          routing_number: string
          updated_at: string
          verification_attempts: number | null
          verification_status: string
        }
        Insert: {
          account_nickname: string
          account_number_encrypted: string
          account_number_last_four: string
          account_type: string
          allocation_type?: string
          allocation_value?: number
          bank_name: string
          created_at?: string
          employee_id: string
          id?: string
          is_active?: boolean
          is_primary?: boolean
          priority_order?: number
          routing_number: string
          updated_at?: string
          verification_attempts?: number | null
          verification_status?: string
        }
        Update: {
          account_nickname?: string
          account_number_encrypted?: string
          account_number_last_four?: string
          account_type?: string
          allocation_type?: string
          allocation_value?: number
          bank_name?: string
          created_at?: string
          employee_id?: string
          id?: string
          is_active?: boolean
          is_primary?: boolean
          priority_order?: number
          routing_number?: string
          updated_at?: string
          verification_attempts?: number | null
          verification_status?: string
        }
        Relationships: [
          {
            foreignKeyName: "halome_employee_bank_accounts_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_employee_profiles: {
        Row: {
          biometric_enabled: boolean | null
          company_id: string
          created_at: string
          date_of_birth: string | null
          department: string | null
          email: string
          employee_id: string
          employment_status: string
          first_name: string
          hire_date: string
          id: string
          job_title: string | null
          last_login: string | null
          last_name: string
          manager_id: string | null
          notification_preferences: Json | null
          phone: string | null
          pin_hash: string | null
          preferred_language: string | null
          profile_picture_url: string | null
          timezone: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          biometric_enabled?: boolean | null
          company_id: string
          created_at?: string
          date_of_birth?: string | null
          department?: string | null
          email: string
          employee_id: string
          employment_status?: string
          first_name: string
          hire_date: string
          id?: string
          job_title?: string | null
          last_login?: string | null
          last_name: string
          manager_id?: string | null
          notification_preferences?: Json | null
          phone?: string | null
          pin_hash?: string | null
          preferred_language?: string | null
          profile_picture_url?: string | null
          timezone?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          biometric_enabled?: boolean | null
          company_id?: string
          created_at?: string
          date_of_birth?: string | null
          department?: string | null
          email?: string
          employee_id?: string
          employment_status?: string
          first_name?: string
          hire_date?: string
          id?: string
          job_title?: string | null
          last_login?: string | null
          last_name?: string
          manager_id?: string | null
          notification_preferences?: Json | null
          phone?: string | null
          pin_hash?: string | null
          preferred_language?: string | null
          profile_picture_url?: string | null
          timezone?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      halome_insight_cards: {
        Row: {
          action_text: string | null
          action_url: string | null
          card_type: string
          created_at: string
          data: Json
          description: string
          dismissed_at: string | null
          employee_id: string
          expires_at: string | null
          id: string
          is_dismissed: boolean
          priority_score: number
          title: string
        }
        Insert: {
          action_text?: string | null
          action_url?: string | null
          card_type: string
          created_at?: string
          data?: Json
          description: string
          dismissed_at?: string | null
          employee_id: string
          expires_at?: string | null
          id?: string
          is_dismissed?: boolean
          priority_score?: number
          title: string
        }
        Update: {
          action_text?: string | null
          action_url?: string | null
          card_type?: string
          created_at?: string
          data?: Json
          description?: string
          dismissed_at?: string | null
          employee_id?: string
          expires_at?: string | null
          id?: string
          is_dismissed?: boolean
          priority_score?: number
          title?: string
        }
        Relationships: [
          {
            foreignKeyName: "halome_insight_cards_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_notifications: {
        Row: {
          action_text: string | null
          action_url: string | null
          created_at: string
          data: Json | null
          employee_id: string
          expires_at: string | null
          id: string
          is_read: boolean
          message: string
          notification_type: string
          priority: string
          read_at: string | null
          title: string
        }
        Insert: {
          action_text?: string | null
          action_url?: string | null
          created_at?: string
          data?: Json | null
          employee_id: string
          expires_at?: string | null
          id?: string
          is_read?: boolean
          message: string
          notification_type: string
          priority?: string
          read_at?: string | null
          title: string
        }
        Update: {
          action_text?: string | null
          action_url?: string | null
          created_at?: string
          data?: Json | null
          employee_id?: string
          expires_at?: string | null
          id?: string
          is_read?: boolean
          message?: string
          notification_type?: string
          priority?: string
          read_at?: string | null
          title?: string
        }
        Relationships: [
          {
            foreignKeyName: "halome_notifications_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_pay_stubs: {
        Row: {
          company_id: string
          created_at: string
          deductions_breakdown: Json
          earnings_breakdown: Json
          employee_id: string
          employer_contributions: Json
          gross_pay: number
          hours_breakdown: Json
          id: string
          memo: string | null
          net_pay: number
          pay_date: string
          pay_frequency: string
          pay_period_end: string
          pay_period_start: string
          pdf_url: string | null
          status: string
          taxes_breakdown: Json
          total_deductions: number
          total_taxes: number
          updated_at: string
          ytd_gross: number
          ytd_net: number
          ytd_taxes: number
        }
        Insert: {
          company_id: string
          created_at?: string
          deductions_breakdown?: Json
          earnings_breakdown?: Json
          employee_id: string
          employer_contributions?: Json
          gross_pay?: number
          hours_breakdown?: Json
          id?: string
          memo?: string | null
          net_pay?: number
          pay_date: string
          pay_frequency: string
          pay_period_end: string
          pay_period_start: string
          pdf_url?: string | null
          status?: string
          taxes_breakdown?: Json
          total_deductions?: number
          total_taxes?: number
          updated_at?: string
          ytd_gross?: number
          ytd_net?: number
          ytd_taxes?: number
        }
        Update: {
          company_id?: string
          created_at?: string
          deductions_breakdown?: Json
          earnings_breakdown?: Json
          employee_id?: string
          employer_contributions?: Json
          gross_pay?: number
          hours_breakdown?: Json
          id?: string
          memo?: string | null
          net_pay?: number
          pay_date?: string
          pay_frequency?: string
          pay_period_end?: string
          pay_period_start?: string
          pdf_url?: string | null
          status?: string
          taxes_breakdown?: Json
          total_deductions?: number
          total_taxes?: number
          updated_at?: string
          ytd_gross?: number
          ytd_net?: number
          ytd_taxes?: number
        }
        Relationships: [
          {
            foreignKeyName: "halome_pay_stubs_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_pto_balances: {
        Row: {
          accrual_rate: number
          accrued_this_period: number
          balance_type: string
          created_at: string
          current_balance: number
          effective_date: string
          employee_id: string
          id: string
          max_balance: number | null
          pending_requests: number
          policy_details: Json | null
          updated_at: string
          used_this_period: number
        }
        Insert: {
          accrual_rate?: number
          accrued_this_period?: number
          balance_type: string
          created_at?: string
          current_balance?: number
          effective_date?: string
          employee_id: string
          id?: string
          max_balance?: number | null
          pending_requests?: number
          policy_details?: Json | null
          updated_at?: string
          used_this_period?: number
        }
        Update: {
          accrual_rate?: number
          accrued_this_period?: number
          balance_type?: string
          created_at?: string
          current_balance?: number
          effective_date?: string
          employee_id?: string
          id?: string
          max_balance?: number | null
          pending_requests?: number
          policy_details?: Json | null
          updated_at?: string
          used_this_period?: number
        }
        Relationships: [
          {
            foreignKeyName: "halome_pto_balances_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_pto_requests: {
        Row: {
          approved_at: string | null
          approved_by: string | null
          created_at: string
          employee_id: string
          end_date: string
          id: string
          reason: string | null
          rejection_reason: string | null
          request_type: string
          start_date: string
          status: string
          supporting_documents: Json | null
          total_days: number
          total_hours: number
          updated_at: string
        }
        Insert: {
          approved_at?: string | null
          approved_by?: string | null
          created_at?: string
          employee_id: string
          end_date: string
          id?: string
          reason?: string | null
          rejection_reason?: string | null
          request_type: string
          start_date: string
          status?: string
          supporting_documents?: Json | null
          total_days: number
          total_hours: number
          updated_at?: string
        }
        Update: {
          approved_at?: string | null
          approved_by?: string | null
          created_at?: string
          employee_id?: string
          end_date?: string
          id?: string
          reason?: string | null
          rejection_reason?: string | null
          request_type?: string
          start_date?: string
          status?: string
          supporting_documents?: Json | null
          total_days?: number
          total_hours?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halome_pto_requests_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_security_logs: {
        Row: {
          action_details: string
          action_type: string
          created_at: string
          device_fingerprint: string | null
          employee_id: string
          id: string
          ip_address: unknown | null
          location_data: Json | null
          risk_score: number | null
          success: boolean
          user_agent: string | null
        }
        Insert: {
          action_details: string
          action_type: string
          created_at?: string
          device_fingerprint?: string | null
          employee_id: string
          id?: string
          ip_address?: unknown | null
          location_data?: Json | null
          risk_score?: number | null
          success?: boolean
          user_agent?: string | null
        }
        Update: {
          action_details?: string
          action_type?: string
          created_at?: string
          device_fingerprint?: string | null
          employee_id?: string
          id?: string
          ip_address?: unknown | null
          location_data?: Json | null
          risk_score?: number | null
          success?: boolean
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "halome_security_logs_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_tax_forms: {
        Row: {
          additional_withholding: number | null
          allowances: number | null
          approved_at: string | null
          approved_by: string | null
          created_at: string
          employee_id: string
          exempt_status: boolean | null
          filing_status: string | null
          form_data: Json
          form_type: string
          id: string
          pdf_url: string | null
          signature_data: string | null
          status: string
          submitted_at: string | null
          tax_year: number
          updated_at: string
        }
        Insert: {
          additional_withholding?: number | null
          allowances?: number | null
          approved_at?: string | null
          approved_by?: string | null
          created_at?: string
          employee_id: string
          exempt_status?: boolean | null
          filing_status?: string | null
          form_data?: Json
          form_type: string
          id?: string
          pdf_url?: string | null
          signature_data?: string | null
          status?: string
          submitted_at?: string | null
          tax_year: number
          updated_at?: string
        }
        Update: {
          additional_withholding?: number | null
          allowances?: number | null
          approved_at?: string | null
          approved_by?: string | null
          created_at?: string
          employee_id?: string
          exempt_status?: boolean | null
          filing_status?: string | null
          form_data?: Json
          form_type?: string
          id?: string
          pdf_url?: string | null
          signature_data?: string | null
          status?: string
          submitted_at?: string | null
          tax_year?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halome_tax_forms_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halome_time_entries: {
        Row: {
          approval_status: string
          approved_at: string | null
          approved_by: string | null
          break_end: string | null
          break_start: string | null
          clock_in: string | null
          clock_out: string | null
          created_at: string
          device_info: Json | null
          employee_id: string
          entry_date: string
          entry_type: string
          id: string
          location_lat: number | null
          location_lng: number | null
          notes: string | null
          overtime_hours: number | null
          project_code: string | null
          total_hours: number | null
          updated_at: string
        }
        Insert: {
          approval_status?: string
          approved_at?: string | null
          approved_by?: string | null
          break_end?: string | null
          break_start?: string | null
          clock_in?: string | null
          clock_out?: string | null
          created_at?: string
          device_info?: Json | null
          employee_id: string
          entry_date: string
          entry_type?: string
          id?: string
          location_lat?: number | null
          location_lng?: number | null
          notes?: string | null
          overtime_hours?: number | null
          project_code?: string | null
          total_hours?: number | null
          updated_at?: string
        }
        Update: {
          approval_status?: string
          approved_at?: string | null
          approved_by?: string | null
          break_end?: string | null
          break_start?: string | null
          clock_in?: string | null
          clock_out?: string | null
          created_at?: string
          device_info?: Json | null
          employee_id?: string
          entry_date?: string
          entry_type?: string
          id?: string
          location_lat?: number | null
          location_lng?: number | null
          notes?: string | null
          overtime_hours?: number | null
          project_code?: string | null
          total_hours?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halome_time_entries_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "halome_employee_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_ach_providers: {
        Row: {
          company_id: string
          created_at: string
          daily_limit: number | null
          id: string
          is_active: boolean
          monthly_limit: number | null
          provider_config: Json
          provider_name: string
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          daily_limit?: number | null
          id?: string
          is_active?: boolean
          monthly_limit?: number | null
          provider_config?: Json
          provider_name: string
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          daily_limit?: number | null
          id?: string
          is_active?: boolean
          monthly_limit?: number | null
          provider_config?: Json
          provider_name?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_ach_providers_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_approval_requests: {
        Row: {
          approval_threshold: number
          approved_count: number
          batch_id: string
          company_id: string
          completed_at: string | null
          created_at: string
          expires_at: string | null
          id: string
          request_reason: string | null
          request_type: string
          requested_by: string
          required_approvers: Json
          requires_2fa: boolean
          status: string
          updated_at: string
        }
        Insert: {
          approval_threshold?: number
          approved_count?: number
          batch_id: string
          company_id: string
          completed_at?: string | null
          created_at?: string
          expires_at?: string | null
          id?: string
          request_reason?: string | null
          request_type: string
          requested_by: string
          required_approvers: Json
          requires_2fa?: boolean
          status?: string
          updated_at?: string
        }
        Update: {
          approval_threshold?: number
          approved_count?: number
          batch_id?: string
          company_id?: string
          completed_at?: string | null
          created_at?: string
          expires_at?: string | null
          id?: string
          request_reason?: string | null
          request_type?: string
          requested_by?: string
          required_approvers?: Json
          requires_2fa?: boolean
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_approval_requests_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "halonet_payment_batches"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halonet_approval_requests_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_approvals: {
        Row: {
          approval_request_id: string
          approved_by: string
          comments: string | null
          created_at: string
          decision: string
          id: string
          risk_factors: Json | null
          risk_score: number | null
          two_factor_verified: boolean
        }
        Insert: {
          approval_request_id: string
          approved_by: string
          comments?: string | null
          created_at?: string
          decision: string
          id?: string
          risk_factors?: Json | null
          risk_score?: number | null
          two_factor_verified?: boolean
        }
        Update: {
          approval_request_id?: string
          approved_by?: string
          comments?: string | null
          created_at?: string
          decision?: string
          id?: string
          risk_factors?: Json | null
          risk_score?: number | null
          two_factor_verified?: boolean
        }
        Relationships: [
          {
            foreignKeyName: "halonet_approvals_approval_request_id_fkey"
            columns: ["approval_request_id"]
            isOneToOne: false
            referencedRelation: "halonet_approval_requests"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_garnishment_rules: {
        Row: {
          company_id: string
          created_at: string
          garnishment_type: string
          id: string
          is_active: boolean
          max_amount: number | null
          max_percentage: number | null
          priority: number
          routing_config: Json
          rule_name: string
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          garnishment_type: string
          id?: string
          is_active?: boolean
          max_amount?: number | null
          max_percentage?: number | null
          priority: number
          routing_config: Json
          rule_name: string
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          garnishment_type?: string
          id?: string
          is_active?: boolean
          max_amount?: number | null
          max_percentage?: number | null
          priority?: number
          routing_config?: Json
          rule_name?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_garnishment_rules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_payment_batches: {
        Row: {
          approval_status: string | null
          approval_threshold: number | null
          approved_at: string | null
          approved_by: string | null
          batch_number: string
          batch_type: string
          company_id: string
          confirmed_at: string | null
          created_at: string
          created_by: string
          credit_amount: number
          debit_amount: number
          effective_date: string
          entry_hash: number | null
          id: string
          metadata: Json | null
          nacha_file_content: string | null
          nacha_file_hash: string | null
          provider_batch_id: string | null
          provider_id: string | null
          provider_response: Json | null
          rejected_at: string | null
          rejected_by: string | null
          rejection_reason: string | null
          requires_approval: boolean
          status: string
          submission_status: string | null
          submitted_at: string | null
          submitted_by: string | null
          total_amount: number
          total_count: number
          updated_at: string
        }
        Insert: {
          approval_status?: string | null
          approval_threshold?: number | null
          approved_at?: string | null
          approved_by?: string | null
          batch_number: string
          batch_type: string
          company_id: string
          confirmed_at?: string | null
          created_at?: string
          created_by: string
          credit_amount?: number
          debit_amount?: number
          effective_date: string
          entry_hash?: number | null
          id?: string
          metadata?: Json | null
          nacha_file_content?: string | null
          nacha_file_hash?: string | null
          provider_batch_id?: string | null
          provider_id?: string | null
          provider_response?: Json | null
          rejected_at?: string | null
          rejected_by?: string | null
          rejection_reason?: string | null
          requires_approval?: boolean
          status?: string
          submission_status?: string | null
          submitted_at?: string | null
          submitted_by?: string | null
          total_amount?: number
          total_count?: number
          updated_at?: string
        }
        Update: {
          approval_status?: string | null
          approval_threshold?: number | null
          approved_at?: string | null
          approved_by?: string | null
          batch_number?: string
          batch_type?: string
          company_id?: string
          confirmed_at?: string | null
          created_at?: string
          created_by?: string
          credit_amount?: number
          debit_amount?: number
          effective_date?: string
          entry_hash?: number | null
          id?: string
          metadata?: Json | null
          nacha_file_content?: string | null
          nacha_file_hash?: string | null
          provider_batch_id?: string | null
          provider_id?: string | null
          provider_response?: Json | null
          rejected_at?: string | null
          rejected_by?: string | null
          rejection_reason?: string | null
          requires_approval?: boolean
          status?: string
          submission_status?: string | null
          submitted_at?: string | null
          submitted_by?: string | null
          total_amount?: number
          total_count?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_payment_batches_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halonet_payment_batches_provider_id_fkey"
            columns: ["provider_id"]
            isOneToOne: false
            referencedRelation: "halonet_ach_providers"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_payment_entries: {
        Row: {
          addenda_info: string | null
          amount: number
          batch_id: string
          company_id: string
          court_order_number: string | null
          created_at: string
          currency: string
          employee_id: string | null
          garnishment_id: string | null
          garnishment_priority: number | null
          id: string
          nsf_fee: number | null
          payment_type: string
          provider_transaction_id: string | null
          recipient_account_number: string
          recipient_account_type: string
          recipient_name: string
          recipient_routing_number: string
          return_code: string | null
          return_date: string | null
          return_reason: string | null
          status: string
          trace_number: string | null
          transaction_type: string
          updated_at: string
        }
        Insert: {
          addenda_info?: string | null
          amount: number
          batch_id: string
          company_id: string
          court_order_number?: string | null
          created_at?: string
          currency?: string
          employee_id?: string | null
          garnishment_id?: string | null
          garnishment_priority?: number | null
          id?: string
          nsf_fee?: number | null
          payment_type: string
          provider_transaction_id?: string | null
          recipient_account_number: string
          recipient_account_type: string
          recipient_name: string
          recipient_routing_number: string
          return_code?: string | null
          return_date?: string | null
          return_reason?: string | null
          status?: string
          trace_number?: string | null
          transaction_type: string
          updated_at?: string
        }
        Update: {
          addenda_info?: string | null
          amount?: number
          batch_id?: string
          company_id?: string
          court_order_number?: string | null
          created_at?: string
          currency?: string
          employee_id?: string | null
          garnishment_id?: string | null
          garnishment_priority?: number | null
          id?: string
          nsf_fee?: number | null
          payment_type?: string
          provider_transaction_id?: string | null
          recipient_account_number?: string
          recipient_account_type?: string
          recipient_name?: string
          recipient_routing_number?: string
          return_code?: string | null
          return_date?: string | null
          return_reason?: string | null
          status?: string
          trace_number?: string | null
          transaction_type?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_payment_entries_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "halonet_payment_batches"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halonet_payment_entries_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_payment_history: {
        Row: {
          batch_id: string | null
          change_source: string
          changed_by: string | null
          created_at: string
          entry_id: string | null
          id: string
          metadata: Json | null
          new_status: string
          previous_status: string | null
          provider_response: Json | null
          status_reason: string | null
        }
        Insert: {
          batch_id?: string | null
          change_source: string
          changed_by?: string | null
          created_at?: string
          entry_id?: string | null
          id?: string
          metadata?: Json | null
          new_status: string
          previous_status?: string | null
          provider_response?: Json | null
          status_reason?: string | null
        }
        Update: {
          batch_id?: string | null
          change_source?: string
          changed_by?: string | null
          created_at?: string
          entry_id?: string | null
          id?: string
          metadata?: Json | null
          new_status?: string
          previous_status?: string | null
          provider_response?: Json | null
          status_reason?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "halonet_payment_history_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "halonet_payment_batches"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halonet_payment_history_entry_id_fkey"
            columns: ["entry_id"]
            isOneToOne: false
            referencedRelation: "halonet_payment_entries"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_risk_controls: {
        Row: {
          action_config: Json | null
          action_type: string
          company_id: string
          control_name: string
          control_type: string
          created_at: string
          id: string
          is_active: boolean
          priority: number
          threshold_config: Json
          updated_at: string
        }
        Insert: {
          action_config?: Json | null
          action_type: string
          company_id: string
          control_name: string
          control_type: string
          created_at?: string
          id?: string
          is_active?: boolean
          priority?: number
          threshold_config: Json
          updated_at?: string
        }
        Update: {
          action_config?: Json | null
          action_type?: string
          company_id?: string
          control_name?: string
          control_type?: string
          created_at?: string
          id?: string
          is_active?: boolean
          priority?: number
          threshold_config?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_risk_controls_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_risk_events: {
        Row: {
          batch_id: string | null
          company_id: string
          control_id: string
          created_at: string
          detected_patterns: Json | null
          entry_id: string | null
          event_type: string
          id: string
          resolution_notes: string | null
          resolved_at: string | null
          resolved_by: string | null
          risk_factors: Json
          risk_score: number
          severity: string
          status: string
        }
        Insert: {
          batch_id?: string | null
          company_id: string
          control_id: string
          created_at?: string
          detected_patterns?: Json | null
          entry_id?: string | null
          event_type: string
          id?: string
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          risk_factors: Json
          risk_score: number
          severity: string
          status?: string
        }
        Update: {
          batch_id?: string | null
          company_id?: string
          control_id?: string
          created_at?: string
          detected_patterns?: Json | null
          entry_id?: string | null
          event_type?: string
          id?: string
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          risk_factors?: Json
          risk_score?: number
          severity?: string
          status?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_risk_events_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "halonet_payment_batches"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halonet_risk_events_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halonet_risk_events_control_id_fkey"
            columns: ["control_id"]
            isOneToOne: false
            referencedRelation: "halonet_risk_controls"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halonet_risk_events_entry_id_fkey"
            columns: ["entry_id"]
            isOneToOne: false
            referencedRelation: "halonet_payment_entries"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_webhook_deliveries: {
        Row: {
          created_at: string
          delivered_at: string | null
          delivery_attempt: number
          error_message: string | null
          event_data: Json
          event_type: string
          http_status: number | null
          id: string
          response_body: string | null
          response_headers: Json | null
          scheduled_for: string
          status: string
          webhook_id: string
        }
        Insert: {
          created_at?: string
          delivered_at?: string | null
          delivery_attempt?: number
          error_message?: string | null
          event_data: Json
          event_type: string
          http_status?: number | null
          id?: string
          response_body?: string | null
          response_headers?: Json | null
          scheduled_for?: string
          status?: string
          webhook_id: string
        }
        Update: {
          created_at?: string
          delivered_at?: string | null
          delivery_attempt?: number
          error_message?: string | null
          event_data?: Json
          event_type?: string
          http_status?: number | null
          id?: string
          response_body?: string | null
          response_headers?: Json | null
          scheduled_for?: string
          status?: string
          webhook_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_webhook_deliveries_webhook_id_fkey"
            columns: ["webhook_id"]
            isOneToOne: false
            referencedRelation: "halonet_webhooks"
            referencedColumns: ["id"]
          },
        ]
      }
      halonet_webhooks: {
        Row: {
          company_id: string
          created_at: string
          custom_headers: Json | null
          event_types: string[]
          id: string
          is_active: boolean
          max_retries: number
          retry_delay_seconds: number
          updated_at: string
          webhook_secret: string
          webhook_url: string
        }
        Insert: {
          company_id: string
          created_at?: string
          custom_headers?: Json | null
          event_types: string[]
          id?: string
          is_active?: boolean
          max_retries?: number
          retry_delay_seconds?: number
          updated_at?: string
          webhook_secret: string
          webhook_url: string
        }
        Update: {
          company_id?: string
          created_at?: string
          custom_headers?: Json | null
          event_types?: string[]
          id?: string
          is_active?: boolean
          max_retries?: number
          retry_delay_seconds?: number
          updated_at?: string
          webhook_secret?: string
          webhook_url?: string
        }
        Relationships: [
          {
            foreignKeyName: "halonet_webhooks_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovault_access_logs: {
        Row: {
          access_context: Json | null
          action: string
          company_id: string
          created_at: string
          document_id: string
          id: string
          ip_address: unknown | null
          user_agent: string | null
          user_id: string
        }
        Insert: {
          access_context?: Json | null
          action: string
          company_id: string
          created_at?: string
          document_id: string
          id?: string
          ip_address?: unknown | null
          user_agent?: string | null
          user_id: string
        }
        Update: {
          access_context?: Json | null
          action?: string
          company_id?: string
          created_at?: string
          document_id?: string
          id?: string
          ip_address?: unknown | null
          user_agent?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovault_access_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halovault_access_logs_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "halovault_documents"
            referencedColumns: ["id"]
          },
        ]
      }
      halovault_admin_settings: {
        Row: {
          description: string | null
          id: string
          setting_key: string
          setting_value: Json
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          description?: string | null
          id?: string
          setting_key: string
          setting_value?: Json
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          description?: string | null
          id?: string
          setting_key?: string
          setting_value?: Json
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: []
      }
      halovault_document_permissions: {
        Row: {
          access_level: Database["public"]["Enums"]["vault_access_level"]
          created_at: string
          document_id: string
          expires_at: string | null
          granted_by: string | null
          id: string
          role_name: Database["public"]["Enums"]["halo_role"] | null
          updated_at: string
          user_id: string | null
        }
        Insert: {
          access_level: Database["public"]["Enums"]["vault_access_level"]
          created_at?: string
          document_id: string
          expires_at?: string | null
          granted_by?: string | null
          id?: string
          role_name?: Database["public"]["Enums"]["halo_role"] | null
          updated_at?: string
          user_id?: string | null
        }
        Update: {
          access_level?: Database["public"]["Enums"]["vault_access_level"]
          created_at?: string
          document_id?: string
          expires_at?: string | null
          granted_by?: string | null
          id?: string
          role_name?: Database["public"]["Enums"]["halo_role"] | null
          updated_at?: string
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "halovault_document_permissions_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "halovault_documents"
            referencedColumns: ["id"]
          },
        ]
      }
      halovault_document_versions: {
        Row: {
          changes_summary: string | null
          checksum: string
          created_at: string
          created_by: string | null
          document_id: string
          file_path: string
          file_size: number
          id: string
          version_number: number
        }
        Insert: {
          changes_summary?: string | null
          checksum: string
          created_at?: string
          created_by?: string | null
          document_id: string
          file_path: string
          file_size: number
          id?: string
          version_number: number
        }
        Update: {
          changes_summary?: string | null
          checksum?: string
          created_at?: string
          created_by?: string | null
          document_id?: string
          file_path?: string
          file_size?: number
          id?: string
          version_number?: number
        }
        Relationships: [
          {
            foreignKeyName: "halovault_document_versions_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "halovault_documents"
            referencedColumns: ["id"]
          },
        ]
      }
      halovault_documents: {
        Row: {
          checksum: string
          company_id: string
          created_at: string
          created_by: string | null
          description: string | null
          document_date: string
          document_type: Database["public"]["Enums"]["vault_document_type"]
          encryption_key_id: string
          file_name: string
          file_path: string
          file_size: number
          id: string
          metadata: Json
          mime_type: string
          preview_url: string | null
          retention_expires_at: string
          retention_status: Database["public"]["Enums"]["vault_retention_status"]
          retention_years: number
          tags: string[] | null
          thumbnail_url: string | null
          title: string
          updated_at: string
        }
        Insert: {
          checksum: string
          company_id: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          document_date: string
          document_type: Database["public"]["Enums"]["vault_document_type"]
          encryption_key_id: string
          file_name: string
          file_path: string
          file_size: number
          id?: string
          metadata?: Json
          mime_type: string
          preview_url?: string | null
          retention_expires_at: string
          retention_status?: Database["public"]["Enums"]["vault_retention_status"]
          retention_years?: number
          tags?: string[] | null
          thumbnail_url?: string | null
          title: string
          updated_at?: string
        }
        Update: {
          checksum?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          document_date?: string
          document_type?: Database["public"]["Enums"]["vault_document_type"]
          encryption_key_id?: string
          file_name?: string
          file_path?: string
          file_size?: number
          id?: string
          metadata?: Json
          mime_type?: string
          preview_url?: string | null
          retention_expires_at?: string
          retention_status?: Database["public"]["Enums"]["vault_retention_status"]
          retention_years?: number
          tags?: string[] | null
          thumbnail_url?: string | null
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovault_documents_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovault_entity_relationships: {
        Row: {
          created_at: string
          created_by: string | null
          document_id: string
          entity_id: string
          entity_type: string
          id: string
          relationship_type: string | null
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          document_id: string
          entity_id: string
          entity_type: string
          id?: string
          relationship_type?: string | null
        }
        Update: {
          created_at?: string
          created_by?: string | null
          document_id?: string
          entity_id?: string
          entity_type?: string
          id?: string
          relationship_type?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "halovault_entity_relationships_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "halovault_documents"
            referencedColumns: ["id"]
          },
        ]
      }
      halovault_file_tags: {
        Row: {
          created_at: string
          created_by: string | null
          document_id: string
          id: string
          tag_category: string | null
          tag_name: string
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          document_id: string
          id?: string
          tag_category?: string | null
          tag_name: string
        }
        Update: {
          created_at?: string
          created_by?: string | null
          document_id?: string
          id?: string
          tag_category?: string | null
          tag_name?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovault_file_tags_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "halovault_documents"
            referencedColumns: ["id"]
          },
        ]
      }
      halovault_retention_policies: {
        Row: {
          auto_destroy: boolean
          company_id: string
          created_at: string
          created_by: string | null
          document_type: Database["public"]["Enums"]["vault_document_type"]
          effective_date: string
          id: string
          jurisdiction: string
          policy_description: string | null
          retention_years: number
          updated_at: string
        }
        Insert: {
          auto_destroy?: boolean
          company_id: string
          created_at?: string
          created_by?: string | null
          document_type: Database["public"]["Enums"]["vault_document_type"]
          effective_date: string
          id?: string
          jurisdiction?: string
          policy_description?: string | null
          retention_years: number
          updated_at?: string
        }
        Update: {
          auto_destroy?: boolean
          company_id?: string
          created_at?: string
          created_by?: string | null
          document_type?: Database["public"]["Enums"]["vault_document_type"]
          effective_date?: string
          id?: string
          jurisdiction?: string
          policy_description?: string | null
          retention_years?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovault_retention_policies_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovault_search_index: {
        Row: {
          content_text: string
          document_id: string
          id: string
          indexed_at: string
          language: string
          search_vector: unknown | null
        }
        Insert: {
          content_text: string
          document_id: string
          id?: string
          indexed_at?: string
          language?: string
          search_vector?: unknown | null
        }
        Update: {
          content_text?: string
          document_id?: string
          id?: string
          indexed_at?: string
          language?: string
          search_vector?: unknown | null
        }
        Relationships: [
          {
            foreignKeyName: "halovault_search_index_document_id_fkey"
            columns: ["document_id"]
            isOneToOne: false
            referencedRelation: "halovault_documents"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_anomalies: {
        Row: {
          actual_value: number | null
          anomaly_score: number
          anomaly_type: Database["public"]["Enums"]["anomaly_type"]
          company_id: string
          created_at: string
          description: string
          detected_at: string
          detection_context: Json
          expected_value: number | null
          id: string
          is_resolved: boolean
          resolution_notes: string | null
          resolved_at: string | null
          resolved_by: string | null
          root_cause_analysis: Json | null
          severity: Database["public"]["Enums"]["anomaly_severity"]
          threshold_breached: number | null
          title: string
          updated_at: string
        }
        Insert: {
          actual_value?: number | null
          anomaly_score: number
          anomaly_type: Database["public"]["Enums"]["anomaly_type"]
          company_id: string
          created_at?: string
          description: string
          detected_at?: string
          detection_context?: Json
          expected_value?: number | null
          id?: string
          is_resolved?: boolean
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          root_cause_analysis?: Json | null
          severity: Database["public"]["Enums"]["anomaly_severity"]
          threshold_breached?: number | null
          title: string
          updated_at?: string
        }
        Update: {
          actual_value?: number | null
          anomaly_score?: number
          anomaly_type?: Database["public"]["Enums"]["anomaly_type"]
          company_id?: string
          created_at?: string
          description?: string
          detected_at?: string
          detection_context?: Json
          expected_value?: number | null
          id?: string
          is_resolved?: boolean
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          root_cause_analysis?: Json | null
          severity?: Database["public"]["Enums"]["anomaly_severity"]
          threshold_breached?: number | null
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovision_anomalies_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_dashboards: {
        Row: {
          access_permissions: Json
          company_id: string
          created_at: string
          created_by: string | null
          dashboard_name: string
          description: string | null
          filters_config: Json
          id: string
          is_default: boolean
          is_public: boolean
          layout_config: Json
          refresh_frequency: number
          updated_at: string
        }
        Insert: {
          access_permissions?: Json
          company_id: string
          created_at?: string
          created_by?: string | null
          dashboard_name: string
          description?: string | null
          filters_config?: Json
          id?: string
          is_default?: boolean
          is_public?: boolean
          layout_config: Json
          refresh_frequency?: number
          updated_at?: string
        }
        Update: {
          access_permissions?: Json
          company_id?: string
          created_at?: string
          created_by?: string | null
          dashboard_name?: string
          description?: string | null
          filters_config?: Json
          id?: string
          is_default?: boolean
          is_public?: boolean
          layout_config?: Json
          refresh_frequency?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovision_dashboards_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_forecast_models: {
        Row: {
          accuracy_metrics: Json
          algorithm_config: Json
          company_id: string
          created_at: string
          created_by: string | null
          id: string
          is_active: boolean
          last_trained_at: string | null
          model_name: string
          model_type: Database["public"]["Enums"]["forecast_type"]
          training_data_period: unknown
          updated_at: string
        }
        Insert: {
          accuracy_metrics?: Json
          algorithm_config?: Json
          company_id: string
          created_at?: string
          created_by?: string | null
          id?: string
          is_active?: boolean
          last_trained_at?: string | null
          model_name: string
          model_type: Database["public"]["Enums"]["forecast_type"]
          training_data_period?: unknown
          updated_at?: string
        }
        Update: {
          accuracy_metrics?: Json
          algorithm_config?: Json
          company_id?: string
          created_at?: string
          created_by?: string | null
          id?: string
          is_active?: boolean
          last_trained_at?: string | null
          model_name?: string
          model_type?: Database["public"]["Enums"]["forecast_type"]
          training_data_period?: unknown
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovision_forecast_models_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_forecasts: {
        Row: {
          accuracy_score: number | null
          company_id: string
          confidence_intervals: Json
          created_at: string
          created_by: string | null
          forecast_data: Json
          forecast_name: string
          forecast_period_end: string
          forecast_period_start: string
          forecast_type: Database["public"]["Enums"]["forecast_type"]
          generated_at: string
          id: string
          model_id: string
          scenario_parameters: Json
          updated_at: string
        }
        Insert: {
          accuracy_score?: number | null
          company_id: string
          confidence_intervals?: Json
          created_at?: string
          created_by?: string | null
          forecast_data: Json
          forecast_name: string
          forecast_period_end: string
          forecast_period_start: string
          forecast_type: Database["public"]["Enums"]["forecast_type"]
          generated_at?: string
          id?: string
          model_id: string
          scenario_parameters?: Json
          updated_at?: string
        }
        Update: {
          accuracy_score?: number | null
          company_id?: string
          confidence_intervals?: Json
          created_at?: string
          created_by?: string | null
          forecast_data?: Json
          forecast_name?: string
          forecast_period_end?: string
          forecast_period_start?: string
          forecast_type?: Database["public"]["Enums"]["forecast_type"]
          generated_at?: string
          id?: string
          model_id?: string
          scenario_parameters?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovision_forecasts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halovision_forecasts_model_id_fkey"
            columns: ["model_id"]
            isOneToOne: false
            referencedRelation: "halovision_forecast_models"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_insights: {
        Row: {
          acknowledged_at: string | null
          acknowledged_by: string | null
          company_id: string
          confidence_score: number | null
          created_at: string
          data_sources: Json
          expires_at: string | null
          generated_by_ai: boolean
          id: string
          insight_content: string
          insight_title: string
          insight_type: string
          is_acknowledged: boolean
          is_actionable: boolean
          priority: Database["public"]["Enums"]["insight_priority"]
          recommended_actions: Json
          supporting_evidence: Json
          updated_at: string
        }
        Insert: {
          acknowledged_at?: string | null
          acknowledged_by?: string | null
          company_id: string
          confidence_score?: number | null
          created_at?: string
          data_sources: Json
          expires_at?: string | null
          generated_by_ai?: boolean
          id?: string
          insight_content: string
          insight_title: string
          insight_type: string
          is_acknowledged?: boolean
          is_actionable?: boolean
          priority?: Database["public"]["Enums"]["insight_priority"]
          recommended_actions?: Json
          supporting_evidence?: Json
          updated_at?: string
        }
        Update: {
          acknowledged_at?: string | null
          acknowledged_by?: string | null
          company_id?: string
          confidence_score?: number | null
          created_at?: string
          data_sources?: Json
          expires_at?: string | null
          generated_by_ai?: boolean
          id?: string
          insight_content?: string
          insight_title?: string
          insight_type?: string
          is_acknowledged?: boolean
          is_actionable?: boolean
          priority?: Database["public"]["Enums"]["insight_priority"]
          recommended_actions?: Json
          supporting_evidence?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovision_insights_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_integrations: {
        Row: {
          company_id: string
          created_at: string
          error_message: string | null
          id: string
          integration_type: string
          payload: Json
          processed_at: string | null
          processing_result: Json | null
          processing_status: string
          source_module: string
        }
        Insert: {
          company_id: string
          created_at?: string
          error_message?: string | null
          id?: string
          integration_type: string
          payload: Json
          processed_at?: string | null
          processing_result?: Json | null
          processing_status?: string
          source_module: string
        }
        Update: {
          company_id?: string
          created_at?: string
          error_message?: string | null
          id?: string
          integration_type?: string
          payload?: Json
          processed_at?: string | null
          processing_result?: Json | null
          processing_status?: string
          source_module?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovision_integrations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_performance_metrics: {
        Row: {
          company_id: string
          context_data: Json
          created_at: string
          id: string
          metric_category: string
          metric_name: string
          metric_unit: string | null
          metric_value: number
          recorded_at: string
          time_period: unknown | null
        }
        Insert: {
          company_id: string
          context_data?: Json
          created_at?: string
          id?: string
          metric_category: string
          metric_name: string
          metric_unit?: string | null
          metric_value: number
          recorded_at?: string
          time_period?: unknown | null
        }
        Update: {
          company_id?: string
          context_data?: Json
          created_at?: string
          id?: string
          metric_category?: string
          metric_name?: string
          metric_unit?: string | null
          metric_value?: number
          recorded_at?: string
          time_period?: unknown | null
        }
        Relationships: [
          {
            foreignKeyName: "halovision_performance_metrics_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_simulations: {
        Row: {
          base_forecast_id: string | null
          company_id: string
          completed_at: string | null
          created_at: string
          created_by: string | null
          description: string | null
          execution_time_ms: number | null
          id: string
          simulation_name: string
          simulation_parameters: Json
          simulation_results: Json | null
          started_at: string | null
          status: Database["public"]["Enums"]["simulation_status"]
          updated_at: string
        }
        Insert: {
          base_forecast_id?: string | null
          company_id: string
          completed_at?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          execution_time_ms?: number | null
          id?: string
          simulation_name: string
          simulation_parameters: Json
          simulation_results?: Json | null
          started_at?: string | null
          status?: Database["public"]["Enums"]["simulation_status"]
          updated_at?: string
        }
        Update: {
          base_forecast_id?: string | null
          company_id?: string
          completed_at?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          execution_time_ms?: number | null
          id?: string
          simulation_name?: string
          simulation_parameters?: Json
          simulation_results?: Json | null
          started_at?: string | null
          status?: Database["public"]["Enums"]["simulation_status"]
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "halovision_simulations_base_forecast_id_fkey"
            columns: ["base_forecast_id"]
            isOneToOne: false
            referencedRelation: "halovision_forecasts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halovision_simulations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      halovision_visualizations: {
        Row: {
          chart_config: Json
          company_id: string
          created_at: string
          created_by: string | null
          dashboard_id: string | null
          data_source_config: Json
          height: number
          id: string
          is_interactive: boolean
          position_x: number
          position_y: number
          refresh_interval: number
          updated_at: string
          visualization_name: string
          visualization_type: Database["public"]["Enums"]["visualization_type"]
          width: number
        }
        Insert: {
          chart_config: Json
          company_id: string
          created_at?: string
          created_by?: string | null
          dashboard_id?: string | null
          data_source_config: Json
          height?: number
          id?: string
          is_interactive?: boolean
          position_x?: number
          position_y?: number
          refresh_interval?: number
          updated_at?: string
          visualization_name: string
          visualization_type: Database["public"]["Enums"]["visualization_type"]
          width?: number
        }
        Update: {
          chart_config?: Json
          company_id?: string
          created_at?: string
          created_by?: string | null
          dashboard_id?: string | null
          data_source_config?: Json
          height?: number
          id?: string
          is_interactive?: boolean
          position_x?: number
          position_y?: number
          refresh_interval?: number
          updated_at?: string
          visualization_name?: string
          visualization_type?: Database["public"]["Enums"]["visualization_type"]
          width?: number
        }
        Relationships: [
          {
            foreignKeyName: "halovision_visualizations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "halovision_visualizations_dashboard_id_fkey"
            columns: ["dashboard_id"]
            isOneToOne: false
            referencedRelation: "halovision_dashboards"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_ai_conversations: {
        Row: {
          company_id: string
          conversation_id: string
          created_at: string
          escalated: boolean
          escalated_at: string | null
          escalated_to: string | null
          id: string
          language: string
          question: string
          response: string
          user_id: string | null
        }
        Insert: {
          company_id: string
          conversation_id: string
          created_at?: string
          escalated?: boolean
          escalated_at?: string | null
          escalated_to?: string | null
          id?: string
          language?: string
          question: string
          response: string
          user_id?: string | null
        }
        Update: {
          company_id?: string
          conversation_id?: string
          created_at?: string
          escalated?: boolean
          escalated_at?: string | null
          escalated_to?: string | null
          id?: string
          language?: string
          question?: string
          response?: string
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "hroiq_ai_conversations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_client_retainers: {
        Row: {
          assigned_consultant_id: string | null
          auto_case_routing: boolean | null
          billing_period: string
          company_id: string
          created_at: string
          hours_used: number
          id: string
          is_active: boolean
          monthly_report_enabled: boolean | null
          overage_notifications: boolean | null
          overage_rate: number
          priority_level: string | null
          retainer_hours: number
          rollover_bank: number
          service_tier: string | null
          updated_at: string
        }
        Insert: {
          assigned_consultant_id?: string | null
          auto_case_routing?: boolean | null
          billing_period?: string
          company_id: string
          created_at?: string
          hours_used?: number
          id?: string
          is_active?: boolean
          monthly_report_enabled?: boolean | null
          overage_notifications?: boolean | null
          overage_rate?: number
          priority_level?: string | null
          retainer_hours?: number
          rollover_bank?: number
          service_tier?: string | null
          updated_at?: string
        }
        Update: {
          assigned_consultant_id?: string | null
          auto_case_routing?: boolean | null
          billing_period?: string
          company_id?: string
          created_at?: string
          hours_used?: number
          id?: string
          is_active?: boolean
          monthly_report_enabled?: boolean | null
          overage_notifications?: boolean | null
          overage_rate?: number
          priority_level?: string | null
          retainer_hours?: number
          rollover_bank?: number
          service_tier?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "hroiq_client_retainers_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_deliverables: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          deliverable_type: string
          delivered_at: string | null
          description: string | null
          file_url: string | null
          id: string
          service_request_id: string | null
          status: string
          title: string
          updated_at: string
          vault_document_id: string | null
          version: string
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          deliverable_type: string
          delivered_at?: string | null
          description?: string | null
          file_url?: string | null
          id?: string
          service_request_id?: string | null
          status?: string
          title: string
          updated_at?: string
          vault_document_id?: string | null
          version?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          deliverable_type?: string
          delivered_at?: string | null
          description?: string | null
          file_url?: string | null
          id?: string
          service_request_id?: string | null
          status?: string
          title?: string
          updated_at?: string
          vault_document_id?: string | null
          version?: string
        }
        Relationships: [
          {
            foreignKeyName: "hroiq_deliverables_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "hroiq_deliverables_service_request_id_fkey"
            columns: ["service_request_id"]
            isOneToOne: false
            referencedRelation: "hroiq_service_requests"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_lms_credits: {
        Row: {
          company_id: string
          credits_issued: number
          credits_used: number
          employee_id: string | null
          id: string
          issued_at: string
          notes: string | null
          training_type: Database["public"]["Enums"]["training_type"]
          updated_at: string
        }
        Insert: {
          company_id: string
          credits_issued?: number
          credits_used?: number
          employee_id?: string | null
          id?: string
          issued_at?: string
          notes?: string | null
          training_type: Database["public"]["Enums"]["training_type"]
          updated_at?: string
        }
        Update: {
          company_id?: string
          credits_issued?: number
          credits_used?: number
          employee_id?: string | null
          id?: string
          issued_at?: string
          notes?: string | null
          training_type?: Database["public"]["Enums"]["training_type"]
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "fk_hroiq_lms_credits_company"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "fk_hroiq_lms_credits_employee"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_onboarding_packets: {
        Row: {
          company_id: string
          completed_at: string | null
          created_at: string
          created_by: string | null
          custom_checklist: string[] | null
          employee_email: string
          employee_name: string
          employee_phone: string | null
          id: string
          language_preference: string
          notification_emails: string[] | null
          packet_type: string
          sent_at: string | null
          status: string
          updated_at: string
        }
        Insert: {
          company_id: string
          completed_at?: string | null
          created_at?: string
          created_by?: string | null
          custom_checklist?: string[] | null
          employee_email: string
          employee_name: string
          employee_phone?: string | null
          id?: string
          language_preference?: string
          notification_emails?: string[] | null
          packet_type?: string
          sent_at?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          company_id?: string
          completed_at?: string | null
          created_at?: string
          created_by?: string | null
          custom_checklist?: string[] | null
          employee_email?: string
          employee_name?: string
          employee_phone?: string | null
          id?: string
          language_preference?: string
          notification_emails?: string[] | null
          packet_type?: string
          sent_at?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "hroiq_onboarding_packets_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_policies: {
        Row: {
          acceptance_required: boolean
          assigned_to: string[] | null
          body: string
          company_id: string
          created_at: string
          id: string
          last_updated_by: string | null
          status: string
          title: string
          updated_at: string
          version: number
        }
        Insert: {
          acceptance_required?: boolean
          assigned_to?: string[] | null
          body: string
          company_id: string
          created_at?: string
          id?: string
          last_updated_by?: string | null
          status?: string
          title: string
          updated_at?: string
          version?: number
        }
        Update: {
          acceptance_required?: boolean
          assigned_to?: string[] | null
          body?: string
          company_id?: string
          created_at?: string
          id?: string
          last_updated_by?: string | null
          status?: string
          title?: string
          updated_at?: string
          version?: number
        }
        Relationships: []
      }
      hroiq_policy_assignments: {
        Row: {
          acceptance_signature: string | null
          acceptance_status: string
          accepted_at: string | null
          assigned_at: string
          company_id: string
          employee_id: string
          id: string
          notes: string | null
          policy_id: string
        }
        Insert: {
          acceptance_signature?: string | null
          acceptance_status?: string
          accepted_at?: string | null
          assigned_at?: string
          company_id: string
          employee_id: string
          id?: string
          notes?: string | null
          policy_id: string
        }
        Update: {
          acceptance_signature?: string | null
          acceptance_status?: string
          accepted_at?: string | null
          assigned_at?: string
          company_id?: string
          employee_id?: string
          id?: string
          notes?: string | null
          policy_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "hroiq_policy_assignments_policy_id_fkey"
            columns: ["policy_id"]
            isOneToOne: false
            referencedRelation: "hroiq_policies"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_policy_versions: {
        Row: {
          body: string
          change_summary: string | null
          created_at: string
          created_by: string | null
          id: string
          policy_id: string
          title: string
          version: number
        }
        Insert: {
          body: string
          change_summary?: string | null
          created_at?: string
          created_by?: string | null
          id?: string
          policy_id: string
          title: string
          version: number
        }
        Update: {
          body?: string
          change_summary?: string | null
          created_at?: string
          created_by?: string | null
          id?: string
          policy_id?: string
          title?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "hroiq_policy_versions_policy_id_fkey"
            columns: ["policy_id"]
            isOneToOne: false
            referencedRelation: "hroiq_policies"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_service_logs: {
        Row: {
          billable: boolean
          company_id: string
          consultant_id: string
          created_at: string
          description: string
          hours_logged: number
          id: string
          log_date: string
          rate_per_hour: number | null
          service_request_id: string | null
          updated_at: string
        }
        Insert: {
          billable?: boolean
          company_id: string
          consultant_id: string
          created_at?: string
          description: string
          hours_logged: number
          id?: string
          log_date?: string
          rate_per_hour?: number | null
          service_request_id?: string | null
          updated_at?: string
        }
        Update: {
          billable?: boolean
          company_id?: string
          consultant_id?: string
          created_at?: string
          description?: string
          hours_logged?: number
          id?: string
          log_date?: string
          rate_per_hour?: number | null
          service_request_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "hroiq_service_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "hroiq_service_logs_service_request_id_fkey"
            columns: ["service_request_id"]
            isOneToOne: false
            referencedRelation: "hroiq_service_requests"
            referencedColumns: ["id"]
          },
        ]
      }
      hroiq_service_requests: {
        Row: {
          actual_hours: number | null
          assigned_to: string | null
          company_id: string
          completed_at: string | null
          created_at: string
          description: string | null
          due_date: string | null
          estimated_hours: number | null
          id: string
          priority: string
          request_type: string
          requested_by: string | null
          status: string
          title: string
          updated_at: string
        }
        Insert: {
          actual_hours?: number | null
          assigned_to?: string | null
          company_id: string
          completed_at?: string | null
          created_at?: string
          description?: string | null
          due_date?: string | null
          estimated_hours?: number | null
          id?: string
          priority?: string
          request_type: string
          requested_by?: string | null
          status?: string
          title: string
          updated_at?: string
        }
        Update: {
          actual_hours?: number | null
          assigned_to?: string | null
          company_id?: string
          completed_at?: string | null
          created_at?: string
          description?: string | null
          due_date?: string | null
          estimated_hours?: number | null
          id?: string
          priority?: string
          request_type?: string
          requested_by?: string | null
          status?: string
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "hroiq_service_requests_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      import_jobs: {
        Row: {
          completed_at: string | null
          created_at: string
          created_by: string
          error_log: Json | null
          failed_records: number | null
          filename: string
          id: string
          mapping_config: Json | null
          processed_records: number | null
          status: string
          successful_records: number | null
          total_records: number | null
          type: string
        }
        Insert: {
          completed_at?: string | null
          created_at?: string
          created_by: string
          error_log?: Json | null
          failed_records?: number | null
          filename: string
          id?: string
          mapping_config?: Json | null
          processed_records?: number | null
          status?: string
          successful_records?: number | null
          total_records?: number | null
          type: string
        }
        Update: {
          completed_at?: string | null
          created_at?: string
          created_by?: string
          error_log?: Json | null
          failed_records?: number | null
          filename?: string
          id?: string
          mapping_config?: Json | null
          processed_records?: number | null
          status?: string
          successful_records?: number | null
          total_records?: number | null
          type?: string
        }
        Relationships: []
      }
      integration_audit_log: {
        Row: {
          action: string
          app_name: string
          client_id: string
          created_at: string | null
          id: string
          ip_address: string | null
          metadata: Json | null
          purpose: string | null
          requested_by: string
          session_token: string | null
          user_agent: string | null
        }
        Insert: {
          action: string
          app_name: string
          client_id: string
          created_at?: string | null
          id?: string
          ip_address?: string | null
          metadata?: Json | null
          purpose?: string | null
          requested_by: string
          session_token?: string | null
          user_agent?: string | null
        }
        Update: {
          action?: string
          app_name?: string
          client_id?: string
          created_at?: string | null
          id?: string
          ip_address?: string | null
          metadata?: Json | null
          purpose?: string | null
          requested_by?: string
          session_token?: string | null
          user_agent?: string | null
        }
        Relationships: []
      }
      integration_jobs: {
        Row: {
          company_id: string | null
          completed_at: string | null
          created_at: string
          created_by: string | null
          error_message: string | null
          id: string
          integration_id: string | null
          job_data: Json | null
          job_type: string
          max_retries: number
          next_retry_at: string | null
          records_failed: number | null
          records_processed: number | null
          result_data: Json | null
          retry_count: number
          started_at: string | null
          status: string
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          completed_at?: string | null
          created_at?: string
          created_by?: string | null
          error_message?: string | null
          id?: string
          integration_id?: string | null
          job_data?: Json | null
          job_type: string
          max_retries?: number
          next_retry_at?: string | null
          records_failed?: number | null
          records_processed?: number | null
          result_data?: Json | null
          retry_count?: number
          started_at?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          completed_at?: string | null
          created_at?: string
          created_by?: string | null
          error_message?: string | null
          id?: string
          integration_id?: string | null
          job_data?: Json | null
          job_type?: string
          max_retries?: number
          next_retry_at?: string | null
          records_failed?: number | null
          records_processed?: number | null
          result_data?: Json | null
          retry_count?: number
          started_at?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "integration_jobs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "integration_jobs_integration_id_fkey"
            columns: ["integration_id"]
            isOneToOne: false
            referencedRelation: "integrations"
            referencedColumns: ["id"]
          },
        ]
      }
      integration_providers: {
        Row: {
          auth_type: string
          category: string
          config_schema: Json | null
          created_at: string
          description: string | null
          display_name: string
          icon_url: string | null
          id: string
          is_active: boolean
          name: string
          rate_limits: Json | null
          updated_at: string
          webhook_events: string[] | null
        }
        Insert: {
          auth_type?: string
          category: string
          config_schema?: Json | null
          created_at?: string
          description?: string | null
          display_name: string
          icon_url?: string | null
          id?: string
          is_active?: boolean
          name: string
          rate_limits?: Json | null
          updated_at?: string
          webhook_events?: string[] | null
        }
        Update: {
          auth_type?: string
          category?: string
          config_schema?: Json | null
          created_at?: string
          description?: string | null
          display_name?: string
          icon_url?: string | null
          id?: string
          is_active?: boolean
          name?: string
          rate_limits?: Json | null
          updated_at?: string
          webhook_events?: string[] | null
        }
        Relationships: []
      }
      integration_sessions: {
        Row: {
          access_token: string
          app_name: string
          client_id: string
          connection_id: string | null
          created_at: string | null
          expires_at: string
          id: string
          purpose: string
          refresh_token: string | null
          requested_by: string
          session_token: string
        }
        Insert: {
          access_token: string
          app_name: string
          client_id: string
          connection_id?: string | null
          created_at?: string | null
          expires_at: string
          id?: string
          purpose: string
          refresh_token?: string | null
          requested_by: string
          session_token: string
        }
        Update: {
          access_token?: string
          app_name?: string
          client_id?: string
          connection_id?: string | null
          created_at?: string | null
          expires_at?: string
          id?: string
          purpose?: string
          refresh_token?: string | null
          requested_by?: string
          session_token?: string
        }
        Relationships: []
      }
      integration_templates: {
        Row: {
          configuration: Json
          created_at: string
          created_by: string | null
          description: string | null
          field_mappings: Json
          id: string
          is_active: boolean
          is_public: boolean
          name: string
          provider_name: string
          template_type: string
          updated_at: string
        }
        Insert: {
          configuration?: Json
          created_at?: string
          created_by?: string | null
          description?: string | null
          field_mappings?: Json
          id?: string
          is_active?: boolean
          is_public?: boolean
          name: string
          provider_name: string
          template_type: string
          updated_at?: string
        }
        Update: {
          configuration?: Json
          created_at?: string
          created_by?: string | null
          description?: string | null
          field_mappings?: Json
          id?: string
          is_active?: boolean
          is_public?: boolean
          name?: string
          provider_name?: string
          template_type?: string
          updated_at?: string
        }
        Relationships: []
      }
      integration_tokens: {
        Row: {
          access_token: string
          app_name: string
          client_id: string
          connection_id: string | null
          created_at: string
          expires_at: string | null
          id: string
          refresh_token: string | null
          updated_at: string
        }
        Insert: {
          access_token: string
          app_name: string
          client_id: string
          connection_id?: string | null
          created_at?: string
          expires_at?: string | null
          id?: string
          refresh_token?: string | null
          updated_at?: string
        }
        Update: {
          access_token?: string
          app_name?: string
          client_id?: string
          connection_id?: string | null
          created_at?: string
          expires_at?: string | null
          id?: string
          refresh_token?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      integration_webhooks: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string
          failure_count: number
          id: string
          integration_type: string
          is_active: boolean
          last_triggered_at: string | null
          name: string
          secret_key: string | null
          success_count: number
          trigger_events: string[]
          updated_at: string
          webhook_url: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by: string
          failure_count?: number
          id?: string
          integration_type: string
          is_active?: boolean
          last_triggered_at?: string | null
          name: string
          secret_key?: string | null
          success_count?: number
          trigger_events?: string[]
          updated_at?: string
          webhook_url: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string
          failure_count?: number
          id?: string
          integration_type?: string
          is_active?: boolean
          last_triggered_at?: string | null
          name?: string
          secret_key?: string | null
          success_count?: number
          trigger_events?: string[]
          updated_at?: string
          webhook_url?: string
        }
        Relationships: [
          {
            foreignKeyName: "integration_webhooks_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      integrations: {
        Row: {
          auto_retry: boolean
          company_id: string | null
          configuration: Json | null
          created_at: string
          created_by: string | null
          credentials: Json | null
          error_count: number | null
          id: string
          last_error: string | null
          last_sync_at: string | null
          name: string
          next_sync_at: string | null
          provider_id: string
          status: string
          sync_enabled: boolean
          sync_frequency: string | null
          updated_at: string
          webhook_secret: string | null
          webhook_url: string | null
        }
        Insert: {
          auto_retry?: boolean
          company_id?: string | null
          configuration?: Json | null
          created_at?: string
          created_by?: string | null
          credentials?: Json | null
          error_count?: number | null
          id?: string
          last_error?: string | null
          last_sync_at?: string | null
          name: string
          next_sync_at?: string | null
          provider_id: string
          status?: string
          sync_enabled?: boolean
          sync_frequency?: string | null
          updated_at?: string
          webhook_secret?: string | null
          webhook_url?: string | null
        }
        Update: {
          auto_retry?: boolean
          company_id?: string | null
          configuration?: Json | null
          created_at?: string
          created_by?: string | null
          credentials?: Json | null
          error_count?: number | null
          id?: string
          last_error?: string | null
          last_sync_at?: string | null
          name?: string
          next_sync_at?: string | null
          provider_id?: string
          status?: string
          sync_enabled?: boolean
          sync_frequency?: string | null
          updated_at?: string
          webhook_secret?: string | null
          webhook_url?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "integrations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "integrations_provider_id_fkey"
            columns: ["provider_id"]
            isOneToOne: false
            referencedRelation: "integration_providers"
            referencedColumns: ["id"]
          },
        ]
      }
      intent_patterns: {
        Row: {
          auto_escalate: boolean | null
          created_at: string
          id: string
          intent_category: string
          is_active: boolean | null
          pattern: string
          priority_level: string
          suggested_response: string | null
        }
        Insert: {
          auto_escalate?: boolean | null
          created_at?: string
          id?: string
          intent_category: string
          is_active?: boolean | null
          pattern: string
          priority_level?: string
          suggested_response?: string | null
        }
        Update: {
          auto_escalate?: boolean | null
          created_at?: string
          id?: string
          intent_category?: string
          is_active?: boolean | null
          pattern?: string
          priority_level?: string
          suggested_response?: string | null
        }
        Relationships: []
      }
      interviews: {
        Row: {
          application_id: string
          created_at: string
          created_by: string
          duration_minutes: number
          feedback: string | null
          id: string
          interview_type: string
          interviewer_email: string | null
          interviewer_name: string | null
          location: string | null
          meeting_link: string | null
          next_steps: string | null
          rating: number | null
          scheduled_at: string
          status: string
          updated_at: string
        }
        Insert: {
          application_id: string
          created_at?: string
          created_by: string
          duration_minutes?: number
          feedback?: string | null
          id?: string
          interview_type: string
          interviewer_email?: string | null
          interviewer_name?: string | null
          location?: string | null
          meeting_link?: string | null
          next_steps?: string | null
          rating?: number | null
          scheduled_at: string
          status?: string
          updated_at?: string
        }
        Update: {
          application_id?: string
          created_at?: string
          created_by?: string
          duration_minutes?: number
          feedback?: string | null
          id?: string
          interview_type?: string
          interviewer_email?: string | null
          interviewer_name?: string | null
          location?: string | null
          meeting_link?: string | null
          next_steps?: string | null
          rating?: number | null
          scheduled_at?: string
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "interviews_application_id_fkey"
            columns: ["application_id"]
            isOneToOne: false
            referencedRelation: "job_applications"
            referencedColumns: ["id"]
          },
        ]
      }
      investment_analysis: {
        Row: {
          admin_total: number
          annual_payroll: number
          backend_addons: number
          calculated_ee_admin_cost: number | null
          company_id: string | null
          company_name: string
          created_at: string
          created_by: string
          current_hr_burden: number
          deal_id: string | null
          easeworks_fee: number | null
          easeworks_pepm: number | null
          ee_admin_breakdown: Json | null
          fica_cost: number
          futa_cost: number
          gp_pepm: number
          gp_total: number
          hard_costs_employee_handbook: number | null
          hard_costs_employment_attorney: number | null
          hard_costs_fines_settlements: number | null
          hard_costs_hr_consulting: number | null
          hard_costs_hris_software: number | null
          hard_costs_payroll_software: number | null
          hard_costs_time_attendance_software: number | null
          hard_costs_training_platform: number | null
          id: string
          notes: string | null
          pricing_model: string
          proposal_id: string | null
          risk_adjustment: number | null
          savings_dollar: number
          savings_percent: number
          setup_fee: number
          setup_fee_per_wse: number
          soft_costs_hourly_wage: number | null
          soft_costs_risk_level: string | null
          soft_costs_weekly_admin_hours: number | null
          soft_costs_weekly_hr_hours: number | null
          status: string
          suta_cost: number
          suta_rate: number
          total_easeworks_cost: number
          total_hard_costs: number | null
          total_soft_costs: number | null
          updated_at: string
          version: number
          wc_cost: number
          wc_rate: number
          workers_comp_classifications: Json | null
          wse_count: number
        }
        Insert: {
          admin_total: number
          annual_payroll: number
          backend_addons: number
          calculated_ee_admin_cost?: number | null
          company_id?: string | null
          company_name: string
          created_at?: string
          created_by: string
          current_hr_burden: number
          deal_id?: string | null
          easeworks_fee?: number | null
          easeworks_pepm?: number | null
          ee_admin_breakdown?: Json | null
          fica_cost: number
          futa_cost: number
          gp_pepm: number
          gp_total: number
          hard_costs_employee_handbook?: number | null
          hard_costs_employment_attorney?: number | null
          hard_costs_fines_settlements?: number | null
          hard_costs_hr_consulting?: number | null
          hard_costs_hris_software?: number | null
          hard_costs_payroll_software?: number | null
          hard_costs_time_attendance_software?: number | null
          hard_costs_training_platform?: number | null
          id?: string
          notes?: string | null
          pricing_model: string
          proposal_id?: string | null
          risk_adjustment?: number | null
          savings_dollar: number
          savings_percent: number
          setup_fee: number
          setup_fee_per_wse?: number
          soft_costs_hourly_wage?: number | null
          soft_costs_risk_level?: string | null
          soft_costs_weekly_admin_hours?: number | null
          soft_costs_weekly_hr_hours?: number | null
          status?: string
          suta_cost: number
          suta_rate?: number
          total_easeworks_cost: number
          total_hard_costs?: number | null
          total_soft_costs?: number | null
          updated_at?: string
          version?: number
          wc_cost: number
          wc_rate?: number
          workers_comp_classifications?: Json | null
          wse_count: number
        }
        Update: {
          admin_total?: number
          annual_payroll?: number
          backend_addons?: number
          calculated_ee_admin_cost?: number | null
          company_id?: string | null
          company_name?: string
          created_at?: string
          created_by?: string
          current_hr_burden?: number
          deal_id?: string | null
          easeworks_fee?: number | null
          easeworks_pepm?: number | null
          ee_admin_breakdown?: Json | null
          fica_cost?: number
          futa_cost?: number
          gp_pepm?: number
          gp_total?: number
          hard_costs_employee_handbook?: number | null
          hard_costs_employment_attorney?: number | null
          hard_costs_fines_settlements?: number | null
          hard_costs_hr_consulting?: number | null
          hard_costs_hris_software?: number | null
          hard_costs_payroll_software?: number | null
          hard_costs_time_attendance_software?: number | null
          hard_costs_training_platform?: number | null
          id?: string
          notes?: string | null
          pricing_model?: string
          proposal_id?: string | null
          risk_adjustment?: number | null
          savings_dollar?: number
          savings_percent?: number
          setup_fee?: number
          setup_fee_per_wse?: number
          soft_costs_hourly_wage?: number | null
          soft_costs_risk_level?: string | null
          soft_costs_weekly_admin_hours?: number | null
          soft_costs_weekly_hr_hours?: number | null
          status?: string
          suta_cost?: number
          suta_rate?: number
          total_easeworks_cost?: number
          total_hard_costs?: number | null
          total_soft_costs?: number | null
          updated_at?: string
          version?: number
          wc_cost?: number
          wc_rate?: number
          workers_comp_classifications?: Json | null
          wse_count?: number
        }
        Relationships: [
          {
            foreignKeyName: "investment_analysis_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "investment_analysis_deal_id_fkey"
            columns: ["deal_id"]
            isOneToOne: false
            referencedRelation: "deals"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "investment_analysis_proposal_id_fkey"
            columns: ["proposal_id"]
            isOneToOne: false
            referencedRelation: "proposals"
            referencedColumns: ["id"]
          },
        ]
      }
      investment_analysis_audit: {
        Row: {
          action_type: string
          changed_at: string
          changed_by: string
          id: string
          investment_analysis_id: string
          new_values: Json | null
          notes: string | null
          old_values: Json | null
        }
        Insert: {
          action_type: string
          changed_at?: string
          changed_by: string
          id?: string
          investment_analysis_id: string
          new_values?: Json | null
          notes?: string | null
          old_values?: Json | null
        }
        Update: {
          action_type?: string
          changed_at?: string
          changed_by?: string
          id?: string
          investment_analysis_id?: string
          new_values?: Json | null
          notes?: string | null
          old_values?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "investment_analysis_audit_investment_analysis_id_fkey"
            columns: ["investment_analysis_id"]
            isOneToOne: false
            referencedRelation: "investment_analysis"
            referencedColumns: ["id"]
          },
        ]
      }
      investment_analysis_configs: {
        Row: {
          aso_cost_per_employee: number
          avg_hiring_cost: number
          company_id: string | null
          compliance_risk_factor: number
          config_name: string
          created_at: string
          hourly_admin_cost: number
          hourly_manager_cost: number
          id: string
          industry_turnover_rate: number
          is_active: boolean
          payroll_base_cost: number
          payroll_per_employee: number
          peo_cost_per_employee: number
          turnover_cost_multiplier: number
          updated_at: string
        }
        Insert: {
          aso_cost_per_employee?: number
          avg_hiring_cost?: number
          company_id?: string | null
          compliance_risk_factor?: number
          config_name?: string
          created_at?: string
          hourly_admin_cost?: number
          hourly_manager_cost?: number
          id?: string
          industry_turnover_rate?: number
          is_active?: boolean
          payroll_base_cost?: number
          payroll_per_employee?: number
          peo_cost_per_employee?: number
          turnover_cost_multiplier?: number
          updated_at?: string
        }
        Update: {
          aso_cost_per_employee?: number
          avg_hiring_cost?: number
          company_id?: string | null
          compliance_risk_factor?: number
          config_name?: string
          created_at?: string
          hourly_admin_cost?: number
          hourly_manager_cost?: number
          id?: string
          industry_turnover_rate?: number
          is_active?: boolean
          payroll_base_cost?: number
          payroll_per_employee?: number
          peo_cost_per_employee?: number
          turnover_cost_multiplier?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "investment_analysis_configs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      invitation_audit_log: {
        Row: {
          action_type: string
          created_at: string
          id: string
          invitation_id: string
          ip_address: unknown | null
          metadata: Json | null
          performed_by: string | null
          user_agent: string | null
        }
        Insert: {
          action_type: string
          created_at?: string
          id?: string
          invitation_id: string
          ip_address?: unknown | null
          metadata?: Json | null
          performed_by?: string | null
          user_agent?: string | null
        }
        Update: {
          action_type?: string
          created_at?: string
          id?: string
          invitation_id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          performed_by?: string | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "invitation_audit_log_invitation_id_fkey"
            columns: ["invitation_id"]
            isOneToOne: false
            referencedRelation: "user_invitations"
            referencedColumns: ["id"]
          },
        ]
      }
      invitations: {
        Row: {
          assessment_url: string
          company_name: string
          company_size: string | null
          contact_email: string
          contact_name: string
          created_at: string
          generated_content: string
          id: string
          industry: string | null
          invited_at: string
          status: string
          updated_at: string
        }
        Insert: {
          assessment_url: string
          company_name: string
          company_size?: string | null
          contact_email: string
          contact_name: string
          created_at?: string
          generated_content: string
          id?: string
          industry?: string | null
          invited_at?: string
          status?: string
          updated_at?: string
        }
        Update: {
          assessment_url?: string
          company_name?: string
          company_size?: string | null
          contact_email?: string
          contact_name?: string
          created_at?: string
          generated_content?: string
          id?: string
          industry?: string | null
          invited_at?: string
          status?: string
          updated_at?: string
        }
        Relationships: []
      }
      job_applications: {
        Row: {
          application_source: string | null
          availability_start: string | null
          candidate_email: string
          candidate_first_name: string
          candidate_last_name: string
          candidate_phone: string | null
          cover_letter: string | null
          created_at: string
          id: string
          interview_feedback: string | null
          job_order_id: string
          rating: number | null
          referrer_name: string | null
          resume_url: string | null
          salary_expectation: number | null
          screening_notes: string | null
          status: string
          submitted_by: string | null
          updated_at: string
          willing_to_relocate: boolean | null
        }
        Insert: {
          application_source?: string | null
          availability_start?: string | null
          candidate_email: string
          candidate_first_name: string
          candidate_last_name: string
          candidate_phone?: string | null
          cover_letter?: string | null
          created_at?: string
          id?: string
          interview_feedback?: string | null
          job_order_id: string
          rating?: number | null
          referrer_name?: string | null
          resume_url?: string | null
          salary_expectation?: number | null
          screening_notes?: string | null
          status?: string
          submitted_by?: string | null
          updated_at?: string
          willing_to_relocate?: boolean | null
        }
        Update: {
          application_source?: string | null
          availability_start?: string | null
          candidate_email?: string
          candidate_first_name?: string
          candidate_last_name?: string
          candidate_phone?: string | null
          cover_letter?: string | null
          created_at?: string
          id?: string
          interview_feedback?: string | null
          job_order_id?: string
          rating?: number | null
          referrer_name?: string | null
          resume_url?: string | null
          salary_expectation?: number | null
          screening_notes?: string | null
          status?: string
          submitted_by?: string | null
          updated_at?: string
          willing_to_relocate?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "job_applications_job_order_id_fkey"
            columns: ["job_order_id"]
            isOneToOne: false
            referencedRelation: "job_orders"
            referencedColumns: ["id"]
          },
        ]
      }
      job_codes: {
        Row: {
          code: string
          company_id: string
          created_at: string
          created_by: string | null
          default_cost_center: string | null
          department_id: string | null
          description: string
          gl_account_reference: string | null
          hourly_rate: number | null
          id: string
          is_active: boolean
          is_required_at_punch: boolean
          location_id: string | null
          updated_at: string
        }
        Insert: {
          code: string
          company_id: string
          created_at?: string
          created_by?: string | null
          default_cost_center?: string | null
          department_id?: string | null
          description: string
          gl_account_reference?: string | null
          hourly_rate?: number | null
          id?: string
          is_active?: boolean
          is_required_at_punch?: boolean
          location_id?: string | null
          updated_at?: string
        }
        Update: {
          code?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          default_cost_center?: string | null
          department_id?: string | null
          description?: string
          gl_account_reference?: string | null
          hourly_rate?: number | null
          id?: string
          is_active?: boolean
          is_required_at_punch?: boolean
          location_id?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      job_description_templates: {
        Row: {
          benefits_highlights: Json | null
          career_progression: string | null
          certifications_preferred: Json | null
          certifications_required: Json | null
          created_at: string
          created_by: string | null
          department: string
          education_level: string | null
          employment_type: string | null
          experience_years_max: number | null
          experience_years_min: number | null
          flsa_classification:
            | Database["public"]["Enums"]["flsa_classification"]
            | null
          id: string
          industry: string | null
          is_active: boolean | null
          is_template: boolean | null
          job_family: string | null
          key_responsibilities: Json
          level: string
          performance_metrics: Json | null
          physical_requirements: string | null
          preferred_qualifications: Json
          required_qualifications: Json
          salary_currency: string | null
          salary_max: number | null
          salary_min: number | null
          skills_preferred: Json
          skills_required: Json
          summary: string
          supervisory_role: boolean | null
          team_size_max: number | null
          team_size_min: number | null
          template_source: string | null
          title: string
          travel_percentage: number | null
          updated_at: string
          work_arrangement: string | null
          work_environment: string | null
        }
        Insert: {
          benefits_highlights?: Json | null
          career_progression?: string | null
          certifications_preferred?: Json | null
          certifications_required?: Json | null
          created_at?: string
          created_by?: string | null
          department: string
          education_level?: string | null
          employment_type?: string | null
          experience_years_max?: number | null
          experience_years_min?: number | null
          flsa_classification?:
            | Database["public"]["Enums"]["flsa_classification"]
            | null
          id?: string
          industry?: string | null
          is_active?: boolean | null
          is_template?: boolean | null
          job_family?: string | null
          key_responsibilities?: Json
          level: string
          performance_metrics?: Json | null
          physical_requirements?: string | null
          preferred_qualifications?: Json
          required_qualifications?: Json
          salary_currency?: string | null
          salary_max?: number | null
          salary_min?: number | null
          skills_preferred?: Json
          skills_required?: Json
          summary: string
          supervisory_role?: boolean | null
          team_size_max?: number | null
          team_size_min?: number | null
          template_source?: string | null
          title: string
          travel_percentage?: number | null
          updated_at?: string
          work_arrangement?: string | null
          work_environment?: string | null
        }
        Update: {
          benefits_highlights?: Json | null
          career_progression?: string | null
          certifications_preferred?: Json | null
          certifications_required?: Json | null
          created_at?: string
          created_by?: string | null
          department?: string
          education_level?: string | null
          employment_type?: string | null
          experience_years_max?: number | null
          experience_years_min?: number | null
          flsa_classification?:
            | Database["public"]["Enums"]["flsa_classification"]
            | null
          id?: string
          industry?: string | null
          is_active?: boolean | null
          is_template?: boolean | null
          job_family?: string | null
          key_responsibilities?: Json
          level?: string
          performance_metrics?: Json | null
          physical_requirements?: string | null
          preferred_qualifications?: Json
          required_qualifications?: Json
          salary_currency?: string | null
          salary_max?: number | null
          salary_min?: number | null
          skills_preferred?: Json
          skills_required?: Json
          summary?: string
          supervisory_role?: boolean | null
          team_size_max?: number | null
          team_size_min?: number | null
          template_source?: string | null
          title?: string
          travel_percentage?: number | null
          updated_at?: string
          work_arrangement?: string | null
          work_environment?: string | null
        }
        Relationships: []
      }
      job_descriptions: {
        Row: {
          created_at: string
          created_by: string | null
          description: string
          id: string
          is_ai_generated: boolean
          job_title_id: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          description: string
          id?: string
          is_ai_generated?: boolean
          job_title_id: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string | null
          description?: string
          id?: string
          is_ai_generated?: boolean
          job_title_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "job_descriptions_job_title_id_fkey"
            columns: ["job_title_id"]
            isOneToOne: false
            referencedRelation: "job_titles"
            referencedColumns: ["id"]
          },
        ]
      }
      job_orders: {
        Row: {
          assigned_to: string[] | null
          certifications_required: string[] | null
          client_id: string
          created_at: string
          created_by: string
          description: string
          education_required: string | null
          employment_type: string
          end_date: string | null
          experience_required: string | null
          id: string
          location: string
          notes: string | null
          pay_rate_max: number | null
          pay_rate_min: number | null
          pay_type: string
          positions_available: number
          positions_filled: number
          preferred_skills: string[] | null
          required_skills: string[] | null
          shift_schedule: string | null
          start_date: string | null
          status: string
          title: string
          updated_at: string
          urgency_level: string
        }
        Insert: {
          assigned_to?: string[] | null
          certifications_required?: string[] | null
          client_id: string
          created_at?: string
          created_by: string
          description: string
          education_required?: string | null
          employment_type: string
          end_date?: string | null
          experience_required?: string | null
          id?: string
          location: string
          notes?: string | null
          pay_rate_max?: number | null
          pay_rate_min?: number | null
          pay_type: string
          positions_available?: number
          positions_filled?: number
          preferred_skills?: string[] | null
          required_skills?: string[] | null
          shift_schedule?: string | null
          start_date?: string | null
          status?: string
          title: string
          updated_at?: string
          urgency_level?: string
        }
        Update: {
          assigned_to?: string[] | null
          certifications_required?: string[] | null
          client_id?: string
          created_at?: string
          created_by?: string
          description?: string
          education_required?: string | null
          employment_type?: string
          end_date?: string | null
          experience_required?: string | null
          id?: string
          location?: string
          notes?: string | null
          pay_rate_max?: number | null
          pay_rate_min?: number | null
          pay_type?: string
          positions_available?: number
          positions_filled?: number
          preferred_skills?: string[] | null
          required_skills?: string[] | null
          shift_schedule?: string | null
          start_date?: string | null
          status?: string
          title?: string
          updated_at?: string
          urgency_level?: string
        }
        Relationships: [
          {
            foreignKeyName: "job_orders_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
        ]
      }
      job_titles: {
        Row: {
          category: string | null
          client_id: string | null
          created_at: string
          created_by: string | null
          end_date: string | null
          id: string
          is_available_for_clients: boolean
          is_global: boolean
          start_date: string | null
          title_name: string
          updated_at: string
          wc_code_id: string | null
        }
        Insert: {
          category?: string | null
          client_id?: string | null
          created_at?: string
          created_by?: string | null
          end_date?: string | null
          id?: string
          is_available_for_clients?: boolean
          is_global?: boolean
          start_date?: string | null
          title_name: string
          updated_at?: string
          wc_code_id?: string | null
        }
        Update: {
          category?: string | null
          client_id?: string | null
          created_at?: string
          created_by?: string | null
          end_date?: string | null
          id?: string
          is_available_for_clients?: boolean
          is_global?: boolean
          start_date?: string | null
          title_name?: string
          updated_at?: string
          wc_code_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "job_titles_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "job_titles_wc_code_id_fkey"
            columns: ["wc_code_id"]
            isOneToOne: false
            referencedRelation: "workers_comp_codes"
            referencedColumns: ["id"]
          },
        ]
      }
      kiosk_settings: {
        Row: {
          allowed_lat: number | null
          allowed_lng: number | null
          auto_break_duration_minutes: number | null
          biometric_enabled: boolean
          company_id: string
          company_logo_url: string | null
          created_at: string
          device_id: string
          device_name: string
          geofence_radius_meters: number | null
          geofencing_enabled: boolean
          grace_period_minutes: number | null
          id: string
          is_active: boolean
          location_name: string
          photo_verification_enabled: boolean
          require_break_tracking: boolean | null
          updated_at: string
        }
        Insert: {
          allowed_lat?: number | null
          allowed_lng?: number | null
          auto_break_duration_minutes?: number | null
          biometric_enabled?: boolean
          company_id: string
          company_logo_url?: string | null
          created_at?: string
          device_id: string
          device_name: string
          geofence_radius_meters?: number | null
          geofencing_enabled?: boolean
          grace_period_minutes?: number | null
          id?: string
          is_active?: boolean
          location_name: string
          photo_verification_enabled?: boolean
          require_break_tracking?: boolean | null
          updated_at?: string
        }
        Update: {
          allowed_lat?: number | null
          allowed_lng?: number | null
          auto_break_duration_minutes?: number | null
          biometric_enabled?: boolean
          company_id?: string
          company_logo_url?: string | null
          created_at?: string
          device_id?: string
          device_name?: string
          geofence_radius_meters?: number | null
          geofencing_enabled?: boolean
          grace_period_minutes?: number | null
          id?: string
          is_active?: boolean
          location_name?: string
          photo_verification_enabled?: boolean
          require_break_tracking?: boolean | null
          updated_at?: string
        }
        Relationships: []
      }
      knowledge_base_articles: {
        Row: {
          author_id: string
          category_id: string | null
          content: string
          created_at: string
          excerpt: string | null
          featured: boolean
          id: string
          last_viewed_at: string | null
          published_at: string | null
          slug: string
          status: string
          tags: string[] | null
          target_roles: string[] | null
          title: string
          updated_at: string
          view_count: number
        }
        Insert: {
          author_id: string
          category_id?: string | null
          content: string
          created_at?: string
          excerpt?: string | null
          featured?: boolean
          id?: string
          last_viewed_at?: string | null
          published_at?: string | null
          slug: string
          status?: string
          tags?: string[] | null
          target_roles?: string[] | null
          title: string
          updated_at?: string
          view_count?: number
        }
        Update: {
          author_id?: string
          category_id?: string | null
          content?: string
          created_at?: string
          excerpt?: string | null
          featured?: boolean
          id?: string
          last_viewed_at?: string | null
          published_at?: string | null
          slug?: string
          status?: string
          tags?: string[] | null
          target_roles?: string[] | null
          title?: string
          updated_at?: string
          view_count?: number
        }
        Relationships: [
          {
            foreignKeyName: "knowledge_base_articles_category_id_fkey"
            columns: ["category_id"]
            isOneToOne: false
            referencedRelation: "knowledge_base_categories"
            referencedColumns: ["id"]
          },
        ]
      }
      knowledge_base_bookmarks: {
        Row: {
          article_id: string
          created_at: string
          id: string
          user_id: string
        }
        Insert: {
          article_id: string
          created_at?: string
          id?: string
          user_id: string
        }
        Update: {
          article_id?: string
          created_at?: string
          id?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "knowledge_base_bookmarks_article_id_fkey"
            columns: ["article_id"]
            isOneToOne: false
            referencedRelation: "knowledge_base_articles"
            referencedColumns: ["id"]
          },
        ]
      }
      knowledge_base_categories: {
        Row: {
          color: string | null
          created_at: string
          description: string | null
          icon: string | null
          id: string
          is_active: boolean
          name: string
          sort_order: number | null
          updated_at: string
        }
        Insert: {
          color?: string | null
          created_at?: string
          description?: string | null
          icon?: string | null
          id?: string
          is_active?: boolean
          name: string
          sort_order?: number | null
          updated_at?: string
        }
        Update: {
          color?: string | null
          created_at?: string
          description?: string | null
          icon?: string | null
          id?: string
          is_active?: boolean
          name?: string
          sort_order?: number | null
          updated_at?: string
        }
        Relationships: []
      }
      knowledge_base_views: {
        Row: {
          article_id: string
          id: string
          ip_address: unknown | null
          user_agent: string | null
          user_id: string | null
          viewed_at: string
        }
        Insert: {
          article_id: string
          id?: string
          ip_address?: unknown | null
          user_agent?: string | null
          user_id?: string | null
          viewed_at?: string
        }
        Update: {
          article_id?: string
          id?: string
          ip_address?: unknown | null
          user_agent?: string | null
          user_id?: string | null
          viewed_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "knowledge_base_views_article_id_fkey"
            columns: ["article_id"]
            isOneToOne: false
            referencedRelation: "knowledge_base_articles"
            referencedColumns: ["id"]
          },
        ]
      }
      kpi_definitions: {
        Row: {
          calculation_method: string
          calculation_query: string | null
          category: string
          company_id: string | null
          created_at: string
          created_by: string | null
          critical_threshold: number | null
          description: string | null
          id: string
          is_active: boolean
          name: string
          refresh_frequency: string
          source_tables: string[]
          target_value: number | null
          unit: string | null
          updated_at: string
          warning_threshold: number | null
        }
        Insert: {
          calculation_method: string
          calculation_query?: string | null
          category: string
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          critical_threshold?: number | null
          description?: string | null
          id?: string
          is_active?: boolean
          name: string
          refresh_frequency?: string
          source_tables: string[]
          target_value?: number | null
          unit?: string | null
          updated_at?: string
          warning_threshold?: number | null
        }
        Update: {
          calculation_method?: string
          calculation_query?: string | null
          category?: string
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          critical_threshold?: number | null
          description?: string | null
          id?: string
          is_active?: boolean
          name?: string
          refresh_frequency?: string
          source_tables?: string[]
          target_value?: number | null
          unit?: string | null
          updated_at?: string
          warning_threshold?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "kpi_definitions_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      leads: {
        Row: {
          assigned_to: string | null
          company_name: string | null
          company_size: string | null
          created_at: string
          email: string
          first_name: string
          id: string
          industry: string | null
          job_title: string | null
          last_contact_date: string | null
          last_name: string
          lead_score: number | null
          mailchimp_member_id: string | null
          mailchimp_status: string | null
          mailchimp_tags: string[] | null
          notes: string | null
          phone: string | null
          source: string | null
          status: string
          updated_at: string
          website: string | null
        }
        Insert: {
          assigned_to?: string | null
          company_name?: string | null
          company_size?: string | null
          created_at?: string
          email: string
          first_name: string
          id?: string
          industry?: string | null
          job_title?: string | null
          last_contact_date?: string | null
          last_name: string
          lead_score?: number | null
          mailchimp_member_id?: string | null
          mailchimp_status?: string | null
          mailchimp_tags?: string[] | null
          notes?: string | null
          phone?: string | null
          source?: string | null
          status?: string
          updated_at?: string
          website?: string | null
        }
        Update: {
          assigned_to?: string | null
          company_name?: string | null
          company_size?: string | null
          created_at?: string
          email?: string
          first_name?: string
          id?: string
          industry?: string | null
          job_title?: string | null
          last_contact_date?: string | null
          last_name?: string
          lead_score?: number | null
          mailchimp_member_id?: string | null
          mailchimp_status?: string | null
          mailchimp_tags?: string[] | null
          notes?: string | null
          phone?: string | null
          source?: string | null
          status?: string
          updated_at?: string
          website?: string | null
        }
        Relationships: []
      }
      leads_archive: {
        Row: {
          assigned_to: string | null
          company_name: string | null
          company_size: string | null
          created_at: string | null
          email: string | null
          first_name: string | null
          id: string | null
          industry: string | null
          job_title: string | null
          last_contact_date: string | null
          last_name: string | null
          lead_score: number | null
          notes: string | null
          phone: string | null
          source: string | null
          status: string | null
          updated_at: string | null
        }
        Insert: {
          assigned_to?: string | null
          company_name?: string | null
          company_size?: string | null
          created_at?: string | null
          email?: string | null
          first_name?: string | null
          id?: string | null
          industry?: string | null
          job_title?: string | null
          last_contact_date?: string | null
          last_name?: string | null
          lead_score?: number | null
          notes?: string | null
          phone?: string | null
          source?: string | null
          status?: string | null
          updated_at?: string | null
        }
        Update: {
          assigned_to?: string | null
          company_name?: string | null
          company_size?: string | null
          created_at?: string | null
          email?: string | null
          first_name?: string | null
          id?: string | null
          industry?: string | null
          job_title?: string | null
          last_contact_date?: string | null
          last_name?: string | null
          lead_score?: number | null
          notes?: string | null
          phone?: string | null
          source?: string | null
          status?: string | null
          updated_at?: string | null
        }
        Relationships: []
      }
      learner_behavior_tracking: {
        Row: {
          behavior_type: string
          behavioral_tags: Json | null
          content_position: number | null
          created_at: string | null
          duration_seconds: number | null
          employee_id: string | null
          engagement_score: number | null
          id: string
          quiz_answer_selected: string | null
          quiz_attempt_number: number | null
          quiz_correct_answer: string | null
          quiz_question_id: string | null
          section_id: string | null
          session_id: string
          struggle_indicators: Json | null
          timestamp: string
          training_module_id: string
          updated_at: string | null
          user_id: string
        }
        Insert: {
          behavior_type: string
          behavioral_tags?: Json | null
          content_position?: number | null
          created_at?: string | null
          duration_seconds?: number | null
          employee_id?: string | null
          engagement_score?: number | null
          id?: string
          quiz_answer_selected?: string | null
          quiz_attempt_number?: number | null
          quiz_correct_answer?: string | null
          quiz_question_id?: string | null
          section_id?: string | null
          session_id: string
          struggle_indicators?: Json | null
          timestamp?: string
          training_module_id: string
          updated_at?: string | null
          user_id: string
        }
        Update: {
          behavior_type?: string
          behavioral_tags?: Json | null
          content_position?: number | null
          created_at?: string | null
          duration_seconds?: number | null
          employee_id?: string | null
          engagement_score?: number | null
          id?: string
          quiz_answer_selected?: string | null
          quiz_attempt_number?: number | null
          quiz_correct_answer?: string | null
          quiz_question_id?: string | null
          section_id?: string | null
          session_id?: string
          struggle_indicators?: Json | null
          timestamp?: string
          training_module_id?: string
          updated_at?: string | null
          user_id?: string
        }
        Relationships: []
      }
      learner_quiz_sessions: {
        Row: {
          assignment_id: string
          completed_at: string | null
          correct_answers: number | null
          created_at: string | null
          employee_id: string
          id: string
          passed: boolean | null
          scene_id: string
          score_percentage: number | null
          started_at: string | null
          total_questions: number | null
          updated_at: string | null
        }
        Insert: {
          assignment_id: string
          completed_at?: string | null
          correct_answers?: number | null
          created_at?: string | null
          employee_id: string
          id?: string
          passed?: boolean | null
          scene_id: string
          score_percentage?: number | null
          started_at?: string | null
          total_questions?: number | null
          updated_at?: string | null
        }
        Update: {
          assignment_id?: string
          completed_at?: string | null
          correct_answers?: number | null
          created_at?: string | null
          employee_id?: string
          id?: string
          passed?: boolean | null
          scene_id?: string
          score_percentage?: number | null
          started_at?: string | null
          total_questions?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "learner_quiz_sessions_assignment_id_fkey"
            columns: ["assignment_id"]
            isOneToOne: false
            referencedRelation: "training_assignments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "learner_quiz_sessions_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "learner_quiz_sessions_scene_id_fkey"
            columns: ["scene_id"]
            isOneToOne: false
            referencedRelation: "training_scenes"
            referencedColumns: ["id"]
          },
        ]
      }
      learner_struggle_profiles: {
        Row: {
          created_at: string | null
          employee_id: string
          engagement_metrics: Json | null
          id: string
          knowledge_gaps: Json | null
          last_updated: string | null
          learning_patterns: Json | null
          struggle_indicators: Json | null
        }
        Insert: {
          created_at?: string | null
          employee_id: string
          engagement_metrics?: Json | null
          id?: string
          knowledge_gaps?: Json | null
          last_updated?: string | null
          learning_patterns?: Json | null
          struggle_indicators?: Json | null
        }
        Update: {
          created_at?: string | null
          employee_id?: string
          engagement_metrics?: Json | null
          id?: string
          knowledge_gaps?: Json | null
          last_updated?: string | null
          learning_patterns?: Json | null
          struggle_indicators?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "learner_struggle_profiles_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: true
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      learner_video_progress: {
        Row: {
          assignment_id: string
          completed_at: string | null
          completion_percentage: number | null
          created_at: string | null
          current_time_seconds: number | null
          duration_seconds: number | null
          employee_id: string
          id: string
          is_completed: boolean | null
          scene_id: string
          updated_at: string | null
        }
        Insert: {
          assignment_id: string
          completed_at?: string | null
          completion_percentage?: number | null
          created_at?: string | null
          current_time_seconds?: number | null
          duration_seconds?: number | null
          employee_id: string
          id?: string
          is_completed?: boolean | null
          scene_id: string
          updated_at?: string | null
        }
        Update: {
          assignment_id?: string
          completed_at?: string | null
          completion_percentage?: number | null
          created_at?: string | null
          current_time_seconds?: number | null
          duration_seconds?: number | null
          employee_id?: string
          id?: string
          is_completed?: boolean | null
          scene_id?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "learner_video_progress_assignment_id_fkey"
            columns: ["assignment_id"]
            isOneToOne: false
            referencedRelation: "training_assignments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "learner_video_progress_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "learner_video_progress_scene_id_fkey"
            columns: ["scene_id"]
            isOneToOne: false
            referencedRelation: "training_scenes"
            referencedColumns: ["id"]
          },
        ]
      }
      learning_path_assignments: {
        Row: {
          assigned_at: string
          assigned_by: string | null
          completed_at: string | null
          created_at: string
          current_module_sequence: number | null
          due_date: string | null
          employee_id: string
          id: string
          learning_path_id: string
          overall_progress_percentage: number | null
          started_at: string | null
          status: string
          updated_at: string
        }
        Insert: {
          assigned_at?: string
          assigned_by?: string | null
          completed_at?: string | null
          created_at?: string
          current_module_sequence?: number | null
          due_date?: string | null
          employee_id: string
          id?: string
          learning_path_id: string
          overall_progress_percentage?: number | null
          started_at?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          assigned_at?: string
          assigned_by?: string | null
          completed_at?: string | null
          created_at?: string
          current_module_sequence?: number | null
          due_date?: string | null
          employee_id?: string
          id?: string
          learning_path_id?: string
          overall_progress_percentage?: number | null
          started_at?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "learning_path_assignments_learning_path_id_fkey"
            columns: ["learning_path_id"]
            isOneToOne: false
            referencedRelation: "learning_paths"
            referencedColumns: ["id"]
          },
        ]
      }
      learning_path_modules: {
        Row: {
          created_at: string
          id: string
          learning_path_id: string
          prerequisite_modules: string[] | null
          required_score_percentage: number | null
          sequence_order: number
          training_module_id: string
        }
        Insert: {
          created_at?: string
          id?: string
          learning_path_id: string
          prerequisite_modules?: string[] | null
          required_score_percentage?: number | null
          sequence_order: number
          training_module_id: string
        }
        Update: {
          created_at?: string
          id?: string
          learning_path_id?: string
          prerequisite_modules?: string[] | null
          required_score_percentage?: number | null
          sequence_order?: number
          training_module_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "learning_path_modules_learning_path_id_fkey"
            columns: ["learning_path_id"]
            isOneToOne: false
            referencedRelation: "learning_paths"
            referencedColumns: ["id"]
          },
        ]
      }
      learning_paths: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          description: string | null
          difficulty_level: string | null
          estimated_duration_hours: number | null
          id: string
          is_active: boolean
          is_sequential: boolean
          name: string
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          difficulty_level?: string | null
          estimated_duration_hours?: number | null
          id?: string
          is_active?: boolean
          is_sequential?: boolean
          name: string
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          difficulty_level?: string | null
          estimated_duration_hours?: number | null
          id?: string
          is_active?: boolean
          is_sequential?: boolean
          name?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "learning_paths_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      learning_progress: {
        Row: {
          assignment_id: string
          completed_at: string | null
          completion_data: Json | null
          content_completed_at: string | null
          content_viewed_percentage: number
          created_at: string
          employee_id: string
          id: string
          last_accessed_at: string | null
          overall_progress_percentage: number
          quiz_attempts: number
          quiz_best_score: number | null
          quiz_completed_at: string | null
          quiz_passed: boolean | null
          scene_id: string | null
          status: string
          time_spent_seconds: number
          training_module_id: string
          updated_at: string
        }
        Insert: {
          assignment_id: string
          completed_at?: string | null
          completion_data?: Json | null
          content_completed_at?: string | null
          content_viewed_percentage?: number
          created_at?: string
          employee_id: string
          id?: string
          last_accessed_at?: string | null
          overall_progress_percentage?: number
          quiz_attempts?: number
          quiz_best_score?: number | null
          quiz_completed_at?: string | null
          quiz_passed?: boolean | null
          scene_id?: string | null
          status?: string
          time_spent_seconds?: number
          training_module_id: string
          updated_at?: string
        }
        Update: {
          assignment_id?: string
          completed_at?: string | null
          completion_data?: Json | null
          content_completed_at?: string | null
          content_viewed_percentage?: number
          created_at?: string
          employee_id?: string
          id?: string
          last_accessed_at?: string | null
          overall_progress_percentage?: number
          quiz_attempts?: number
          quiz_best_score?: number | null
          quiz_completed_at?: string | null
          quiz_passed?: boolean | null
          scene_id?: string | null
          status?: string
          time_spent_seconds?: number
          training_module_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "learning_progress_assignment_id_fkey"
            columns: ["assignment_id"]
            isOneToOne: false
            referencedRelation: "training_assignments"
            referencedColumns: ["id"]
          },
        ]
      }
      learning_reflections: {
        Row: {
          allow_peer_sharing: boolean | null
          application_response: string | null
          assignment_id: string | null
          confusion_response: string | null
          created_at: string
          employee_id: string
          id: string
          is_anonymous: boolean | null
          module_topic: string | null
          reflection_type: string
          scene_id: string | null
          sentiment_score: number | null
          tags: string[] | null
          teaching_response: string | null
          themes: string[] | null
          training_module_id: string | null
          updated_at: string
          usefulness_response: string | null
        }
        Insert: {
          allow_peer_sharing?: boolean | null
          application_response?: string | null
          assignment_id?: string | null
          confusion_response?: string | null
          created_at?: string
          employee_id: string
          id?: string
          is_anonymous?: boolean | null
          module_topic?: string | null
          reflection_type?: string
          scene_id?: string | null
          sentiment_score?: number | null
          tags?: string[] | null
          teaching_response?: string | null
          themes?: string[] | null
          training_module_id?: string | null
          updated_at?: string
          usefulness_response?: string | null
        }
        Update: {
          allow_peer_sharing?: boolean | null
          application_response?: string | null
          assignment_id?: string | null
          confusion_response?: string | null
          created_at?: string
          employee_id?: string
          id?: string
          is_anonymous?: boolean | null
          module_topic?: string | null
          reflection_type?: string
          scene_id?: string | null
          sentiment_score?: number | null
          tags?: string[] | null
          teaching_response?: string | null
          themes?: string[] | null
          training_module_id?: string | null
          updated_at?: string
          usefulness_response?: string | null
        }
        Relationships: []
      }
      learning_trigger_events: {
        Row: {
          assignment_id: string | null
          created_at: string
          current_progress: number | null
          detected_topics: string[] | null
          employee_id: string
          id: string
          learner_engaged: boolean | null
          micro_content_served: string[] | null
          performance_after: Json | null
          performance_before: Json | null
          resolved_at: string | null
          response_effectiveness: number | null
          scene_id: string | null
          session_id: string | null
          training_module_id: string | null
          trigger_context: Json | null
          trigger_type: string
        }
        Insert: {
          assignment_id?: string | null
          created_at?: string
          current_progress?: number | null
          detected_topics?: string[] | null
          employee_id: string
          id?: string
          learner_engaged?: boolean | null
          micro_content_served?: string[] | null
          performance_after?: Json | null
          performance_before?: Json | null
          resolved_at?: string | null
          response_effectiveness?: number | null
          scene_id?: string | null
          session_id?: string | null
          training_module_id?: string | null
          trigger_context?: Json | null
          trigger_type: string
        }
        Update: {
          assignment_id?: string | null
          created_at?: string
          current_progress?: number | null
          detected_topics?: string[] | null
          employee_id?: string
          id?: string
          learner_engaged?: boolean | null
          micro_content_served?: string[] | null
          performance_after?: Json | null
          performance_before?: Json | null
          resolved_at?: string | null
          response_effectiveness?: number | null
          scene_id?: string | null
          session_id?: string | null
          training_module_id?: string | null
          trigger_context?: Json | null
          trigger_type?: string
        }
        Relationships: []
      }
      legal_clauses: {
        Row: {
          applicable_documents: string[] | null
          clause_type: string
          content: string
          created_at: string
          created_by: string | null
          id: string
          is_active: boolean
          jurisdiction: string | null
          title: string
          updated_at: string
        }
        Insert: {
          applicable_documents?: string[] | null
          clause_type: string
          content: string
          created_at?: string
          created_by?: string | null
          id?: string
          is_active?: boolean
          jurisdiction?: string | null
          title: string
          updated_at?: string
        }
        Update: {
          applicable_documents?: string[] | null
          clause_type?: string
          content?: string
          created_at?: string
          created_by?: string | null
          id?: string
          is_active?: boolean
          jurisdiction?: string | null
          title?: string
          updated_at?: string
        }
        Relationships: []
      }
      locations: {
        Row: {
          address: string | null
          address_line1: string | null
          address_line2: string | null
          city: string | null
          code: string | null
          company_id: string | null
          country: string | null
          created_at: string
          default_bank_account_id: string | null
          department_id: string
          id: string
          is_active: boolean
          name: string
          state: string | null
          timezone: string | null
          updated_at: string
          zip: string | null
        }
        Insert: {
          address?: string | null
          address_line1?: string | null
          address_line2?: string | null
          city?: string | null
          code?: string | null
          company_id?: string | null
          country?: string | null
          created_at?: string
          default_bank_account_id?: string | null
          department_id: string
          id?: string
          is_active?: boolean
          name: string
          state?: string | null
          timezone?: string | null
          updated_at?: string
          zip?: string | null
        }
        Update: {
          address?: string | null
          address_line1?: string | null
          address_line2?: string | null
          city?: string | null
          code?: string | null
          company_id?: string | null
          country?: string | null
          created_at?: string
          default_bank_account_id?: string | null
          department_id?: string
          id?: string
          is_active?: boolean
          name?: string
          state?: string | null
          timezone?: string | null
          updated_at?: string
          zip?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "locations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "locations_department_id_fkey"
            columns: ["department_id"]
            isOneToOne: false
            referencedRelation: "departments"
            referencedColumns: ["id"]
          },
        ]
      }
      mailchimp_analytics: {
        Row: {
          bounce_rate: number | null
          bounces: number | null
          campaign_id: string | null
          clicks: number | null
          clicks_rate: number | null
          created_at: string | null
          forwards: number | null
          id: string
          last_synced_at: string | null
          list_stats: Json | null
          mailchimp_campaign_id: string
          opens: number | null
          opens_rate: number | null
          unsubscribe_rate: number | null
          unsubscribes: number | null
          updated_at: string | null
        }
        Insert: {
          bounce_rate?: number | null
          bounces?: number | null
          campaign_id?: string | null
          clicks?: number | null
          clicks_rate?: number | null
          created_at?: string | null
          forwards?: number | null
          id?: string
          last_synced_at?: string | null
          list_stats?: Json | null
          mailchimp_campaign_id: string
          opens?: number | null
          opens_rate?: number | null
          unsubscribe_rate?: number | null
          unsubscribes?: number | null
          updated_at?: string | null
        }
        Update: {
          bounce_rate?: number | null
          bounces?: number | null
          campaign_id?: string | null
          clicks?: number | null
          clicks_rate?: number | null
          created_at?: string | null
          forwards?: number | null
          id?: string
          last_synced_at?: string | null
          list_stats?: Json | null
          mailchimp_campaign_id?: string
          opens?: number | null
          opens_rate?: number | null
          unsubscribe_rate?: number | null
          unsubscribes?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "mailchimp_analytics_campaign_id_fkey"
            columns: ["campaign_id"]
            isOneToOne: false
            referencedRelation: "email_campaigns"
            referencedColumns: ["id"]
          },
        ]
      }
      metrics_cache: {
        Row: {
          cache_key: string
          company_id: string | null
          created_at: string | null
          expires_at: string
          id: string
          metric_data: Json
          updated_at: string | null
        }
        Insert: {
          cache_key: string
          company_id?: string | null
          created_at?: string | null
          expires_at: string
          id?: string
          metric_data: Json
          updated_at?: string | null
        }
        Update: {
          cache_key?: string
          company_id?: string | null
          created_at?: string | null
          expires_at?: string
          id?: string
          metric_data?: Json
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "metrics_cache_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      mfa_configurations: {
        Row: {
          backup_codes: string[] | null
          backup_codes_used: number | null
          created_at: string
          email_verified: boolean | null
          id: string
          is_required: boolean | null
          last_used_at: string | null
          sms_enabled: boolean | null
          sms_phone: string | null
          totp_enabled: boolean | null
          totp_secret: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          backup_codes?: string[] | null
          backup_codes_used?: number | null
          created_at?: string
          email_verified?: boolean | null
          id?: string
          is_required?: boolean | null
          last_used_at?: string | null
          sms_enabled?: boolean | null
          sms_phone?: string | null
          totp_enabled?: boolean | null
          totp_secret?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          backup_codes?: string[] | null
          backup_codes_used?: number | null
          created_at?: string
          email_verified?: boolean | null
          id?: string
          is_required?: boolean | null
          last_used_at?: string | null
          sms_enabled?: boolean | null
          sms_phone?: string | null
          totp_enabled?: boolean | null
          totp_secret?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      micro_content_library: {
        Row: {
          content_data: Json | null
          content_type: string
          content_url: string | null
          created_at: string
          created_by: string | null
          description: string | null
          effectiveness_score: number | null
          estimated_duration_seconds: number | null
          id: string
          is_active: boolean | null
          skill_level: string | null
          target_industries: string[] | null
          target_roles: string[] | null
          thumbnail_url: string | null
          title: string
          topic_tags: string[] | null
          trigger_contexts: string[] | null
          updated_at: string
          usage_count: number | null
        }
        Insert: {
          content_data?: Json | null
          content_type: string
          content_url?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          effectiveness_score?: number | null
          estimated_duration_seconds?: number | null
          id?: string
          is_active?: boolean | null
          skill_level?: string | null
          target_industries?: string[] | null
          target_roles?: string[] | null
          thumbnail_url?: string | null
          title: string
          topic_tags?: string[] | null
          trigger_contexts?: string[] | null
          updated_at?: string
          usage_count?: number | null
        }
        Update: {
          content_data?: Json | null
          content_type?: string
          content_url?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          effectiveness_score?: number | null
          estimated_duration_seconds?: number | null
          id?: string
          is_active?: boolean | null
          skill_level?: string | null
          target_industries?: string[] | null
          target_roles?: string[] | null
          thumbnail_url?: string | null
          title?: string
          topic_tags?: string[] | null
          trigger_contexts?: string[] | null
          updated_at?: string
          usage_count?: number | null
        }
        Relationships: []
      }
      micro_learning_interventions: {
        Row: {
          completed: boolean | null
          created_at: string
          delivered_at: string
          delivery_method: string | null
          feedback: string | null
          helped_performance: boolean | null
          id: string
          micro_content_id: string
          performance_improvement: number | null
          rated: boolean | null
          rating: number | null
          trigger_event_id: string
          view_duration_seconds: number | null
          viewed: boolean | null
        }
        Insert: {
          completed?: boolean | null
          created_at?: string
          delivered_at?: string
          delivery_method?: string | null
          feedback?: string | null
          helped_performance?: boolean | null
          id?: string
          micro_content_id: string
          performance_improvement?: number | null
          rated?: boolean | null
          rating?: number | null
          trigger_event_id: string
          view_duration_seconds?: number | null
          viewed?: boolean | null
        }
        Update: {
          completed?: boolean | null
          created_at?: string
          delivered_at?: string
          delivery_method?: string | null
          feedback?: string | null
          helped_performance?: boolean | null
          id?: string
          micro_content_id?: string
          performance_improvement?: number | null
          rated?: boolean | null
          rating?: number | null
          trigger_event_id?: string
          view_duration_seconds?: number | null
          viewed?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "micro_learning_interventions_micro_content_id_fkey"
            columns: ["micro_content_id"]
            isOneToOne: false
            referencedRelation: "micro_content_library"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "micro_learning_interventions_trigger_event_id_fkey"
            columns: ["trigger_event_id"]
            isOneToOne: false
            referencedRelation: "learning_trigger_events"
            referencedColumns: ["id"]
          },
        ]
      }
      microlearning_recommendations: {
        Row: {
          behavioral_context: Json | null
          completed_at: string | null
          content_url: string | null
          created_at: string | null
          delivery_method: string | null
          description: string
          employee_id: string | null
          estimated_duration_minutes: number | null
          id: string
          priority: string | null
          recommendation_type: string
          scheduled_for: string | null
          status: string | null
          title: string
          training_module_id: string
          trigger_reason: string
          triggered_by_behavior_id: string | null
          updated_at: string | null
          user_id: string
          viewed_at: string | null
        }
        Insert: {
          behavioral_context?: Json | null
          completed_at?: string | null
          content_url?: string | null
          created_at?: string | null
          delivery_method?: string | null
          description: string
          employee_id?: string | null
          estimated_duration_minutes?: number | null
          id?: string
          priority?: string | null
          recommendation_type: string
          scheduled_for?: string | null
          status?: string | null
          title: string
          training_module_id: string
          trigger_reason: string
          triggered_by_behavior_id?: string | null
          updated_at?: string | null
          user_id: string
          viewed_at?: string | null
        }
        Update: {
          behavioral_context?: Json | null
          completed_at?: string | null
          content_url?: string | null
          created_at?: string | null
          delivery_method?: string | null
          description?: string
          employee_id?: string | null
          estimated_duration_minutes?: number | null
          id?: string
          priority?: string | null
          recommendation_type?: string
          scheduled_for?: string | null
          status?: string | null
          title?: string
          training_module_id?: string
          trigger_reason?: string
          triggered_by_behavior_id?: string | null
          updated_at?: string | null
          user_id?: string
          viewed_at?: string | null
        }
        Relationships: []
      }
      module_engagement_heatmaps: {
        Row: {
          created_at: string | null
          dropout_count: number | null
          engagement_score: number | null
          id: string
          module_id: string
          pause_count: number | null
          rewatch_count: number | null
          scene_id: string | null
          seek_count: number | null
          time_position: number
        }
        Insert: {
          created_at?: string | null
          dropout_count?: number | null
          engagement_score?: number | null
          id?: string
          module_id: string
          pause_count?: number | null
          rewatch_count?: number | null
          scene_id?: string | null
          seek_count?: number | null
          time_position: number
        }
        Update: {
          created_at?: string | null
          dropout_count?: number | null
          engagement_score?: number | null
          id?: string
          module_id?: string
          pause_count?: number | null
          rewatch_count?: number | null
          scene_id?: string | null
          seek_count?: number | null
          time_position?: number
        }
        Relationships: [
          {
            foreignKeyName: "module_engagement_heatmaps_module_id_fkey"
            columns: ["module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      module_faq_knowledge: {
        Row: {
          answer: string
          category: string | null
          created_at: string | null
          id: string
          is_active: boolean | null
          module_id: string
          priority: number | null
          question: string
          topic: string
          updated_at: string | null
        }
        Insert: {
          answer: string
          category?: string | null
          created_at?: string | null
          id?: string
          is_active?: boolean | null
          module_id: string
          priority?: number | null
          question: string
          topic: string
          updated_at?: string | null
        }
        Update: {
          answer?: string
          category?: string | null
          created_at?: string | null
          id?: string
          is_active?: boolean | null
          module_id?: string
          priority?: number | null
          question?: string
          topic?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "module_faq_knowledge_module_id_fkey"
            columns: ["module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      monthly_service_reports: {
        Row: {
          case_breakdown: Json | null
          company_id: string
          created_at: string | null
          deliverables_completed: Json | null
          generated_at: string | null
          generated_by: string | null
          id: string
          overage_amount: number | null
          overage_hours: number | null
          pdf_url: string | null
          report_month: string
          retainer_id: string | null
          risk_score_changes: Json | null
          service_summary: Json | null
          status: string | null
          total_cases_opened: number | null
          total_cases_resolved: number | null
          total_hours_used: number | null
          updated_at: string | null
        }
        Insert: {
          case_breakdown?: Json | null
          company_id: string
          created_at?: string | null
          deliverables_completed?: Json | null
          generated_at?: string | null
          generated_by?: string | null
          id?: string
          overage_amount?: number | null
          overage_hours?: number | null
          pdf_url?: string | null
          report_month: string
          retainer_id?: string | null
          risk_score_changes?: Json | null
          service_summary?: Json | null
          status?: string | null
          total_cases_opened?: number | null
          total_cases_resolved?: number | null
          total_hours_used?: number | null
          updated_at?: string | null
        }
        Update: {
          case_breakdown?: Json | null
          company_id?: string
          created_at?: string | null
          deliverables_completed?: Json | null
          generated_at?: string | null
          generated_by?: string | null
          id?: string
          overage_amount?: number | null
          overage_hours?: number | null
          pdf_url?: string | null
          report_month?: string
          retainer_id?: string | null
          risk_score_changes?: Json | null
          service_summary?: Json | null
          status?: string | null
          total_cases_opened?: number | null
          total_cases_resolved?: number | null
          total_hours_used?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "monthly_service_reports_retainer_id_fkey"
            columns: ["retainer_id"]
            isOneToOne: false
            referencedRelation: "hroiq_client_retainers"
            referencedColumns: ["id"]
          },
        ]
      }
      navigation_layouts: {
        Row: {
          company_id: string | null
          created_at: string
          id: string
          is_active: boolean
          is_admin_preset: boolean
          layout_data: Json
          layout_name: string
          updated_at: string
          user_id: string | null
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          id?: string
          is_active?: boolean
          is_admin_preset?: boolean
          layout_data: Json
          layout_name?: string
          updated_at?: string
          user_id?: string | null
        }
        Update: {
          company_id?: string | null
          created_at?: string
          id?: string
          is_active?: boolean
          is_admin_preset?: boolean
          layout_data?: Json
          layout_name?: string
          updated_at?: string
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "navigation_layouts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      newsletter_subscribers: {
        Row: {
          created_at: string
          email: string
          id: string
          is_active: boolean
          metadata: Json | null
          name: string | null
          preferences: Json | null
          source: string
          subscribed_at: string
          tags: string[] | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          email: string
          id?: string
          is_active?: boolean
          metadata?: Json | null
          name?: string | null
          preferences?: Json | null
          source?: string
          subscribed_at?: string
          tags?: string[] | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          email?: string
          id?: string
          is_active?: boolean
          metadata?: Json | null
          name?: string | null
          preferences?: Json | null
          source?: string
          subscribed_at?: string
          tags?: string[] | null
          updated_at?: string
        }
        Relationships: []
      }
      notifications: {
        Row: {
          action_url: string | null
          created_at: string
          id: string
          is_read: boolean
          message: string
          metadata: Json | null
          read_at: string | null
          title: string
          type: string
          user_id: string
        }
        Insert: {
          action_url?: string | null
          created_at?: string
          id?: string
          is_read?: boolean
          message: string
          metadata?: Json | null
          read_at?: string | null
          title: string
          type: string
          user_id: string
        }
        Update: {
          action_url?: string | null
          created_at?: string
          id?: string
          is_read?: boolean
          message?: string
          metadata?: Json | null
          read_at?: string | null
          title?: string
          type?: string
          user_id?: string
        }
        Relationships: []
      }
      oauth_configurations: {
        Row: {
          app_name: string
          auth_url: string
          client_id: string
          client_secret: string
          created_at: string | null
          id: string
          is_active: boolean | null
          redirect_uri: string | null
          scope: string | null
          token_url: string
          updated_at: string | null
        }
        Insert: {
          app_name: string
          auth_url: string
          client_id: string
          client_secret: string
          created_at?: string | null
          id?: string
          is_active?: boolean | null
          redirect_uri?: string | null
          scope?: string | null
          token_url: string
          updated_at?: string | null
        }
        Update: {
          app_name?: string
          auth_url?: string
          client_id?: string
          client_secret?: string
          created_at?: string | null
          id?: string
          is_active?: boolean | null
          redirect_uri?: string | null
          scope?: string | null
          token_url?: string
          updated_at?: string | null
        }
        Relationships: []
      }
      ofac_screening_logs: {
        Row: {
          id: string
          instruction_id: string
          match_details: Json | null
          recipient_name: string
          screened_at: string
          screened_by: string
          screening_result: string
        }
        Insert: {
          id?: string
          instruction_id: string
          match_details?: Json | null
          recipient_name: string
          screened_at?: string
          screened_by?: string
          screening_result: string
        }
        Update: {
          id?: string
          instruction_id?: string
          match_details?: Json | null
          recipient_name?: string
          screened_at?: string
          screened_by?: string
          screening_result?: string
        }
        Relationships: [
          {
            foreignKeyName: "ofac_screening_logs_instruction_id_fkey"
            columns: ["instruction_id"]
            isOneToOne: false
            referencedRelation: "disbursement_instructions"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_codes: {
        Row: {
          code: string
          company_id: string | null
          created_at: string | null
          created_by: string | null
          department: string | null
          employee_email: string | null
          employee_first_name: string | null
          employee_last_name: string | null
          expires_at: string | null
          id: string
          is_used: boolean | null
          position_title: string | null
          updated_at: string | null
          work_state: string
        }
        Insert: {
          code: string
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          department?: string | null
          employee_email?: string | null
          employee_first_name?: string | null
          employee_last_name?: string | null
          expires_at?: string | null
          id?: string
          is_used?: boolean | null
          position_title?: string | null
          updated_at?: string | null
          work_state: string
        }
        Update: {
          code?: string
          company_id?: string | null
          created_at?: string | null
          created_by?: string | null
          department?: string | null
          employee_email?: string | null
          employee_first_name?: string | null
          employee_last_name?: string | null
          expires_at?: string | null
          id?: string
          is_used?: boolean | null
          position_title?: string | null
          updated_at?: string | null
          work_state?: string
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_codes_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_companies: {
        Row: {
          company_address: Json | null
          company_logo_url: string | null
          company_name: string
          created_at: string | null
          default_language: Database["public"]["Enums"]["user_language"] | null
          id: string
          is_active: boolean | null
          phone: string | null
          primary_contact_email: string
          primary_contact_name: string | null
          states_operating: string[]
          updated_at: string | null
        }
        Insert: {
          company_address?: Json | null
          company_logo_url?: string | null
          company_name: string
          created_at?: string | null
          default_language?: Database["public"]["Enums"]["user_language"] | null
          id?: string
          is_active?: boolean | null
          phone?: string | null
          primary_contact_email: string
          primary_contact_name?: string | null
          states_operating?: string[]
          updated_at?: string | null
        }
        Update: {
          company_address?: Json | null
          company_logo_url?: string | null
          company_name?: string
          created_at?: string | null
          default_language?: Database["public"]["Enums"]["user_language"] | null
          id?: string
          is_active?: boolean | null
          phone?: string | null
          primary_contact_email?: string
          primary_contact_name?: string | null
          states_operating?: string[]
          updated_at?: string | null
        }
        Relationships: []
      }
      onboarding_configs: {
        Row: {
          allow_employee_portal_access: boolean | null
          client_id: string
          created_at: string
          created_by: string | null
          id: string
          intro_video_url: string | null
          job_custom_fields: Json | null
          language_toggle: Database["public"]["Enums"]["language_option"] | null
          next_steps_body: string | null
          next_steps_subject: string | null
          require_manager_approval: boolean | null
          show_orientation_calendar_link: boolean | null
          updated_at: string
          updated_by: string | null
          welcome_text: string | null
        }
        Insert: {
          allow_employee_portal_access?: boolean | null
          client_id: string
          created_at?: string
          created_by?: string | null
          id?: string
          intro_video_url?: string | null
          job_custom_fields?: Json | null
          language_toggle?:
            | Database["public"]["Enums"]["language_option"]
            | null
          next_steps_body?: string | null
          next_steps_subject?: string | null
          require_manager_approval?: boolean | null
          show_orientation_calendar_link?: boolean | null
          updated_at?: string
          updated_by?: string | null
          welcome_text?: string | null
        }
        Update: {
          allow_employee_portal_access?: boolean | null
          client_id?: string
          created_at?: string
          created_by?: string | null
          id?: string
          intro_video_url?: string | null
          job_custom_fields?: Json | null
          language_toggle?:
            | Database["public"]["Enums"]["language_option"]
            | null
          next_steps_body?: string | null
          next_steps_subject?: string | null
          require_manager_approval?: boolean | null
          show_orientation_calendar_link?: boolean | null
          updated_at?: string
          updated_by?: string | null
          welcome_text?: string | null
        }
        Relationships: []
      }
      onboarding_custom_fields: {
        Row: {
          created_at: string
          display_order: number | null
          field_label: string
          field_options: Json | null
          field_type: string
          id: string
          is_required: boolean | null
          onboarding_config_id: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          display_order?: number | null
          field_label: string
          field_options?: Json | null
          field_type: string
          id?: string
          is_required?: boolean | null
          onboarding_config_id: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          display_order?: number | null
          field_label?: string
          field_options?: Json | null
          field_type?: string
          id?: string
          is_required?: boolean | null
          onboarding_config_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_custom_fields_onboarding_config_id_fkey"
            columns: ["onboarding_config_id"]
            isOneToOne: false
            referencedRelation: "onboarding_configs"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_documents: {
        Row: {
          document_type: Database["public"]["Enums"]["onboarding_document_type"]
          employee_onboarding_id: string | null
          file_name: string
          file_path: string
          file_size: number | null
          id: string
          is_required: boolean | null
          mime_type: string | null
          signature_data: Json | null
          signed_at: string | null
          uploaded_at: string | null
        }
        Insert: {
          document_type: Database["public"]["Enums"]["onboarding_document_type"]
          employee_onboarding_id?: string | null
          file_name: string
          file_path: string
          file_size?: number | null
          id?: string
          is_required?: boolean | null
          mime_type?: string | null
          signature_data?: Json | null
          signed_at?: string | null
          uploaded_at?: string | null
        }
        Update: {
          document_type?: Database["public"]["Enums"]["onboarding_document_type"]
          employee_onboarding_id?: string | null
          file_name?: string
          file_path?: string
          file_size?: number | null
          id?: string
          is_required?: boolean | null
          mime_type?: string | null
          signature_data?: Json | null
          signed_at?: string | null
          uploaded_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_documents_employee_onboarding_id_fkey"
            columns: ["employee_onboarding_id"]
            isOneToOne: false
            referencedRelation: "employee_onboarding"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_employee_imports: {
        Row: {
          created_at: string | null
          file_name: string | null
          file_url: string | null
          id: string
          import_data: Json | null
          onboarding_profile_id: string | null
          status: string | null
          validation_results: Json | null
        }
        Insert: {
          created_at?: string | null
          file_name?: string | null
          file_url?: string | null
          id?: string
          import_data?: Json | null
          onboarding_profile_id?: string | null
          status?: string | null
          validation_results?: Json | null
        }
        Update: {
          created_at?: string | null
          file_name?: string | null
          file_url?: string | null
          id?: string
          import_data?: Json | null
          onboarding_profile_id?: string | null
          status?: string | null
          validation_results?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_employee_imports_onboarding_profile_id_fkey"
            columns: ["onboarding_profile_id"]
            isOneToOne: false
            referencedRelation: "onboarding_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_form_data: {
        Row: {
          completed_at: string | null
          employee_onboarding_id: string | null
          form_data: Json
          form_type: Database["public"]["Enums"]["onboarding_document_type"]
          id: string
          signature_data: Json | null
          signed_at: string | null
        }
        Insert: {
          completed_at?: string | null
          employee_onboarding_id?: string | null
          form_data: Json
          form_type: Database["public"]["Enums"]["onboarding_document_type"]
          id?: string
          signature_data?: Json | null
          signed_at?: string | null
        }
        Update: {
          completed_at?: string | null
          employee_onboarding_id?: string | null
          form_data?: Json
          form_type?: Database["public"]["Enums"]["onboarding_document_type"]
          id?: string
          signature_data?: Json | null
          signed_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_form_data_employee_onboarding_id_fkey"
            columns: ["employee_onboarding_id"]
            isOneToOne: false
            referencedRelation: "employee_onboarding"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_logs: {
        Row: {
          created_at: string | null
          created_by: string | null
          details: Json | null
          id: string
          log_type: string
          message: string
          onboarding_profile_id: string | null
          resolved: boolean | null
          severity: string | null
          step_number: number | null
        }
        Insert: {
          created_at?: string | null
          created_by?: string | null
          details?: Json | null
          id?: string
          log_type: string
          message: string
          onboarding_profile_id?: string | null
          resolved?: boolean | null
          severity?: string | null
          step_number?: number | null
        }
        Update: {
          created_at?: string | null
          created_by?: string | null
          details?: Json | null
          id?: string
          log_type?: string
          message?: string
          onboarding_profile_id?: string | null
          resolved?: boolean | null
          severity?: string | null
          step_number?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_logs_onboarding_profile_id_fkey"
            columns: ["onboarding_profile_id"]
            isOneToOne: false
            referencedRelation: "onboarding_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_profiles: {
        Row: {
          account_number: string | null
          ach_authorized: boolean | null
          bank_account_holder: string | null
          bank_verification_doc: string | null
          business_address: Json | null
          company_id: string | null
          completed_at: string | null
          created_at: string | null
          created_by: string | null
          current_step: number | null
          ein: string | null
          entity_type: string | null
          federal_ein: string | null
          id: string
          industry: string | null
          legal_company_name: string | null
          local_tax_ids: Json | null
          monthly_pricing: Json | null
          naics_code: string | null
          onboarding_score: number | null
          power_of_attorney_docs: string[] | null
          routing_number: string | null
          selected_addons: string[] | null
          service_plan_type: string | null
          state_unemployment_id: string | null
          state_withholding_account: string | null
          status: string | null
          updated_at: string | null
        }
        Insert: {
          account_number?: string | null
          ach_authorized?: boolean | null
          bank_account_holder?: string | null
          bank_verification_doc?: string | null
          business_address?: Json | null
          company_id?: string | null
          completed_at?: string | null
          created_at?: string | null
          created_by?: string | null
          current_step?: number | null
          ein?: string | null
          entity_type?: string | null
          federal_ein?: string | null
          id?: string
          industry?: string | null
          legal_company_name?: string | null
          local_tax_ids?: Json | null
          monthly_pricing?: Json | null
          naics_code?: string | null
          onboarding_score?: number | null
          power_of_attorney_docs?: string[] | null
          routing_number?: string | null
          selected_addons?: string[] | null
          service_plan_type?: string | null
          state_unemployment_id?: string | null
          state_withholding_account?: string | null
          status?: string | null
          updated_at?: string | null
        }
        Update: {
          account_number?: string | null
          ach_authorized?: boolean | null
          bank_account_holder?: string | null
          bank_verification_doc?: string | null
          business_address?: Json | null
          company_id?: string | null
          completed_at?: string | null
          created_at?: string | null
          created_by?: string | null
          current_step?: number | null
          ein?: string | null
          entity_type?: string | null
          federal_ein?: string | null
          id?: string
          industry?: string | null
          legal_company_name?: string | null
          local_tax_ids?: Json | null
          monthly_pricing?: Json | null
          naics_code?: string | null
          onboarding_score?: number | null
          power_of_attorney_docs?: string[] | null
          routing_number?: string | null
          selected_addons?: string[] | null
          service_plan_type?: string | null
          state_unemployment_id?: string | null
          state_withholding_account?: string | null
          status?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_profiles_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_progress: {
        Row: {
          completed: boolean | null
          completed_at: string | null
          created_at: string | null
          halo_alerts: Json | null
          id: string
          onboarding_profile_id: string | null
          step_name: string
          step_number: number
          updated_at: string | null
          validation_errors: Json | null
        }
        Insert: {
          completed?: boolean | null
          completed_at?: string | null
          created_at?: string | null
          halo_alerts?: Json | null
          id?: string
          onboarding_profile_id?: string | null
          step_name: string
          step_number: number
          updated_at?: string | null
          validation_errors?: Json | null
        }
        Update: {
          completed?: boolean | null
          completed_at?: string | null
          created_at?: string | null
          halo_alerts?: Json | null
          id?: string
          onboarding_profile_id?: string | null
          step_name?: string
          step_number?: number
          updated_at?: string | null
          validation_errors?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_progress_onboarding_profile_id_fkey"
            columns: ["onboarding_profile_id"]
            isOneToOne: false
            referencedRelation: "onboarding_profiles"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_settings: {
        Row: {
          company_id: string
          created_at: string | null
          custom_closing_message: string | null
          default_next_steps_email: string | null
          id: string
          intro_video_url: string | null
          is_active: boolean | null
          required_acknowledgments_by_state: Json | null
          required_trainings: string[] | null
          updated_at: string | null
          welcome_message: string | null
          workflow_steps: Json | null
        }
        Insert: {
          company_id: string
          created_at?: string | null
          custom_closing_message?: string | null
          default_next_steps_email?: string | null
          id?: string
          intro_video_url?: string | null
          is_active?: boolean | null
          required_acknowledgments_by_state?: Json | null
          required_trainings?: string[] | null
          updated_at?: string | null
          welcome_message?: string | null
          workflow_steps?: Json | null
        }
        Update: {
          company_id?: string
          created_at?: string | null
          custom_closing_message?: string | null
          default_next_steps_email?: string | null
          id?: string
          intro_video_url?: string | null
          is_active?: boolean | null
          required_acknowledgments_by_state?: Json | null
          required_trainings?: string[] | null
          updated_at?: string | null
          welcome_message?: string | null
          workflow_steps?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_settings_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      onboarding_training_assignments: {
        Row: {
          created_at: string
          display_order: number | null
          id: string
          is_required: boolean | null
          module_name: string
          onboarding_config_id: string
          training_module_id: string | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          display_order?: number | null
          id?: string
          is_required?: boolean | null
          module_name: string
          onboarding_config_id: string
          training_module_id?: string | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          display_order?: number | null
          id?: string
          is_required?: boolean | null
          module_name?: string
          onboarding_config_id?: string
          training_module_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "onboarding_training_assignments_onboarding_config_id_fkey"
            columns: ["onboarding_config_id"]
            isOneToOne: false
            referencedRelation: "onboarding_configs"
            referencedColumns: ["id"]
          },
        ]
      }
      one_time_payments: {
        Row: {
          amount: number
          created_at: string
          employee_count: number
          id: string
          package_id: string | null
          status: string
          stripe_customer_id: string | null
          stripe_payment_intent_id: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          amount: number
          created_at?: string
          employee_count: number
          id?: string
          package_id?: string | null
          status?: string
          stripe_customer_id?: string | null
          stripe_payment_intent_id?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          amount?: number
          created_at?: string
          employee_count?: number
          id?: string
          package_id?: string | null
          status?: string
          stripe_customer_id?: string | null
          stripe_payment_intent_id?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "one_time_payments_package_id_fkey"
            columns: ["package_id"]
            isOneToOne: false
            referencedRelation: "course_packages"
            referencedColumns: ["id"]
          },
        ]
      }
      org_departments: {
        Row: {
          code: string | null
          created_at: string
          division_id: string
          id: string
          is_active: boolean
          name: string
          updated_at: string
        }
        Insert: {
          code?: string | null
          created_at?: string
          division_id: string
          id?: string
          is_active?: boolean
          name: string
          updated_at?: string
        }
        Update: {
          code?: string | null
          created_at?: string
          division_id?: string
          id?: string
          is_active?: boolean
          name?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "org_departments_division_id_fkey"
            columns: ["division_id"]
            isOneToOne: false
            referencedRelation: "org_divisions"
            referencedColumns: ["id"]
          },
        ]
      }
      org_divisions: {
        Row: {
          code: string | null
          company_id: string
          created_at: string
          default_bank_account_id: string | null
          id: string
          invoice_template_id: string | null
          is_active: boolean
          location_id: string
          name: string
          notes: string | null
          payroll_schedule_id: string | null
          updated_at: string
        }
        Insert: {
          code?: string | null
          company_id: string
          created_at?: string
          default_bank_account_id?: string | null
          id?: string
          invoice_template_id?: string | null
          is_active?: boolean
          location_id: string
          name: string
          notes?: string | null
          payroll_schedule_id?: string | null
          updated_at?: string
        }
        Update: {
          code?: string | null
          company_id?: string
          created_at?: string
          default_bank_account_id?: string | null
          id?: string
          invoice_template_id?: string | null
          is_active?: boolean
          location_id?: string
          name?: string
          notes?: string | null
          payroll_schedule_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "org_divisions_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "org_divisions_location_id_fkey"
            columns: ["location_id"]
            isOneToOne: false
            referencedRelation: "org_locations"
            referencedColumns: ["id"]
          },
        ]
      }
      org_locations: {
        Row: {
          address_line1: string | null
          address_line2: string | null
          city: string | null
          code: string | null
          company_id: string
          country: string | null
          created_at: string
          default_bank_account_id: string | null
          id: string
          is_active: boolean
          name: string
          state: string | null
          timezone: string | null
          updated_at: string
          zip: string | null
        }
        Insert: {
          address_line1?: string | null
          address_line2?: string | null
          city?: string | null
          code?: string | null
          company_id: string
          country?: string | null
          created_at?: string
          default_bank_account_id?: string | null
          id?: string
          is_active?: boolean
          name: string
          state?: string | null
          timezone?: string | null
          updated_at?: string
          zip?: string | null
        }
        Update: {
          address_line1?: string | null
          address_line2?: string | null
          city?: string | null
          code?: string | null
          company_id?: string
          country?: string | null
          created_at?: string
          default_bank_account_id?: string | null
          id?: string
          is_active?: boolean
          name?: string
          state?: string | null
          timezone?: string | null
          updated_at?: string
          zip?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "org_locations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      partner_applications: {
        Row: {
          applicant_name: string
          application_status: string
          bank_info_document_url: string | null
          company_name: string
          created_at: string
          digital_signature_data: Json | null
          email: string
          experience_years: number | null
          id: string
          license_document_url: string | null
          phone: string | null
          previous_staffing_experience: string | null
          rejection_reason: string | null
          reviewed_at: string | null
          reviewed_by: string | null
          submitted_at: string
          territory_id: string | null
          updated_at: string
          w9_document_url: string | null
        }
        Insert: {
          applicant_name: string
          application_status?: string
          bank_info_document_url?: string | null
          company_name: string
          created_at?: string
          digital_signature_data?: Json | null
          email: string
          experience_years?: number | null
          id?: string
          license_document_url?: string | null
          phone?: string | null
          previous_staffing_experience?: string | null
          rejection_reason?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          submitted_at?: string
          territory_id?: string | null
          updated_at?: string
          w9_document_url?: string | null
        }
        Update: {
          applicant_name?: string
          application_status?: string
          bank_info_document_url?: string | null
          company_name?: string
          created_at?: string
          digital_signature_data?: Json | null
          email?: string
          experience_years?: number | null
          id?: string
          license_document_url?: string | null
          phone?: string | null
          previous_staffing_experience?: string | null
          rejection_reason?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          submitted_at?: string
          territory_id?: string | null
          updated_at?: string
          w9_document_url?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "partner_applications_territory_id_fkey"
            columns: ["territory_id"]
            isOneToOne: false
            referencedRelation: "territories"
            referencedColumns: ["id"]
          },
        ]
      }
      password_policies: {
        Row: {
          created_at: string
          history_check_count: number | null
          id: string
          is_active: boolean | null
          lockout_duration_minutes: number | null
          max_age_days: number | null
          max_failed_attempts: number | null
          min_length: number
          policy_name: string
          require_lowercase: boolean | null
          require_numbers: boolean | null
          require_special_chars: boolean | null
          require_uppercase: boolean | null
        }
        Insert: {
          created_at?: string
          history_check_count?: number | null
          id?: string
          is_active?: boolean | null
          lockout_duration_minutes?: number | null
          max_age_days?: number | null
          max_failed_attempts?: number | null
          min_length?: number
          policy_name: string
          require_lowercase?: boolean | null
          require_numbers?: boolean | null
          require_special_chars?: boolean | null
          require_uppercase?: boolean | null
        }
        Update: {
          created_at?: string
          history_check_count?: number | null
          id?: string
          is_active?: boolean | null
          lockout_duration_minutes?: number | null
          max_age_days?: number | null
          max_failed_attempts?: number | null
          min_length?: number
          policy_name?: string
          require_lowercase?: boolean | null
          require_numbers?: boolean | null
          require_special_chars?: boolean | null
          require_uppercase?: boolean | null
        }
        Relationships: []
      }
      pay_group_employee_assignments: {
        Row: {
          assigned_at: string | null
          assigned_by: string | null
          created_at: string | null
          employee_email: string | null
          employee_id: string
          employee_name: string
          id: string
          is_active: boolean | null
          notes: string | null
          pay_group_id: string
          updated_at: string | null
        }
        Insert: {
          assigned_at?: string | null
          assigned_by?: string | null
          created_at?: string | null
          employee_email?: string | null
          employee_id: string
          employee_name: string
          id?: string
          is_active?: boolean | null
          notes?: string | null
          pay_group_id: string
          updated_at?: string | null
        }
        Update: {
          assigned_at?: string | null
          assigned_by?: string | null
          created_at?: string | null
          employee_email?: string | null
          employee_id?: string
          employee_name?: string
          id?: string
          is_active?: boolean | null
          notes?: string | null
          pay_group_id?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "pay_group_employee_assignments_pay_group_id_fkey"
            columns: ["pay_group_id"]
            isOneToOne: false
            referencedRelation: "pay_groups"
            referencedColumns: ["id"]
          },
        ]
      }
      pay_group_employees: {
        Row: {
          assigned_at: string | null
          assigned_by: string | null
          employee_id: string
          id: string
          is_active: boolean | null
          pay_group_id: string
        }
        Insert: {
          assigned_at?: string | null
          assigned_by?: string | null
          employee_id: string
          id?: string
          is_active?: boolean | null
          pay_group_id: string
        }
        Update: {
          assigned_at?: string | null
          assigned_by?: string | null
          employee_id?: string
          id?: string
          is_active?: boolean | null
          pay_group_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "pay_group_employees_pay_group_id_fkey"
            columns: ["pay_group_id"]
            isOneToOne: false
            referencedRelation: "pay_groups"
            referencedColumns: ["id"]
          },
        ]
      }
      pay_groups: {
        Row: {
          company_id: string
          created_at: string | null
          created_by: string | null
          default_cost_center: string | null
          description: string | null
          id: string
          is_active: boolean | null
          name: string
          next_pay_date: string | null
          pay_calendar_config: Json | null
          pay_frequency: string | null
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          company_id: string
          created_at?: string | null
          created_by?: string | null
          default_cost_center?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          name: string
          next_pay_date?: string | null
          pay_calendar_config?: Json | null
          pay_frequency?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          company_id?: string
          created_at?: string | null
          created_by?: string | null
          default_cost_center?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          name?: string
          next_pay_date?: string | null
          pay_calendar_config?: Json | null
          pay_frequency?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "pay_groups_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      pay_stub_access_logs: {
        Row: {
          access_type: string
          accessed_at: string
          accessed_by: string
          company_id: string
          id: string
          ip_address: unknown | null
          pay_stub_id: string
          user_agent: string | null
        }
        Insert: {
          access_type: string
          accessed_at?: string
          accessed_by: string
          company_id: string
          id?: string
          ip_address?: unknown | null
          pay_stub_id: string
          user_agent?: string | null
        }
        Update: {
          access_type?: string
          accessed_at?: string
          accessed_by?: string
          company_id?: string
          id?: string
          ip_address?: unknown | null
          pay_stub_id?: string
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "pay_stub_access_logs_pay_stub_id_fkey"
            columns: ["pay_stub_id"]
            isOneToOne: false
            referencedRelation: "pay_stubs"
            referencedColumns: ["id"]
          },
        ]
      }
      pay_stubs: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          deductions_breakdown: Json
          direct_deposit_breakdown: Json | null
          earnings_breakdown: Json
          employee_id: string
          gross_pay: number
          id: string
          metadata: Json | null
          net_pay: number
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_calculation_id: string
          payroll_period_id: string
          pdf_file_path: string | null
          pdf_generated_at: string | null
          status: string
          stub_number: string
          taxes_breakdown: Json
          total_deductions: number
          total_taxes: number
          updated_at: string
          ytd_gross_pay: number
          ytd_net_pay: number
          ytd_taxes: number
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          deductions_breakdown?: Json
          direct_deposit_breakdown?: Json | null
          earnings_breakdown?: Json
          employee_id: string
          gross_pay?: number
          id?: string
          metadata?: Json | null
          net_pay?: number
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_calculation_id: string
          payroll_period_id: string
          pdf_file_path?: string | null
          pdf_generated_at?: string | null
          status?: string
          stub_number: string
          taxes_breakdown?: Json
          total_deductions?: number
          total_taxes?: number
          updated_at?: string
          ytd_gross_pay?: number
          ytd_net_pay?: number
          ytd_taxes?: number
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          deductions_breakdown?: Json
          direct_deposit_breakdown?: Json | null
          earnings_breakdown?: Json
          employee_id?: string
          gross_pay?: number
          id?: string
          metadata?: Json | null
          net_pay?: number
          pay_date?: string
          pay_period_end?: string
          pay_period_start?: string
          payroll_calculation_id?: string
          payroll_period_id?: string
          pdf_file_path?: string | null
          pdf_generated_at?: string | null
          status?: string
          stub_number?: string
          taxes_breakdown?: Json
          total_deductions?: number
          total_taxes?: number
          updated_at?: string
          ytd_gross_pay?: number
          ytd_net_pay?: number
          ytd_taxes?: number
        }
        Relationships: []
      }
      pay_type_audit_trail: {
        Row: {
          action_type: string
          changed_fields: string[] | null
          id: string
          new_values: Json | null
          notes: string | null
          old_values: Json | null
          pay_type_id: string
          performed_at: string | null
          performed_by: string | null
        }
        Insert: {
          action_type: string
          changed_fields?: string[] | null
          id?: string
          new_values?: Json | null
          notes?: string | null
          old_values?: Json | null
          pay_type_id: string
          performed_at?: string | null
          performed_by?: string | null
        }
        Update: {
          action_type?: string
          changed_fields?: string[] | null
          id?: string
          new_values?: Json | null
          notes?: string | null
          old_values?: Json | null
          pay_type_id?: string
          performed_at?: string | null
          performed_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "pay_type_audit_trail_pay_type_id_fkey"
            columns: ["pay_type_id"]
            isOneToOne: false
            referencedRelation: "pay_types"
            referencedColumns: ["id"]
          },
        ]
      }
      pay_types: {
        Row: {
          annual_limit: number | null
          calculation_method: string | null
          code: string
          company_id: string | null
          counts_toward_hours_worked: boolean | null
          created_at: string | null
          created_by: string | null
          deduction_schedule: string | null
          default_rate_multiplier: number | null
          description: string | null
          effective_end_date: string | null
          effective_start_date: string
          employer_match_percentage: number | null
          gl_code: string | null
          gl_mapping_code: string | null
          id: string
          includable_in_regular_rate: boolean | null
          include_in_overtime_calculation: boolean | null
          is_active: boolean | null
          is_global: boolean | null
          is_reimbursable: boolean | null
          is_system_default: boolean | null
          is_taxable_federal: boolean | null
          is_taxable_fica: boolean | null
          is_taxable_medicare: boolean | null
          is_taxable_sdi: boolean | null
          is_taxable_state: boolean | null
          is_taxable_sui: boolean | null
          name: string
          pay_category: Database["public"]["Enums"]["pay_category"]
          per_check_limit: number | null
          reportable_on_w2: boolean | null
          show_on_pay_stub: boolean | null
          state_specific_rules: Json | null
          subject_to_overtime: boolean | null
          updated_at: string | null
          updated_by: string | null
          w2_box_code: string | null
          w2_reporting_code: string | null
        }
        Insert: {
          annual_limit?: number | null
          calculation_method?: string | null
          code: string
          company_id?: string | null
          counts_toward_hours_worked?: boolean | null
          created_at?: string | null
          created_by?: string | null
          deduction_schedule?: string | null
          default_rate_multiplier?: number | null
          description?: string | null
          effective_end_date?: string | null
          effective_start_date?: string
          employer_match_percentage?: number | null
          gl_code?: string | null
          gl_mapping_code?: string | null
          id?: string
          includable_in_regular_rate?: boolean | null
          include_in_overtime_calculation?: boolean | null
          is_active?: boolean | null
          is_global?: boolean | null
          is_reimbursable?: boolean | null
          is_system_default?: boolean | null
          is_taxable_federal?: boolean | null
          is_taxable_fica?: boolean | null
          is_taxable_medicare?: boolean | null
          is_taxable_sdi?: boolean | null
          is_taxable_state?: boolean | null
          is_taxable_sui?: boolean | null
          name: string
          pay_category?: Database["public"]["Enums"]["pay_category"]
          per_check_limit?: number | null
          reportable_on_w2?: boolean | null
          show_on_pay_stub?: boolean | null
          state_specific_rules?: Json | null
          subject_to_overtime?: boolean | null
          updated_at?: string | null
          updated_by?: string | null
          w2_box_code?: string | null
          w2_reporting_code?: string | null
        }
        Update: {
          annual_limit?: number | null
          calculation_method?: string | null
          code?: string
          company_id?: string | null
          counts_toward_hours_worked?: boolean | null
          created_at?: string | null
          created_by?: string | null
          deduction_schedule?: string | null
          default_rate_multiplier?: number | null
          description?: string | null
          effective_end_date?: string | null
          effective_start_date?: string
          employer_match_percentage?: number | null
          gl_code?: string | null
          gl_mapping_code?: string | null
          id?: string
          includable_in_regular_rate?: boolean | null
          include_in_overtime_calculation?: boolean | null
          is_active?: boolean | null
          is_global?: boolean | null
          is_reimbursable?: boolean | null
          is_system_default?: boolean | null
          is_taxable_federal?: boolean | null
          is_taxable_fica?: boolean | null
          is_taxable_medicare?: boolean | null
          is_taxable_sdi?: boolean | null
          is_taxable_state?: boolean | null
          is_taxable_sui?: boolean | null
          name?: string
          pay_category?: Database["public"]["Enums"]["pay_category"]
          per_check_limit?: number | null
          reportable_on_w2?: boolean | null
          show_on_pay_stub?: boolean | null
          state_specific_rules?: Json | null
          subject_to_overtime?: boolean | null
          updated_at?: string | null
          updated_by?: string | null
          w2_box_code?: string | null
          w2_reporting_code?: string | null
        }
        Relationships: []
      }
      payroll_adjustments: {
        Row: {
          adjustment_type: string
          amount: number
          created_at: string | null
          created_by: string | null
          description: string
          id: string
          payroll_employee_id: string
          payroll_period_id: string
        }
        Insert: {
          adjustment_type: string
          amount: number
          created_at?: string | null
          created_by?: string | null
          description: string
          id?: string
          payroll_employee_id: string
          payroll_period_id: string
        }
        Update: {
          adjustment_type?: string
          amount?: number
          created_at?: string | null
          created_by?: string | null
          description?: string
          id?: string
          payroll_employee_id?: string
          payroll_period_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_adjustments_payroll_employee_id_fkey"
            columns: ["payroll_employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_adjustments_payroll_period_id_fkey"
            columns: ["payroll_period_id"]
            isOneToOne: false
            referencedRelation: "payroll_periods"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_audit_logs: {
        Row: {
          after_state: Json | null
          audit_id: string
          before_state: Json | null
          change_timestamp: string
          change_type: string
          changed_by: string | null
          company_id: string | null
          created_at: string
          entity_id: string
          entity_type: string
          id: string
          ip_address: unknown | null
          reason_comment: string | null
          session_id: string | null
          user_agent: string | null
        }
        Insert: {
          after_state?: Json | null
          audit_id?: string
          before_state?: Json | null
          change_timestamp?: string
          change_type: string
          changed_by?: string | null
          company_id?: string | null
          created_at?: string
          entity_id: string
          entity_type: string
          id?: string
          ip_address?: unknown | null
          reason_comment?: string | null
          session_id?: string | null
          user_agent?: string | null
        }
        Update: {
          after_state?: Json | null
          audit_id?: string
          before_state?: Json | null
          change_timestamp?: string
          change_type?: string
          changed_by?: string | null
          company_id?: string | null
          created_at?: string
          entity_id?: string
          entity_type?: string
          id?: string
          ip_address?: unknown | null
          reason_comment?: string | null
          session_id?: string | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "payroll_audit_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_audit_trail: {
        Row: {
          action_type: string
          calculation_method: string
          compliance_notes: string | null
          created_at: string | null
          created_by: string | null
          details: Json
          id: string
          payroll_employee_id: string | null
          payroll_period_id: string
        }
        Insert: {
          action_type: string
          calculation_method: string
          compliance_notes?: string | null
          created_at?: string | null
          created_by?: string | null
          details?: Json
          id?: string
          payroll_employee_id?: string | null
          payroll_period_id: string
        }
        Update: {
          action_type?: string
          calculation_method?: string
          compliance_notes?: string | null
          created_at?: string | null
          created_by?: string | null
          details?: Json
          id?: string
          payroll_employee_id?: string | null
          payroll_period_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_audit_trail_payroll_employee_id_fkey"
            columns: ["payroll_employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_audit_trail_payroll_period_id_fkey"
            columns: ["payroll_period_id"]
            isOneToOne: false
            referencedRelation: "payroll_periods"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_batch_audit_logs: {
        Row: {
          action_details: Json
          action_type: string
          batch_id: string
          company_id: string
          created_at: string
          id: string
          ip_address: unknown | null
          performed_by: string
          user_agent: string | null
        }
        Insert: {
          action_details?: Json
          action_type: string
          batch_id: string
          company_id: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          performed_by: string
          user_agent?: string | null
        }
        Update: {
          action_details?: Json
          action_type?: string
          batch_id?: string
          company_id?: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          performed_by?: string
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "payroll_batch_audit_logs_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "payroll_batches"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_batch_employees: {
        Row: {
          batch_id: string
          calculation_data: Json | null
          company_id: string
          created_at: string
          employee_id: string
          employee_name: string
          error_details: Json | null
          gross_pay: number | null
          id: string
          net_pay: number | null
          payroll_group: string | null
          processed_at: string | null
          retry_count: number
          status: string
          total_taxes: number | null
          updated_at: string
        }
        Insert: {
          batch_id: string
          calculation_data?: Json | null
          company_id: string
          created_at?: string
          employee_id: string
          employee_name: string
          error_details?: Json | null
          gross_pay?: number | null
          id?: string
          net_pay?: number | null
          payroll_group?: string | null
          processed_at?: string | null
          retry_count?: number
          status?: string
          total_taxes?: number | null
          updated_at?: string
        }
        Update: {
          batch_id?: string
          calculation_data?: Json | null
          company_id?: string
          created_at?: string
          employee_id?: string
          employee_name?: string
          error_details?: Json | null
          gross_pay?: number | null
          id?: string
          net_pay?: number | null
          payroll_group?: string | null
          processed_at?: string | null
          retry_count?: number
          status?: string
          total_taxes?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_batch_employees_batch_id_fkey"
            columns: ["batch_id"]
            isOneToOne: false
            referencedRelation: "payroll_batches"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_batches: {
        Row: {
          batch_name: string
          company_id: string
          completed_at: string | null
          created_at: string
          created_by: string
          error_summary: Json | null
          failed_employees: number
          id: string
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_groups: Json
          processed_by: string | null
          processed_employees: number
          processing_metadata: Json | null
          started_at: string | null
          status: string
          total_employees: number
          total_gross_pay: number
          total_net_pay: number
          total_taxes: number
          updated_at: string
        }
        Insert: {
          batch_name: string
          company_id: string
          completed_at?: string | null
          created_at?: string
          created_by: string
          error_summary?: Json | null
          failed_employees?: number
          id?: string
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_groups?: Json
          processed_by?: string | null
          processed_employees?: number
          processing_metadata?: Json | null
          started_at?: string | null
          status?: string
          total_employees?: number
          total_gross_pay?: number
          total_net_pay?: number
          total_taxes?: number
          updated_at?: string
        }
        Update: {
          batch_name?: string
          company_id?: string
          completed_at?: string | null
          created_at?: string
          created_by?: string
          error_summary?: Json | null
          failed_employees?: number
          id?: string
          pay_date?: string
          pay_period_end?: string
          pay_period_start?: string
          payroll_groups?: Json
          processed_by?: string | null
          processed_employees?: number
          processing_metadata?: Json | null
          started_at?: string | null
          status?: string
          total_employees?: number
          total_gross_pay?: number
          total_net_pay?: number
          total_taxes?: number
          updated_at?: string
        }
        Relationships: []
      }
      payroll_calculations: {
        Row: {
          adjustments: number
          blended_rate: number
          bonus_pay: number
          calculation_details: Json
          created_at: string | null
          gross_pay: number
          id: string
          overtime_pay: number
          payroll_employee_id: string
          payroll_period_id: string
          regular_pay: number
          total_class_pay: number
          total_classes: number
          total_overtime_hours: number
          total_regular_hours: number
          updated_at: string | null
        }
        Insert: {
          adjustments?: number
          blended_rate?: number
          bonus_pay?: number
          calculation_details?: Json
          created_at?: string | null
          gross_pay?: number
          id?: string
          overtime_pay?: number
          payroll_employee_id: string
          payroll_period_id: string
          regular_pay?: number
          total_class_pay?: number
          total_classes?: number
          total_overtime_hours?: number
          total_regular_hours?: number
          updated_at?: string | null
        }
        Update: {
          adjustments?: number
          blended_rate?: number
          bonus_pay?: number
          calculation_details?: Json
          created_at?: string | null
          gross_pay?: number
          id?: string
          overtime_pay?: number
          payroll_employee_id?: string
          payroll_period_id?: string
          regular_pay?: number
          total_class_pay?: number
          total_classes?: number
          total_overtime_hours?: number
          total_regular_hours?: number
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "payroll_calculations_payroll_employee_id_fkey"
            columns: ["payroll_employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_calculations_payroll_period_id_fkey"
            columns: ["payroll_period_id"]
            isOneToOne: false
            referencedRelation: "payroll_periods"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_classes: {
        Row: {
          actual_pay: number
          class_date: string
          class_rate: number
          class_time: string
          class_type: string
          created_at: string | null
          created_by: string | null
          id: string
          is_saturday: boolean
          is_split: boolean
          notes: string | null
          payroll_employee_id: string
          payroll_period_id: string
          split_percentage: number | null
          updated_at: string | null
        }
        Insert: {
          actual_pay: number
          class_date: string
          class_rate: number
          class_time: string
          class_type: string
          created_at?: string | null
          created_by?: string | null
          id?: string
          is_saturday?: boolean
          is_split?: boolean
          notes?: string | null
          payroll_employee_id: string
          payroll_period_id: string
          split_percentage?: number | null
          updated_at?: string | null
        }
        Update: {
          actual_pay?: number
          class_date?: string
          class_rate?: number
          class_time?: string
          class_type?: string
          created_at?: string | null
          created_by?: string | null
          id?: string
          is_saturday?: boolean
          is_split?: boolean
          notes?: string | null
          payroll_employee_id?: string
          payroll_period_id?: string
          split_percentage?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "payroll_classes_payroll_employee_id_fkey"
            columns: ["payroll_employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_classes_payroll_period_id_fkey"
            columns: ["payroll_period_id"]
            isOneToOne: false
            referencedRelation: "payroll_periods"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_deduction_rules: {
        Row: {
          applies_to_earnings: string[] | null
          calculation_config: Json
          calculation_method: string
          company_id: string
          created_at: string
          created_by: string | null
          deduction_id: string
          deduction_type: string
          description: string | null
          effective_date: string
          end_date: string | null
          id: string
          limit_amount: number | null
          limit_type: string | null
          name: string
          priority_order: number | null
          updated_at: string
          version_id: string
        }
        Insert: {
          applies_to_earnings?: string[] | null
          calculation_config?: Json
          calculation_method: string
          company_id: string
          created_at?: string
          created_by?: string | null
          deduction_id: string
          deduction_type: string
          description?: string | null
          effective_date: string
          end_date?: string | null
          id?: string
          limit_amount?: number | null
          limit_type?: string | null
          name: string
          priority_order?: number | null
          updated_at?: string
          version_id?: string
        }
        Update: {
          applies_to_earnings?: string[] | null
          calculation_config?: Json
          calculation_method?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          deduction_id?: string
          deduction_type?: string
          description?: string | null
          effective_date?: string
          end_date?: string | null
          id?: string
          limit_amount?: number | null
          limit_type?: string | null
          name?: string
          priority_order?: number | null
          updated_at?: string
          version_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_deduction_rules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_earnings_definitions: {
        Row: {
          calculation_method: string
          company_id: string
          created_at: string
          created_by: string | null
          description: string | null
          earning_type_id: string
          effective_date: string
          end_date: string | null
          id: string
          include_in_ot_calc: boolean
          is_overtime_eligible: boolean
          multiplier_rate: number | null
          name: string
          taxability: Json
          updated_at: string
          version_id: string
        }
        Insert: {
          calculation_method: string
          company_id: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          earning_type_id: string
          effective_date: string
          end_date?: string | null
          id?: string
          include_in_ot_calc?: boolean
          is_overtime_eligible?: boolean
          multiplier_rate?: number | null
          name: string
          taxability?: Json
          updated_at?: string
          version_id?: string
        }
        Update: {
          calculation_method?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          earning_type_id?: string
          effective_date?: string
          end_date?: string | null
          id?: string
          include_in_ot_calc?: boolean
          is_overtime_eligible?: boolean
          multiplier_rate?: number | null
          name?: string
          taxability?: Json
          updated_at?: string
          version_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_earnings_definitions_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_employee_deductions: {
        Row: {
          amount_type: string
          amount_value: number
          created_at: string
          deduction_code: string | null
          deduction_name: string
          deduction_type_id: string | null
          effective_date: string | null
          employee_id: string
          end_date: string | null
          frequency: string | null
          garnishment_agency: string | null
          garnishment_type: string | null
          id: string
          is_active: boolean | null
          is_pre_tax: boolean | null
          max_amount_per_year: number | null
          updated_at: string
          vendor_name: string | null
        }
        Insert: {
          amount_type?: string
          amount_value?: number
          created_at?: string
          deduction_code?: string | null
          deduction_name: string
          deduction_type_id?: string | null
          effective_date?: string | null
          employee_id: string
          end_date?: string | null
          frequency?: string | null
          garnishment_agency?: string | null
          garnishment_type?: string | null
          id?: string
          is_active?: boolean | null
          is_pre_tax?: boolean | null
          max_amount_per_year?: number | null
          updated_at?: string
          vendor_name?: string | null
        }
        Update: {
          amount_type?: string
          amount_value?: number
          created_at?: string
          deduction_code?: string | null
          deduction_name?: string
          deduction_type_id?: string | null
          effective_date?: string | null
          employee_id?: string
          end_date?: string | null
          frequency?: string | null
          garnishment_agency?: string | null
          garnishment_type?: string | null
          id?: string
          is_active?: boolean | null
          is_pre_tax?: boolean | null
          max_amount_per_year?: number | null
          updated_at?: string
          vendor_name?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "payroll_employee_deductions_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employee_master"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_employee_direct_deposits: {
        Row: {
          account_number_encrypted: string
          account_number_last_four: string
          account_type: string
          allocation_type: string
          allocation_value: number | null
          bank_name: string
          created_at: string
          effective_date: string | null
          employee_id: string
          end_date: string | null
          id: string
          is_active: boolean | null
          is_primary: boolean | null
          priority_order: number | null
          routing_number: string
          updated_at: string
        }
        Insert: {
          account_number_encrypted: string
          account_number_last_four: string
          account_type: string
          allocation_type?: string
          allocation_value?: number | null
          bank_name: string
          created_at?: string
          effective_date?: string | null
          employee_id: string
          end_date?: string | null
          id?: string
          is_active?: boolean | null
          is_primary?: boolean | null
          priority_order?: number | null
          routing_number: string
          updated_at?: string
        }
        Update: {
          account_number_encrypted?: string
          account_number_last_four?: string
          account_type?: string
          allocation_type?: string
          allocation_value?: number | null
          bank_name?: string
          created_at?: string
          effective_date?: string | null
          employee_id?: string
          end_date?: string | null
          id?: string
          is_active?: boolean | null
          is_primary?: boolean | null
          priority_order?: number | null
          routing_number?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_employee_direct_deposits_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employee_master"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_employee_documents: {
        Row: {
          created_at: string
          document_name: string
          document_type: string
          employee_id: string
          file_size: number | null
          file_type: string | null
          file_url: string
          id: string
          is_confidential: boolean | null
          retention_date: string | null
          tags: string[] | null
          upload_date: string | null
          uploaded_by: string | null
        }
        Insert: {
          created_at?: string
          document_name: string
          document_type: string
          employee_id: string
          file_size?: number | null
          file_type?: string | null
          file_url: string
          id?: string
          is_confidential?: boolean | null
          retention_date?: string | null
          tags?: string[] | null
          upload_date?: string | null
          uploaded_by?: string | null
        }
        Update: {
          created_at?: string
          document_name?: string
          document_type?: string
          employee_id?: string
          file_size?: number | null
          file_type?: string | null
          file_url?: string
          id?: string
          is_confidential?: boolean | null
          retention_date?: string | null
          tags?: string[] | null
          upload_date?: string | null
          uploaded_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "payroll_employee_documents_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employee_master"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_employee_master: {
        Row: {
          additional_federal_withholding: number | null
          additional_state_withholding: number | null
          badge_number: string | null
          company_id: string
          compensation_rate: number
          created_at: string
          created_by: string | null
          date_of_birth: string | null
          department: string | null
          direct_deposit_enabled: boolean | null
          division: string | null
          eeo_job_classification: string | null
          employee_number: string | null
          employment_status: string
          federal_allowances: number | null
          federal_filing_status: string | null
          gender: string | null
          hire_date: string
          hire_type: string | null
          id: string
          internal_id: string | null
          is_exempt_federal: boolean | null
          is_exempt_state: boolean | null
          is_test_employee: boolean | null
          job_title: string | null
          legal_first_name: string
          legal_last_name: string
          legal_middle_name: string | null
          local_tax_code: string | null
          mobile_phone: string | null
          overtime_eligible: boolean | null
          pay_frequency: string
          pay_group_id: string | null
          pay_type: string
          personal_email: string | null
          preferred_name: string | null
          region: string | null
          reports_to_id: string | null
          residential_address: Json | null
          shift_differential_rate: number | null
          shift_differential_type: string | null
          ssn_encrypted: string | null
          standard_hours_per_week: number | null
          state_allowances: number | null
          state_filing_status: string | null
          sui_state: string | null
          tax_classification: string | null
          termination_date: string | null
          termination_reason: string | null
          updated_at: string
          updated_by: string | null
          work_location_id: string | null
          workers_comp_code: string | null
        }
        Insert: {
          additional_federal_withholding?: number | null
          additional_state_withholding?: number | null
          badge_number?: string | null
          company_id: string
          compensation_rate?: number
          created_at?: string
          created_by?: string | null
          date_of_birth?: string | null
          department?: string | null
          direct_deposit_enabled?: boolean | null
          division?: string | null
          eeo_job_classification?: string | null
          employee_number?: string | null
          employment_status?: string
          federal_allowances?: number | null
          federal_filing_status?: string | null
          gender?: string | null
          hire_date: string
          hire_type?: string | null
          id?: string
          internal_id?: string | null
          is_exempt_federal?: boolean | null
          is_exempt_state?: boolean | null
          is_test_employee?: boolean | null
          job_title?: string | null
          legal_first_name: string
          legal_last_name: string
          legal_middle_name?: string | null
          local_tax_code?: string | null
          mobile_phone?: string | null
          overtime_eligible?: boolean | null
          pay_frequency?: string
          pay_group_id?: string | null
          pay_type?: string
          personal_email?: string | null
          preferred_name?: string | null
          region?: string | null
          reports_to_id?: string | null
          residential_address?: Json | null
          shift_differential_rate?: number | null
          shift_differential_type?: string | null
          ssn_encrypted?: string | null
          standard_hours_per_week?: number | null
          state_allowances?: number | null
          state_filing_status?: string | null
          sui_state?: string | null
          tax_classification?: string | null
          termination_date?: string | null
          termination_reason?: string | null
          updated_at?: string
          updated_by?: string | null
          work_location_id?: string | null
          workers_comp_code?: string | null
        }
        Update: {
          additional_federal_withholding?: number | null
          additional_state_withholding?: number | null
          badge_number?: string | null
          company_id?: string
          compensation_rate?: number
          created_at?: string
          created_by?: string | null
          date_of_birth?: string | null
          department?: string | null
          direct_deposit_enabled?: boolean | null
          division?: string | null
          eeo_job_classification?: string | null
          employee_number?: string | null
          employment_status?: string
          federal_allowances?: number | null
          federal_filing_status?: string | null
          gender?: string | null
          hire_date?: string
          hire_type?: string | null
          id?: string
          internal_id?: string | null
          is_exempt_federal?: boolean | null
          is_exempt_state?: boolean | null
          is_test_employee?: boolean | null
          job_title?: string | null
          legal_first_name?: string
          legal_last_name?: string
          legal_middle_name?: string | null
          local_tax_code?: string | null
          mobile_phone?: string | null
          overtime_eligible?: boolean | null
          pay_frequency?: string
          pay_group_id?: string | null
          pay_type?: string
          personal_email?: string | null
          preferred_name?: string | null
          region?: string | null
          reports_to_id?: string | null
          residential_address?: Json | null
          shift_differential_rate?: number | null
          shift_differential_type?: string | null
          ssn_encrypted?: string | null
          standard_hours_per_week?: number | null
          state_allowances?: number | null
          state_filing_status?: string | null
          sui_state?: string | null
          tax_classification?: string | null
          termination_date?: string | null
          termination_reason?: string | null
          updated_at?: string
          updated_by?: string | null
          work_location_id?: string | null
          workers_comp_code?: string | null
        }
        Relationships: []
      }
      payroll_employee_notes: {
        Row: {
          created_at: string
          created_by: string
          employee_id: string
          id: string
          is_confidential: boolean | null
          mentioned_users: string[] | null
          note_text: string
          note_type: string | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by: string
          employee_id: string
          id?: string
          is_confidential?: boolean | null
          mentioned_users?: string[] | null
          note_text: string
          note_type?: string | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string
          employee_id?: string
          id?: string
          is_confidential?: boolean | null
          mentioned_users?: string[] | null
          note_text?: string
          note_type?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_employee_notes_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employee_master"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_employee_profiles: {
        Row: {
          base_rate: number
          created_at: string
          created_by: string | null
          deduction_ids: string[] | null
          default_location_id: string | null
          effective_date: string
          employee_id: string
          end_date: string | null
          id: string
          overtime_rate: number | null
          pay_type: string
          status: string
          tax_config: Json
          updated_at: string
          version_id: string
        }
        Insert: {
          base_rate: number
          created_at?: string
          created_by?: string | null
          deduction_ids?: string[] | null
          default_location_id?: string | null
          effective_date: string
          employee_id: string
          end_date?: string | null
          id?: string
          overtime_rate?: number | null
          pay_type: string
          status?: string
          tax_config?: Json
          updated_at?: string
          version_id?: string
        }
        Update: {
          base_rate?: number
          created_at?: string
          created_by?: string | null
          deduction_ids?: string[] | null
          default_location_id?: string | null
          effective_date?: string
          employee_id?: string
          end_date?: string | null
          id?: string
          overtime_rate?: number | null
          pay_type?: string
          status?: string
          tax_config?: Json
          updated_at?: string
          version_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_employee_profiles_default_location_id_fkey"
            columns: ["default_location_id"]
            isOneToOne: false
            referencedRelation: "company_locations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_employee_profiles_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employees"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_employees: {
        Row: {
          badge_qr_code: string | null
          company_id: string
          created_at: string | null
          default_location_id: string | null
          employee_id: string | null
          employee_id_display: string | null
          id: string
          instructor_name: string
          is_active: boolean
          job_title_id: string | null
          last_clock_in_device_id: string | null
          location_id: string | null
          photo_reference_url: string | null
          regular_hourly_rate: number
          saturday_class_rate: number
          standard_class_rate: number
          time_tracking_enabled: boolean | null
          time_tracking_pin_hash: string | null
          time_tracking_timezone: string | null
          updated_at: string | null
          workers_comp_code_id: string | null
        }
        Insert: {
          badge_qr_code?: string | null
          company_id: string
          created_at?: string | null
          default_location_id?: string | null
          employee_id?: string | null
          employee_id_display?: string | null
          id?: string
          instructor_name: string
          is_active?: boolean
          job_title_id?: string | null
          last_clock_in_device_id?: string | null
          location_id?: string | null
          photo_reference_url?: string | null
          regular_hourly_rate?: number
          saturday_class_rate?: number
          standard_class_rate?: number
          time_tracking_enabled?: boolean | null
          time_tracking_pin_hash?: string | null
          time_tracking_timezone?: string | null
          updated_at?: string | null
          workers_comp_code_id?: string | null
        }
        Update: {
          badge_qr_code?: string | null
          company_id?: string
          created_at?: string | null
          default_location_id?: string | null
          employee_id?: string | null
          employee_id_display?: string | null
          id?: string
          instructor_name?: string
          is_active?: boolean
          job_title_id?: string | null
          last_clock_in_device_id?: string | null
          location_id?: string | null
          photo_reference_url?: string | null
          regular_hourly_rate?: number
          saturday_class_rate?: number
          standard_class_rate?: number
          time_tracking_enabled?: boolean | null
          time_tracking_pin_hash?: string | null
          time_tracking_timezone?: string | null
          updated_at?: string | null
          workers_comp_code_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "payroll_employees_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_employees_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_employees_job_title_id_fkey"
            columns: ["job_title_id"]
            isOneToOne: false
            referencedRelation: "job_titles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_employees_location_id_fkey"
            columns: ["location_id"]
            isOneToOne: false
            referencedRelation: "company_locations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_employees_workers_comp_code_id_fkey"
            columns: ["workers_comp_code_id"]
            isOneToOne: false
            referencedRelation: "workers_comp_codes"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_exceptions: {
        Row: {
          assigned_to: string | null
          company_id: string
          created_at: string
          description: string
          employee_id: string | null
          escalated_at: string | null
          exception_type: string
          id: string
          metadata: Json | null
          payroll_run_id: string | null
          resolved_at: string | null
          resolved_by: string | null
          root_cause: string | null
          severity: string
          status: string
          suggested_fix: string | null
          title: string
          updated_at: string
        }
        Insert: {
          assigned_to?: string | null
          company_id: string
          created_at?: string
          description: string
          employee_id?: string | null
          escalated_at?: string | null
          exception_type: string
          id?: string
          metadata?: Json | null
          payroll_run_id?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          root_cause?: string | null
          severity?: string
          status?: string
          suggested_fix?: string | null
          title: string
          updated_at?: string
        }
        Update: {
          assigned_to?: string | null
          company_id?: string
          created_at?: string
          description?: string
          employee_id?: string | null
          escalated_at?: string | null
          exception_type?: string
          id?: string
          metadata?: Json | null
          payroll_run_id?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          root_cause?: string | null
          severity?: string
          status?: string
          suggested_fix?: string | null
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_exceptions_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_exceptions_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_exceptions_payroll_run_id_fkey"
            columns: ["payroll_run_id"]
            isOneToOne: false
            referencedRelation: "payroll_runs"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_export_logs: {
        Row: {
          company_id: string
          created_at: string
          export_format: string
          exported_by: string | null
          file_name: string | null
          file_size: number | null
          id: string
          report_type: string
          status: string
        }
        Insert: {
          company_id: string
          created_at?: string
          export_format: string
          exported_by?: string | null
          file_name?: string | null
          file_size?: number | null
          id?: string
          report_type: string
          status?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          export_format?: string
          exported_by?: string | null
          file_name?: string | null
          file_size?: number | null
          id?: string
          report_type?: string
          status?: string
        }
        Relationships: []
      }
      payroll_pay_run_calculations: {
        Row: {
          calculation_result: Json
          calculation_timestamp: string
          created_at: string
          deductions_breakdown: Json
          earnings_breakdown: Json
          employee_id: string
          employee_profile_version_id: string
          employer_taxes: number
          gross_pay: number
          id: string
          input_data: Json
          net_pay: number
          pay_run_id: string
          taxes_breakdown: Json
          total_deductions: number
          total_taxes: number
        }
        Insert: {
          calculation_result: Json
          calculation_timestamp?: string
          created_at?: string
          deductions_breakdown?: Json
          earnings_breakdown?: Json
          employee_id: string
          employee_profile_version_id: string
          employer_taxes: number
          gross_pay: number
          id?: string
          input_data: Json
          net_pay: number
          pay_run_id: string
          taxes_breakdown?: Json
          total_deductions: number
          total_taxes: number
        }
        Update: {
          calculation_result?: Json
          calculation_timestamp?: string
          created_at?: string
          deductions_breakdown?: Json
          earnings_breakdown?: Json
          employee_id?: string
          employee_profile_version_id?: string
          employer_taxes?: number
          gross_pay?: number
          id?: string
          input_data?: Json
          net_pay?: number
          pay_run_id?: string
          taxes_breakdown?: Json
          total_deductions?: number
          total_taxes?: number
        }
        Relationships: [
          {
            foreignKeyName: "payroll_pay_run_calculations_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_pay_run_calculations_pay_run_id_fkey"
            columns: ["pay_run_id"]
            isOneToOne: false
            referencedRelation: "payroll_pay_runs"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_pay_runs: {
        Row: {
          calculation_metadata: Json | null
          company_id: string
          created_at: string
          created_by: string
          employee_count: number | null
          engine_version: string
          error_details: string | null
          id: string
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          pay_run_id: string
          processed_by: string | null
          processed_on: string | null
          status: string
          total_employer_taxes: number | null
          total_gross_pay: number | null
          total_net_pay: number | null
          updated_at: string
          version_id_map: Json
        }
        Insert: {
          calculation_metadata?: Json | null
          company_id: string
          created_at?: string
          created_by: string
          employee_count?: number | null
          engine_version: string
          error_details?: string | null
          id?: string
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          pay_run_id: string
          processed_by?: string | null
          processed_on?: string | null
          status?: string
          total_employer_taxes?: number | null
          total_gross_pay?: number | null
          total_net_pay?: number | null
          updated_at?: string
          version_id_map?: Json
        }
        Update: {
          calculation_metadata?: Json | null
          company_id?: string
          created_at?: string
          created_by?: string
          employee_count?: number | null
          engine_version?: string
          error_details?: string | null
          id?: string
          pay_date?: string
          pay_period_end?: string
          pay_period_start?: string
          pay_run_id?: string
          processed_by?: string | null
          processed_on?: string | null
          status?: string
          total_employer_taxes?: number | null
          total_gross_pay?: number | null
          total_net_pay?: number | null
          updated_at?: string
          version_id_map?: Json
        }
        Relationships: [
          {
            foreignKeyName: "payroll_pay_runs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_periods: {
        Row: {
          company_id: string
          created_at: string | null
          created_by: string | null
          end_date: string
          id: string
          period_type: string
          start_date: string
          status: string
          updated_at: string | null
        }
        Insert: {
          company_id: string
          created_at?: string | null
          created_by?: string | null
          end_date: string
          id?: string
          period_type?: string
          start_date: string
          status?: string
          updated_at?: string | null
        }
        Update: {
          company_id?: string
          created_at?: string | null
          created_by?: string | null
          end_date?: string
          id?: string
          period_type?: string
          start_date?: string
          status?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "payroll_periods_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_report_uploads: {
        Row: {
          analysis_result: Json | null
          company_id: string | null
          created_at: string | null
          file_url: string
          filename: string
          id: string
          payroll_period_id: string | null
          status: string | null
          updated_at: string | null
          upload_date: string | null
          uploaded_by: string | null
        }
        Insert: {
          analysis_result?: Json | null
          company_id?: string | null
          created_at?: string | null
          file_url: string
          filename: string
          id?: string
          payroll_period_id?: string | null
          status?: string | null
          updated_at?: string | null
          upload_date?: string | null
          uploaded_by?: string | null
        }
        Update: {
          analysis_result?: Json | null
          company_id?: string | null
          created_at?: string | null
          file_url?: string
          filename?: string
          id?: string
          payroll_period_id?: string | null
          status?: string | null
          updated_at?: string | null
          upload_date?: string | null
          uploaded_by?: string | null
        }
        Relationships: []
      }
      payroll_reports: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          filters: Json
          id: string
          report_data: Json
          report_type: string
          status: string
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          filters?: Json
          id?: string
          report_data?: Json
          report_type: string
          status?: string
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          filters?: Json
          id?: string
          report_data?: Json
          report_type?: string
          status?: string
          updated_at?: string
        }
        Relationships: []
      }
      payroll_runs: {
        Row: {
          approved_at: string | null
          approved_by: string | null
          company_id: string
          completed_at: string | null
          created_at: string
          created_by: string | null
          disbursed_at: string | null
          employee_count: number | null
          id: string
          metadata: Json | null
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_frequency: string
          run_name: string
          service_type: string
          status: string
          tax_filed_at: string | null
          total_gross: number | null
          total_net: number | null
          updated_at: string
        }
        Insert: {
          approved_at?: string | null
          approved_by?: string | null
          company_id: string
          completed_at?: string | null
          created_at?: string
          created_by?: string | null
          disbursed_at?: string | null
          employee_count?: number | null
          id?: string
          metadata?: Json | null
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_frequency?: string
          run_name: string
          service_type?: string
          status?: string
          tax_filed_at?: string | null
          total_gross?: number | null
          total_net?: number | null
          updated_at?: string
        }
        Update: {
          approved_at?: string | null
          approved_by?: string | null
          company_id?: string
          completed_at?: string | null
          created_at?: string
          created_by?: string | null
          disbursed_at?: string | null
          employee_count?: number | null
          id?: string
          metadata?: Json | null
          pay_date?: string
          pay_period_end?: string
          pay_period_start?: string
          payroll_frequency?: string
          run_name?: string
          service_type?: string
          status?: string
          tax_filed_at?: string | null
          total_gross?: number | null
          total_net?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_runs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_simulation_logs: {
        Row: {
          company_id: string | null
          created_at: string
          id: string
          input_data: Json
          linked_to_payrun_id: string | null
          output_data: Json
          sim_id: string
          simulated_by: string | null
          simulation_metadata: Json | null
          simulation_timestamp: string
          simulation_type: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          id?: string
          input_data: Json
          linked_to_payrun_id?: string | null
          output_data: Json
          sim_id?: string
          simulated_by?: string | null
          simulation_metadata?: Json | null
          simulation_timestamp?: string
          simulation_type: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          id?: string
          input_data?: Json
          linked_to_payrun_id?: string | null
          output_data?: Json
          sim_id?: string
          simulated_by?: string | null
          simulation_metadata?: Json | null
          simulation_timestamp?: string
          simulation_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_simulation_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_simulation_logs_linked_to_payrun_id_fkey"
            columns: ["linked_to_payrun_id"]
            isOneToOne: false
            referencedRelation: "payroll_pay_runs"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_tax_tables: {
        Row: {
          created_at: string
          created_by: string | null
          effective_date: string
          end_date: string | null
          filing_status: string | null
          flat_rate: number | null
          id: string
          jurisdiction: string
          jurisdiction_type: string
          rate_type: string
          tax_brackets: Json
          tax_type: string
          tax_year: number
          updated_at: string
          version_id: string
          wage_base: number | null
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          effective_date: string
          end_date?: string | null
          filing_status?: string | null
          flat_rate?: number | null
          id?: string
          jurisdiction: string
          jurisdiction_type: string
          rate_type?: string
          tax_brackets?: Json
          tax_type: string
          tax_year: number
          updated_at?: string
          version_id?: string
          wage_base?: number | null
        }
        Update: {
          created_at?: string
          created_by?: string | null
          effective_date?: string
          end_date?: string | null
          filing_status?: string | null
          flat_rate?: number | null
          id?: string
          jurisdiction?: string
          jurisdiction_type?: string
          rate_type?: string
          tax_brackets?: Json
          tax_type?: string
          tax_year?: number
          updated_at?: string
          version_id?: string
          wage_base?: number | null
        }
        Relationships: []
      }
      payroll_tax_withholdings: {
        Row: {
          calculation_details: Json | null
          created_at: string
          employee_id: string
          federal_income_tax: number
          id: string
          medicare_additional: number
          medicare_employee: number
          other_withholdings: number
          payroll_period_id: string
          payroll_record_id: string
          social_security_employee: number
          state_disability_insurance: number
          state_income_tax: number
          state_unemployment_employee: number
          total_withholdings: number
          updated_at: string
        }
        Insert: {
          calculation_details?: Json | null
          created_at?: string
          employee_id: string
          federal_income_tax?: number
          id?: string
          medicare_additional?: number
          medicare_employee?: number
          other_withholdings?: number
          payroll_period_id: string
          payroll_record_id: string
          social_security_employee?: number
          state_disability_insurance?: number
          state_income_tax?: number
          state_unemployment_employee?: number
          total_withholdings?: number
          updated_at?: string
        }
        Update: {
          calculation_details?: Json | null
          created_at?: string
          employee_id?: string
          federal_income_tax?: number
          id?: string
          medicare_additional?: number
          medicare_employee?: number
          other_withholdings?: number
          payroll_period_id?: string
          payroll_record_id?: string
          social_security_employee?: number
          state_disability_insurance?: number
          state_income_tax?: number
          state_unemployment_employee?: number
          total_withholdings?: number
          updated_at?: string
        }
        Relationships: []
      }
      payroll_time_entries: {
        Row: {
          created_at: string | null
          created_by: string | null
          id: string
          payroll_employee_id: string
          payroll_period_id: string
          source: string
          total_hours: number
          updated_at: string | null
          work_date: string
        }
        Insert: {
          created_at?: string | null
          created_by?: string | null
          id?: string
          payroll_employee_id: string
          payroll_period_id: string
          source?: string
          total_hours: number
          updated_at?: string | null
          work_date: string
        }
        Update: {
          created_at?: string | null
          created_by?: string | null
          id?: string
          payroll_employee_id?: string
          payroll_period_id?: string
          source?: string
          total_hours?: number
          updated_at?: string | null
          work_date?: string
        }
        Relationships: [
          {
            foreignKeyName: "payroll_time_entries_payroll_employee_id_fkey"
            columns: ["payroll_employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "payroll_time_entries_payroll_period_id_fkey"
            columns: ["payroll_period_id"]
            isOneToOne: false
            referencedRelation: "payroll_periods"
            referencedColumns: ["id"]
          },
        ]
      }
      payroll_ytd_accumulators: {
        Row: {
          created_at: string
          employee_id: string
          id: string
          last_updated: string
          tax_type: string
          tax_year: number
          updated_at: string
          ytd_taxable_wages: number
          ytd_withheld: number
        }
        Insert: {
          created_at?: string
          employee_id: string
          id?: string
          last_updated?: string
          tax_type: string
          tax_year: number
          updated_at?: string
          ytd_taxable_wages?: number
          ytd_withheld?: number
        }
        Update: {
          created_at?: string
          employee_id?: string
          id?: string
          last_updated?: string
          tax_type?: string
          tax_year?: number
          updated_at?: string
          ytd_taxable_wages?: number
          ytd_withheld?: number
        }
        Relationships: []
      }
      peo_banking_info: {
        Row: {
          account_number_encrypted: string
          account_type: string
          ach_authorization_document_id: string | null
          ach_authorization_signed: boolean | null
          bank_name: string
          created_at: string | null
          first_payroll_date: string | null
          id: string
          is_locked_for_payroll: boolean | null
          is_verified: boolean | null
          routing_number_encrypted: string
          session_id: string | null
          updated_at: string | null
          verification_method: string | null
          verified_at: string | null
          verified_by: string | null
          voided_check_document_id: string | null
        }
        Insert: {
          account_number_encrypted: string
          account_type: string
          ach_authorization_document_id?: string | null
          ach_authorization_signed?: boolean | null
          bank_name: string
          created_at?: string | null
          first_payroll_date?: string | null
          id?: string
          is_locked_for_payroll?: boolean | null
          is_verified?: boolean | null
          routing_number_encrypted: string
          session_id?: string | null
          updated_at?: string | null
          verification_method?: string | null
          verified_at?: string | null
          verified_by?: string | null
          voided_check_document_id?: string | null
        }
        Update: {
          account_number_encrypted?: string
          account_type?: string
          ach_authorization_document_id?: string | null
          ach_authorization_signed?: boolean | null
          bank_name?: string
          created_at?: string | null
          first_payroll_date?: string | null
          id?: string
          is_locked_for_payroll?: boolean | null
          is_verified?: boolean | null
          routing_number_encrypted?: string
          session_id?: string | null
          updated_at?: string | null
          verification_method?: string | null
          verified_at?: string | null
          verified_by?: string | null
          voided_check_document_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_banking_info_ach_authorization_document_id_fkey"
            columns: ["ach_authorization_document_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_documents"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "peo_banking_info_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sessions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "peo_banking_info_voided_check_document_id_fkey"
            columns: ["voided_check_document_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_documents"
            referencedColumns: ["id"]
          },
        ]
      }
      peo_onboarding_documents: {
        Row: {
          created_at: string | null
          description: string | null
          document_type: string
          file_name: string
          file_path: string
          file_size: number | null
          id: string
          is_required: boolean | null
          is_verified: boolean | null
          mime_type: string | null
          section_id: string | null
          session_id: string | null
          uploaded_by: string | null
          verified_at: string | null
          verified_by: string | null
        }
        Insert: {
          created_at?: string | null
          description?: string | null
          document_type: string
          file_name: string
          file_path: string
          file_size?: number | null
          id?: string
          is_required?: boolean | null
          is_verified?: boolean | null
          mime_type?: string | null
          section_id?: string | null
          session_id?: string | null
          uploaded_by?: string | null
          verified_at?: string | null
          verified_by?: string | null
        }
        Update: {
          created_at?: string | null
          description?: string | null
          document_type?: string
          file_name?: string
          file_path?: string
          file_size?: number | null
          id?: string
          is_required?: boolean | null
          is_verified?: boolean | null
          mime_type?: string | null
          section_id?: string | null
          session_id?: string | null
          uploaded_by?: string | null
          verified_at?: string | null
          verified_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_onboarding_documents_section_id_fkey"
            columns: ["section_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sections"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "peo_onboarding_documents_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      peo_onboarding_employees: {
        Row: {
          created_at: string | null
          default_schedule_id: string | null
          department: string | null
          email: string
          first_name: string
          id: string
          invite_sent: boolean | null
          invite_sent_at: string | null
          job_category: string | null
          last_name: string
          onboarding_completed: boolean | null
          onboarding_completed_at: string | null
          pay_type: string | null
          prior_payroll_data: Json | null
          session_id: string | null
          updated_at: string | null
          ytd_deductions: number | null
          ytd_gross: number | null
          ytd_taxes: number | null
        }
        Insert: {
          created_at?: string | null
          default_schedule_id?: string | null
          department?: string | null
          email: string
          first_name: string
          id?: string
          invite_sent?: boolean | null
          invite_sent_at?: string | null
          job_category?: string | null
          last_name: string
          onboarding_completed?: boolean | null
          onboarding_completed_at?: string | null
          pay_type?: string | null
          prior_payroll_data?: Json | null
          session_id?: string | null
          updated_at?: string | null
          ytd_deductions?: number | null
          ytd_gross?: number | null
          ytd_taxes?: number | null
        }
        Update: {
          created_at?: string | null
          default_schedule_id?: string | null
          department?: string | null
          email?: string
          first_name?: string
          id?: string
          invite_sent?: boolean | null
          invite_sent_at?: string | null
          job_category?: string | null
          last_name?: string
          onboarding_completed?: boolean | null
          onboarding_completed_at?: string | null
          pay_type?: string | null
          prior_payroll_data?: Json | null
          session_id?: string | null
          updated_at?: string | null
          ytd_deductions?: number | null
          ytd_gross?: number | null
          ytd_taxes?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_onboarding_employees_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      peo_onboarding_messages: {
        Row: {
          created_at: string | null
          id: string
          is_read: boolean | null
          is_resolved: boolean | null
          message: string
          parent_message_id: string | null
          priority: string | null
          read_at: string | null
          read_by: string | null
          resolved_at: string | null
          resolved_by: string | null
          section_id: string | null
          sent_by: string | null
          sent_to_role: Database["public"]["Enums"]["onboarding_role"] | null
          session_id: string | null
          subject: string
          thread_id: string | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          id?: string
          is_read?: boolean | null
          is_resolved?: boolean | null
          message: string
          parent_message_id?: string | null
          priority?: string | null
          read_at?: string | null
          read_by?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          section_id?: string | null
          sent_by?: string | null
          sent_to_role?: Database["public"]["Enums"]["onboarding_role"] | null
          session_id?: string | null
          subject: string
          thread_id?: string | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          id?: string
          is_read?: boolean | null
          is_resolved?: boolean | null
          message?: string
          parent_message_id?: string | null
          priority?: string | null
          read_at?: string | null
          read_by?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          section_id?: string | null
          sent_by?: string | null
          sent_to_role?: Database["public"]["Enums"]["onboarding_role"] | null
          session_id?: string | null
          subject?: string
          thread_id?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_onboarding_messages_parent_message_id_fkey"
            columns: ["parent_message_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_messages"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "peo_onboarding_messages_section_id_fkey"
            columns: ["section_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sections"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "peo_onboarding_messages_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      peo_onboarding_sections: {
        Row: {
          approval_notes: string | null
          approved_at: string | null
          approved_by: string | null
          completed_at: string | null
          created_at: string | null
          id: string
          is_locked: boolean | null
          lock_reason: string | null
          locked_at: string | null
          locked_by: string | null
          progress: number | null
          requires_approval: boolean | null
          section_data: Json | null
          section_name: string
          section_number: number
          session_id: string | null
          started_at: string | null
          status: Database["public"]["Enums"]["section_status"] | null
          updated_at: string | null
        }
        Insert: {
          approval_notes?: string | null
          approved_at?: string | null
          approved_by?: string | null
          completed_at?: string | null
          created_at?: string | null
          id?: string
          is_locked?: boolean | null
          lock_reason?: string | null
          locked_at?: string | null
          locked_by?: string | null
          progress?: number | null
          requires_approval?: boolean | null
          section_data?: Json | null
          section_name: string
          section_number: number
          session_id?: string | null
          started_at?: string | null
          status?: Database["public"]["Enums"]["section_status"] | null
          updated_at?: string | null
        }
        Update: {
          approval_notes?: string | null
          approved_at?: string | null
          approved_by?: string | null
          completed_at?: string | null
          created_at?: string | null
          id?: string
          is_locked?: boolean | null
          lock_reason?: string | null
          locked_at?: string | null
          locked_by?: string | null
          progress?: number | null
          requires_approval?: boolean | null
          section_data?: Json | null
          section_name?: string
          section_number?: number
          session_id?: string | null
          started_at?: string | null
          status?: Database["public"]["Enums"]["section_status"] | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_onboarding_sections_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      peo_onboarding_sessions: {
        Row: {
          assigned_onboarding_manager: string | null
          company_id: string | null
          completed_at: string | null
          created_at: string | null
          created_by: string | null
          current_section: number | null
          go_live_date: string | null
          id: string
          is_template: boolean | null
          overall_progress: number | null
          session_name: string
          setup_type: Database["public"]["Enums"]["peo_setup_type"]
          started_at: string | null
          status: Database["public"]["Enums"]["section_status"] | null
          template_id: string | null
          updated_at: string | null
        }
        Insert: {
          assigned_onboarding_manager?: string | null
          company_id?: string | null
          completed_at?: string | null
          created_at?: string | null
          created_by?: string | null
          current_section?: number | null
          go_live_date?: string | null
          id?: string
          is_template?: boolean | null
          overall_progress?: number | null
          session_name: string
          setup_type?: Database["public"]["Enums"]["peo_setup_type"]
          started_at?: string | null
          status?: Database["public"]["Enums"]["section_status"] | null
          template_id?: string | null
          updated_at?: string | null
        }
        Update: {
          assigned_onboarding_manager?: string | null
          company_id?: string | null
          completed_at?: string | null
          created_at?: string | null
          created_by?: string | null
          current_section?: number | null
          go_live_date?: string | null
          id?: string
          is_template?: boolean | null
          overall_progress?: number | null
          session_name?: string
          setup_type?: Database["public"]["Enums"]["peo_setup_type"]
          started_at?: string | null
          status?: Database["public"]["Enums"]["section_status"] | null
          template_id?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_onboarding_sessions_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      peo_payroll_schedules: {
        Row: {
          approval_deadline_days: number | null
          created_at: string | null
          cutoff_days: number | null
          frequency: string
          holidays: Json | null
          id: string
          is_active: boolean | null
          is_default: boolean | null
          pay_dates: Json
          schedule_name: string
          session_id: string | null
          updated_at: string | null
        }
        Insert: {
          approval_deadline_days?: number | null
          created_at?: string | null
          cutoff_days?: number | null
          frequency: string
          holidays?: Json | null
          id?: string
          is_active?: boolean | null
          is_default?: boolean | null
          pay_dates: Json
          schedule_name: string
          session_id?: string | null
          updated_at?: string | null
        }
        Update: {
          approval_deadline_days?: number | null
          created_at?: string | null
          cutoff_days?: number | null
          frequency?: string
          holidays?: Json | null
          id?: string
          is_active?: boolean | null
          is_default?: boolean | null
          pay_dates?: Json
          schedule_name?: string
          session_id?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_payroll_schedules_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      peo_payroll_tests: {
        Row: {
          approved_by_client: boolean | null
          approved_by_manager: boolean | null
          client_approved_at: string | null
          client_approved_by: string | null
          client_notes: string | null
          created_at: string | null
          id: string
          manager_approved_at: string | null
          manager_approved_by: string | null
          manager_notes: string | null
          session_id: string | null
          test_date: string
          test_employees: Json
          test_results: Json | null
          test_type: string
          updated_at: string | null
        }
        Insert: {
          approved_by_client?: boolean | null
          approved_by_manager?: boolean | null
          client_approved_at?: string | null
          client_approved_by?: string | null
          client_notes?: string | null
          created_at?: string | null
          id?: string
          manager_approved_at?: string | null
          manager_approved_by?: string | null
          manager_notes?: string | null
          session_id?: string | null
          test_date: string
          test_employees: Json
          test_results?: Json | null
          test_type: string
          updated_at?: string | null
        }
        Update: {
          approved_by_client?: boolean | null
          approved_by_manager?: boolean | null
          client_approved_at?: string | null
          client_approved_by?: string | null
          client_notes?: string | null
          created_at?: string | null
          id?: string
          manager_approved_at?: string | null
          manager_approved_by?: string | null
          manager_notes?: string | null
          session_id?: string | null
          test_date?: string
          test_employees?: Json
          test_results?: Json | null
          test_type?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_payroll_tests_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      peo_time_attendance_config: {
        Row: {
          break_rules: Json | null
          collection_method: Database["public"]["Enums"]["time_collection_method"]
          created_at: string | null
          id: string
          overtime_rules: Json | null
          pto_accrual_rules: Json | null
          rounding_rules: Json | null
          session_id: string | null
          sick_accrual_rules: Json | null
          test_completed: boolean | null
          test_completed_at: string | null
          test_completed_by: string | null
          time_approvers: string[] | null
          updated_at: string | null
          vacation_accrual_rules: Json | null
        }
        Insert: {
          break_rules?: Json | null
          collection_method: Database["public"]["Enums"]["time_collection_method"]
          created_at?: string | null
          id?: string
          overtime_rules?: Json | null
          pto_accrual_rules?: Json | null
          rounding_rules?: Json | null
          session_id?: string | null
          sick_accrual_rules?: Json | null
          test_completed?: boolean | null
          test_completed_at?: string | null
          test_completed_by?: string | null
          time_approvers?: string[] | null
          updated_at?: string | null
          vacation_accrual_rules?: Json | null
        }
        Update: {
          break_rules?: Json | null
          collection_method?: Database["public"]["Enums"]["time_collection_method"]
          created_at?: string | null
          id?: string
          overtime_rules?: Json | null
          pto_accrual_rules?: Json | null
          rounding_rules?: Json | null
          session_id?: string | null
          sick_accrual_rules?: Json | null
          test_completed?: boolean | null
          test_completed_at?: string | null
          test_completed_by?: string | null
          time_approvers?: string[] | null
          updated_at?: string | null
          vacation_accrual_rules?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "peo_time_attendance_config_session_id_fkey"
            columns: ["session_id"]
            isOneToOne: false
            referencedRelation: "peo_onboarding_sessions"
            referencedColumns: ["id"]
          },
        ]
      }
      performance_analytics: {
        Row: {
          benchmark_value: number | null
          company_id: string
          created_at: string | null
          department: string | null
          employee_count: number | null
          id: string
          location: string | null
          metadata: Json | null
          metric_name: string
          metric_type: string
          metric_value: number
          period_end: string
          period_start: string
          period_type: string
          trend_direction: string | null
          updated_at: string | null
        }
        Insert: {
          benchmark_value?: number | null
          company_id: string
          created_at?: string | null
          department?: string | null
          employee_count?: number | null
          id?: string
          location?: string | null
          metadata?: Json | null
          metric_name: string
          metric_type: string
          metric_value: number
          period_end: string
          period_start: string
          period_type: string
          trend_direction?: string | null
          updated_at?: string | null
        }
        Update: {
          benchmark_value?: number | null
          company_id?: string
          created_at?: string | null
          department?: string | null
          employee_count?: number | null
          id?: string
          location?: string | null
          metadata?: Json | null
          metric_name?: string
          metric_type?: string
          metric_value?: number
          period_end?: string
          period_start?: string
          period_type?: string
          trend_direction?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "performance_analytics_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      performance_benchmarks: {
        Row: {
          company_size_category: string
          created_at: string | null
          data_source: string | null
          id: string
          industry: string
          last_updated: string | null
          metric_name: string
          percentile_25: number | null
          percentile_50: number | null
          percentile_75: number | null
          percentile_90: number | null
        }
        Insert: {
          company_size_category: string
          created_at?: string | null
          data_source?: string | null
          id?: string
          industry: string
          last_updated?: string | null
          metric_name: string
          percentile_25?: number | null
          percentile_50?: number | null
          percentile_75?: number | null
          percentile_90?: number | null
        }
        Update: {
          company_size_category?: string
          created_at?: string | null
          data_source?: string | null
          id?: string
          industry?: string
          last_updated?: string | null
          metric_name?: string
          percentile_25?: number | null
          percentile_50?: number | null
          percentile_75?: number | null
          percentile_90?: number | null
        }
        Relationships: []
      }
      performance_evaluations: {
        Row: {
          company_id: string
          created_at: string
          development_areas: Json | null
          employee_id: string
          evaluation_type: Database["public"]["Enums"]["evaluation_type"]
          evaluator_id: string | null
          feedback: string | null
          goals_review: Json | null
          id: string
          overall_score: number | null
          responses: Json
          review_cycle_id: string
          reviewed_at: string | null
          reviewed_by: string | null
          scores: Json
          status: Database["public"]["Enums"]["review_status"]
          strengths: Json | null
          submitted_at: string | null
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          development_areas?: Json | null
          employee_id: string
          evaluation_type: Database["public"]["Enums"]["evaluation_type"]
          evaluator_id?: string | null
          feedback?: string | null
          goals_review?: Json | null
          id?: string
          overall_score?: number | null
          responses?: Json
          review_cycle_id: string
          reviewed_at?: string | null
          reviewed_by?: string | null
          scores?: Json
          status?: Database["public"]["Enums"]["review_status"]
          strengths?: Json | null
          submitted_at?: string | null
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          development_areas?: Json | null
          employee_id?: string
          evaluation_type?: Database["public"]["Enums"]["evaluation_type"]
          evaluator_id?: string | null
          feedback?: string | null
          goals_review?: Json | null
          id?: string
          overall_score?: number | null
          responses?: Json
          review_cycle_id?: string
          reviewed_at?: string | null
          reviewed_by?: string | null
          scores?: Json
          status?: Database["public"]["Enums"]["review_status"]
          strengths?: Json | null
          submitted_at?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "performance_evaluations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "performance_evaluations_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "performance_evaluations_review_cycle_id_fkey"
            columns: ["review_cycle_id"]
            isOneToOne: false
            referencedRelation: "review_cycles"
            referencedColumns: ["id"]
          },
        ]
      }
      performance_targets: {
        Row: {
          assigned_to: string | null
          created_at: string
          created_by: string
          id: string
          period_end: string
          period_start: string
          status: string
          target_name: string
          target_type: string
          target_value: number
          updated_at: string
        }
        Insert: {
          assigned_to?: string | null
          created_at?: string
          created_by: string
          id?: string
          period_end: string
          period_start: string
          status?: string
          target_name: string
          target_type: string
          target_value: number
          updated_at?: string
        }
        Update: {
          assigned_to?: string | null
          created_at?: string
          created_by?: string
          id?: string
          period_end?: string
          period_start?: string
          status?: string
          target_name?: string
          target_type?: string
          target_value?: number
          updated_at?: string
        }
        Relationships: []
      }
      permission_policies: {
        Row: {
          action: string
          created_at: string
          created_by: string | null
          description: string | null
          feature: string
          id: string
          is_active: boolean
          name: string
          updated_at: string
        }
        Insert: {
          action: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          feature: string
          id?: string
          is_active?: boolean
          name: string
          updated_at?: string
        }
        Update: {
          action?: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          feature?: string
          id?: string
          is_active?: boolean
          name?: string
          updated_at?: string
        }
        Relationships: []
      }
      permissions: {
        Row: {
          action: string
          created_at: string
          description: string | null
          id: string
          name: string
          resource: string
          updated_at: string
        }
        Insert: {
          action: string
          created_at?: string
          description?: string | null
          id?: string
          name: string
          resource: string
          updated_at?: string
        }
        Update: {
          action?: string
          created_at?: string
          description?: string | null
          id?: string
          name?: string
          resource?: string
          updated_at?: string
        }
        Relationships: []
      }
      placements: {
        Row: {
          application_id: string
          bill_rate: number | null
          created_at: string
          employee_id: string | null
          end_date: string | null
          hourly_rate: number | null
          id: string
          job_order_id: string
          markup_percentage: number | null
          performance_notes: string | null
          placed_by: string
          salary: number | null
          start_date: string
          status: string
          termination_reason: string | null
          updated_at: string
        }
        Insert: {
          application_id: string
          bill_rate?: number | null
          created_at?: string
          employee_id?: string | null
          end_date?: string | null
          hourly_rate?: number | null
          id?: string
          job_order_id: string
          markup_percentage?: number | null
          performance_notes?: string | null
          placed_by: string
          salary?: number | null
          start_date: string
          status?: string
          termination_reason?: string | null
          updated_at?: string
        }
        Update: {
          application_id?: string
          bill_rate?: number | null
          created_at?: string
          employee_id?: string | null
          end_date?: string | null
          hourly_rate?: number | null
          id?: string
          job_order_id?: string
          markup_percentage?: number | null
          performance_notes?: string | null
          placed_by?: string
          salary?: number | null
          start_date?: string
          status?: string
          termination_reason?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "placements_application_id_fkey"
            columns: ["application_id"]
            isOneToOne: false
            referencedRelation: "job_applications"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "placements_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "placements_job_order_id_fkey"
            columns: ["job_order_id"]
            isOneToOne: false
            referencedRelation: "job_orders"
            referencedColumns: ["id"]
          },
        ]
      }
      plan_assignments: {
        Row: {
          client_id: string | null
          created_at: string
          created_by: string | null
          custom_settings: Json | null
          effective_date: string
          id: string
          locked_fields: Json
          plan_id: string | null
          status: string
          termination_date: string | null
          updated_at: string
        }
        Insert: {
          client_id?: string | null
          created_at?: string
          created_by?: string | null
          custom_settings?: Json | null
          effective_date: string
          id?: string
          locked_fields?: Json
          plan_id?: string | null
          status?: string
          termination_date?: string | null
          updated_at?: string
        }
        Update: {
          client_id?: string | null
          created_at?: string
          created_by?: string | null
          custom_settings?: Json | null
          effective_date?: string
          id?: string
          locked_fields?: Json
          plan_id?: string | null
          status?: string
          termination_date?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "plan_assignments_plan_id_fkey"
            columns: ["plan_id"]
            isOneToOne: false
            referencedRelation: "plan_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      plan_templates: {
        Row: {
          carrier_id: string | null
          created_at: string
          created_by: string | null
          documents: Json
          eligibility_rule_id: string | null
          id: string
          lock_fields: Json
          name: string
          plan_type_code: string | null
          rating_method: Database["public"]["Enums"]["rating_method"]
          tier_structure: Json
          updated_at: string
        }
        Insert: {
          carrier_id?: string | null
          created_at?: string
          created_by?: string | null
          documents?: Json
          eligibility_rule_id?: string | null
          id?: string
          lock_fields?: Json
          name: string
          plan_type_code?: string | null
          rating_method?: Database["public"]["Enums"]["rating_method"]
          tier_structure?: Json
          updated_at?: string
        }
        Update: {
          carrier_id?: string | null
          created_at?: string
          created_by?: string | null
          documents?: Json
          eligibility_rule_id?: string | null
          id?: string
          lock_fields?: Json
          name?: string
          plan_type_code?: string | null
          rating_method?: Database["public"]["Enums"]["rating_method"]
          tier_structure?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "fk_eligibility_rule"
            columns: ["eligibility_rule_id"]
            isOneToOne: false
            referencedRelation: "eligibility_rules"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "plan_templates_carrier_id_fkey"
            columns: ["carrier_id"]
            isOneToOne: false
            referencedRelation: "carriers"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "plan_templates_plan_type_code_fkey"
            columns: ["plan_type_code"]
            isOneToOne: false
            referencedRelation: "plan_types"
            referencedColumns: ["code"]
          },
        ]
      }
      plan_types: {
        Row: {
          category: string
          code: string
          created_at: string
          description: string | null
          id: string
          subcategory: string
        }
        Insert: {
          category: string
          code: string
          created_at?: string
          description?: string | null
          id?: string
          subcategory: string
        }
        Update: {
          category?: string
          code?: string
          created_at?: string
          description?: string | null
          id?: string
          subcategory?: string
        }
        Relationships: []
      }
      policy_assignments: {
        Row: {
          assigned_by: string | null
          client_id: string | null
          company_id: string | null
          created_at: string
          id: string
          is_active: boolean
          policy_id: string
          role: Database["public"]["Enums"]["app_role"]
          updated_at: string
        }
        Insert: {
          assigned_by?: string | null
          client_id?: string | null
          company_id?: string | null
          created_at?: string
          id?: string
          is_active?: boolean
          policy_id: string
          role: Database["public"]["Enums"]["app_role"]
          updated_at?: string
        }
        Update: {
          assigned_by?: string | null
          client_id?: string | null
          company_id?: string | null
          created_at?: string
          id?: string
          is_active?: boolean
          policy_id?: string
          role?: Database["public"]["Enums"]["app_role"]
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "policy_assignments_policy_id_fkey"
            columns: ["policy_id"]
            isOneToOne: false
            referencedRelation: "permission_policies"
            referencedColumns: ["id"]
          },
        ]
      }
      policy_conditions: {
        Row: {
          attribute_name: string
          attribute_value: string
          condition_type: string
          created_at: string
          id: string
          operator: string
          policy_id: string
        }
        Insert: {
          attribute_name: string
          attribute_value: string
          condition_type?: string
          created_at?: string
          id?: string
          operator: string
          policy_id: string
        }
        Update: {
          attribute_name?: string
          attribute_value?: string
          condition_type?: string
          created_at?: string
          id?: string
          operator?: string
          policy_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "policy_conditions_policy_id_fkey"
            columns: ["policy_id"]
            isOneToOne: false
            referencedRelation: "permission_policies"
            referencedColumns: ["id"]
          },
        ]
      }
      pop_candidates: {
        Row: {
          created_at: string
          email: string
          first_name: string
          hired_at: string | null
          hourly_rate: number | null
          id: string
          job_order_id: string
          last_name: string
          notes: string | null
          phone: string | null
          recruiter_id: string
          resume_url: string | null
          start_date: string | null
          status: Database["public"]["Enums"]["candidate_status"]
          submitted_at: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          email: string
          first_name: string
          hired_at?: string | null
          hourly_rate?: number | null
          id?: string
          job_order_id: string
          last_name: string
          notes?: string | null
          phone?: string | null
          recruiter_id: string
          resume_url?: string | null
          start_date?: string | null
          status?: Database["public"]["Enums"]["candidate_status"]
          submitted_at?: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          email?: string
          first_name?: string
          hired_at?: string | null
          hourly_rate?: number | null
          id?: string
          job_order_id?: string
          last_name?: string
          notes?: string | null
          phone?: string | null
          recruiter_id?: string
          resume_url?: string | null
          start_date?: string | null
          status?: Database["public"]["Enums"]["candidate_status"]
          submitted_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "pop_candidates_job_order_id_fkey"
            columns: ["job_order_id"]
            isOneToOne: false
            referencedRelation: "pop_job_orders"
            referencedColumns: ["id"]
          },
        ]
      }
      pop_client_documents: {
        Row: {
          client_id: string
          document_type: Database["public"]["Enums"]["document_type"]
          file_name: string
          file_url: string
          id: string
          uploaded_at: string
          verified_at: string | null
          verified_by: string | null
        }
        Insert: {
          client_id: string
          document_type: Database["public"]["Enums"]["document_type"]
          file_name: string
          file_url: string
          id?: string
          uploaded_at?: string
          verified_at?: string | null
          verified_by?: string | null
        }
        Update: {
          client_id?: string
          document_type?: Database["public"]["Enums"]["document_type"]
          file_name?: string
          file_url?: string
          id?: string
          uploaded_at?: string
          verified_at?: string | null
          verified_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "pop_client_documents_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "pop_clients"
            referencedColumns: ["id"]
          },
        ]
      }
      pop_clients: {
        Row: {
          address_line1: string | null
          address_line2: string | null
          approved_at: string | null
          approved_by: string | null
          city: string | null
          company_name: string
          contact_email: string
          contact_name: string
          contact_phone: string | null
          created_at: string
          id: string
          industry: string | null
          pop_id: string
          pricing_markup: number | null
          rejection_reason: string | null
          state: string | null
          status: Database["public"]["Enums"]["client_status"]
          submitted_at: string
          updated_at: string
          workers_comp_rate: number | null
          zip_code: string | null
        }
        Insert: {
          address_line1?: string | null
          address_line2?: string | null
          approved_at?: string | null
          approved_by?: string | null
          city?: string | null
          company_name: string
          contact_email: string
          contact_name: string
          contact_phone?: string | null
          created_at?: string
          id?: string
          industry?: string | null
          pop_id: string
          pricing_markup?: number | null
          rejection_reason?: string | null
          state?: string | null
          status?: Database["public"]["Enums"]["client_status"]
          submitted_at?: string
          updated_at?: string
          workers_comp_rate?: number | null
          zip_code?: string | null
        }
        Update: {
          address_line1?: string | null
          address_line2?: string | null
          approved_at?: string | null
          approved_by?: string | null
          city?: string | null
          company_name?: string
          contact_email?: string
          contact_name?: string
          contact_phone?: string | null
          created_at?: string
          id?: string
          industry?: string | null
          pop_id?: string
          pricing_markup?: number | null
          rejection_reason?: string | null
          state?: string | null
          status?: Database["public"]["Enums"]["client_status"]
          submitted_at?: string
          updated_at?: string
          workers_comp_rate?: number | null
          zip_code?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "pop_clients_pop_id_fkey"
            columns: ["pop_id"]
            isOneToOne: false
            referencedRelation: "pops"
            referencedColumns: ["id"]
          },
        ]
      }
      pop_commissions: {
        Row: {
          candidate_id: string | null
          commission_amount: number
          commission_rate: number
          commission_type: string
          created_at: string
          gross_profit: number
          id: string
          invoice_collected: boolean | null
          job_order_id: string
          paid_at: string | null
          pay_period_end: string | null
          pay_period_start: string | null
          pop_id: string
          recruiter_id: string | null
          updated_at: string
        }
        Insert: {
          candidate_id?: string | null
          commission_amount: number
          commission_rate: number
          commission_type: string
          created_at?: string
          gross_profit: number
          id?: string
          invoice_collected?: boolean | null
          job_order_id: string
          paid_at?: string | null
          pay_period_end?: string | null
          pay_period_start?: string | null
          pop_id: string
          recruiter_id?: string | null
          updated_at?: string
        }
        Update: {
          candidate_id?: string | null
          commission_amount?: number
          commission_rate?: number
          commission_type?: string
          created_at?: string
          gross_profit?: number
          id?: string
          invoice_collected?: boolean | null
          job_order_id?: string
          paid_at?: string | null
          pay_period_end?: string | null
          pay_period_start?: string | null
          pop_id?: string
          recruiter_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "pop_commissions_candidate_id_fkey"
            columns: ["candidate_id"]
            isOneToOne: false
            referencedRelation: "pop_candidates"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "pop_commissions_job_order_id_fkey"
            columns: ["job_order_id"]
            isOneToOne: false
            referencedRelation: "pop_job_orders"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "pop_commissions_pop_id_fkey"
            columns: ["pop_id"]
            isOneToOne: false
            referencedRelation: "pops"
            referencedColumns: ["id"]
          },
        ]
      }
      pop_documents: {
        Row: {
          document_type: Database["public"]["Enums"]["document_type"]
          file_name: string
          file_url: string
          id: string
          notes: string | null
          pop_id: string
          uploaded_at: string
          verified_at: string | null
          verified_by: string | null
        }
        Insert: {
          document_type: Database["public"]["Enums"]["document_type"]
          file_name: string
          file_url: string
          id?: string
          notes?: string | null
          pop_id: string
          uploaded_at?: string
          verified_at?: string | null
          verified_by?: string | null
        }
        Update: {
          document_type?: Database["public"]["Enums"]["document_type"]
          file_name?: string
          file_url?: string
          id?: string
          notes?: string | null
          pop_id?: string
          uploaded_at?: string
          verified_at?: string | null
          verified_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "pop_documents_pop_id_fkey"
            columns: ["pop_id"]
            isOneToOne: false
            referencedRelation: "pops"
            referencedColumns: ["id"]
          },
        ]
      }
      pop_hierarchy: {
        Row: {
          commission_rate: number
          created_at: string | null
          hierarchy_level: number
          id: string
          junior_pop_id: string
          senior_pop_id: string
        }
        Insert: {
          commission_rate: number
          created_at?: string | null
          hierarchy_level?: number
          id?: string
          junior_pop_id: string
          senior_pop_id: string
        }
        Update: {
          commission_rate?: number
          created_at?: string | null
          hierarchy_level?: number
          id?: string
          junior_pop_id?: string
          senior_pop_id?: string
        }
        Relationships: []
      }
      pop_job_orders: {
        Row: {
          assigned_recruiter_id: string | null
          bill_rate: number | null
          claimed_at: string | null
          client_id: string
          created_at: string
          end_date: string | null
          id: string
          job_description: string
          job_title: string
          location: string
          markup_percentage: number
          pay_rate: number
          pop_id: string
          positions_filled: number
          positions_needed: number
          requirements: string[] | null
          shift: string | null
          start_date: string | null
          status: Database["public"]["Enums"]["job_order_status"]
          updated_at: string
        }
        Insert: {
          assigned_recruiter_id?: string | null
          bill_rate?: number | null
          claimed_at?: string | null
          client_id: string
          created_at?: string
          end_date?: string | null
          id?: string
          job_description: string
          job_title: string
          location: string
          markup_percentage: number
          pay_rate: number
          pop_id: string
          positions_filled?: number
          positions_needed?: number
          requirements?: string[] | null
          shift?: string | null
          start_date?: string | null
          status?: Database["public"]["Enums"]["job_order_status"]
          updated_at?: string
        }
        Update: {
          assigned_recruiter_id?: string | null
          bill_rate?: number | null
          claimed_at?: string | null
          client_id?: string
          created_at?: string
          end_date?: string | null
          id?: string
          job_description?: string
          job_title?: string
          location?: string
          markup_percentage?: number
          pay_rate?: number
          pop_id?: string
          positions_filled?: number
          positions_needed?: number
          requirements?: string[] | null
          shift?: string | null
          start_date?: string | null
          status?: Database["public"]["Enums"]["job_order_status"]
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "pop_job_orders_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "pop_clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "pop_job_orders_pop_id_fkey"
            columns: ["pop_id"]
            isOneToOne: false
            referencedRelation: "pops"
            referencedColumns: ["id"]
          },
        ]
      }
      pop_notifications: {
        Row: {
          created_at: string
          entity_id: string | null
          entity_type: string | null
          id: string
          message: string
          notification_type: string
          read_at: string | null
          recipient_id: string
          title: string
        }
        Insert: {
          created_at?: string
          entity_id?: string | null
          entity_type?: string | null
          id?: string
          message: string
          notification_type: string
          read_at?: string | null
          recipient_id: string
          title: string
        }
        Update: {
          created_at?: string
          entity_id?: string | null
          entity_type?: string | null
          id?: string
          message?: string
          notification_type?: string
          read_at?: string | null
          recipient_id?: string
          title?: string
        }
        Relationships: []
      }
      pop_platform_fees: {
        Row: {
          created_at: string
          fee_amount: number
          fee_period_end: string | null
          fee_period_start: string | null
          fee_rate: number
          gross_profit_ytd: number
          id: string
          invoice_amount: number
          pop_id: string
        }
        Insert: {
          created_at?: string
          fee_amount: number
          fee_period_end?: string | null
          fee_period_start?: string | null
          fee_rate: number
          gross_profit_ytd: number
          id?: string
          invoice_amount: number
          pop_id: string
        }
        Update: {
          created_at?: string
          fee_amount?: number
          fee_period_end?: string | null
          fee_period_start?: string | null
          fee_rate?: number
          gross_profit_ytd?: number
          id?: string
          invoice_amount?: number
          pop_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "pop_platform_fees_pop_id_fkey"
            columns: ["pop_id"]
            isOneToOne: false
            referencedRelation: "pops"
            referencedColumns: ["id"]
          },
        ]
      }
      pops: {
        Row: {
          business_name: string | null
          commission_rate: number | null
          created_at: string
          email: string
          first_name: string
          id: string
          last_name: string
          onboarded_at: string | null
          phone: string | null
          senior_pop_id: string | null
          status: Database["public"]["Enums"]["pop_status"]
          territory_city: string | null
          territory_state: string | null
          territory_zip_codes: string[] | null
          tier: Database["public"]["Enums"]["pop_tier"]
          updated_at: string
          user_id: string
        }
        Insert: {
          business_name?: string | null
          commission_rate?: number | null
          created_at?: string
          email: string
          first_name: string
          id?: string
          last_name: string
          onboarded_at?: string | null
          phone?: string | null
          senior_pop_id?: string | null
          status?: Database["public"]["Enums"]["pop_status"]
          territory_city?: string | null
          territory_state?: string | null
          territory_zip_codes?: string[] | null
          tier?: Database["public"]["Enums"]["pop_tier"]
          updated_at?: string
          user_id: string
        }
        Update: {
          business_name?: string | null
          commission_rate?: number | null
          created_at?: string
          email?: string
          first_name?: string
          id?: string
          last_name?: string
          onboarded_at?: string | null
          phone?: string | null
          senior_pop_id?: string | null
          status?: Database["public"]["Enums"]["pop_status"]
          territory_city?: string | null
          territory_state?: string | null
          territory_zip_codes?: string[] | null
          tier?: Database["public"]["Enums"]["pop_tier"]
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "pops_senior_pop_id_fkey"
            columns: ["senior_pop_id"]
            isOneToOne: false
            referencedRelation: "pops"
            referencedColumns: ["id"]
          },
        ]
      }
      popup_interactions: {
        Row: {
          action_taken: string
          created_at: string
          email: string | null
          id: string
          page_url: string | null
          popup_type: string
          session_id: string | null
          user_agent: string | null
        }
        Insert: {
          action_taken: string
          created_at?: string
          email?: string | null
          id?: string
          page_url?: string | null
          popup_type: string
          session_id?: string | null
          user_agent?: string | null
        }
        Update: {
          action_taken?: string
          created_at?: string
          email?: string | null
          id?: string
          page_url?: string | null
          popup_type?: string
          session_id?: string | null
          user_agent?: string | null
        }
        Relationships: []
      }
      predictive_models: {
        Row: {
          accuracy_metrics: Json | null
          created_at: string | null
          created_by: string | null
          description: string | null
          id: string
          is_active: boolean | null
          last_trained_at: string | null
          model_config: Json
          model_name: string
          model_type: string
          training_data_sources: string[] | null
          updated_at: string | null
          version: string
        }
        Insert: {
          accuracy_metrics?: Json | null
          created_at?: string | null
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          last_trained_at?: string | null
          model_config?: Json
          model_name: string
          model_type: string
          training_data_sources?: string[] | null
          updated_at?: string | null
          version?: string
        }
        Update: {
          accuracy_metrics?: Json | null
          created_at?: string | null
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          last_trained_at?: string | null
          model_config?: Json
          model_name?: string
          model_type?: string
          training_data_sources?: string[] | null
          updated_at?: string | null
          version?: string
        }
        Relationships: []
      }
      pricing_calculations: {
        Row: {
          base_rate_per_employee: number
          benefits_percentage: number
          compliance_base_cost: number
          created_at: string
          employee_range_max: number
          employee_range_min: number
          hr_admin_hourly_rate: number
          id: string
          risk_percentage: number
          technology_cost_per_employee: number
          updated_at: string
        }
        Insert: {
          base_rate_per_employee: number
          benefits_percentage?: number
          compliance_base_cost?: number
          created_at?: string
          employee_range_max: number
          employee_range_min: number
          hr_admin_hourly_rate?: number
          id?: string
          risk_percentage?: number
          technology_cost_per_employee?: number
          updated_at?: string
        }
        Update: {
          base_rate_per_employee?: number
          benefits_percentage?: number
          compliance_base_cost?: number
          created_at?: string
          employee_range_max?: number
          employee_range_min?: number
          hr_admin_hourly_rate?: number
          id?: string
          risk_percentage?: number
          technology_cost_per_employee?: number
          updated_at?: string
        }
        Relationships: []
      }
      pricing_matrix: {
        Row: {
          annual_discount_percentage: number | null
          course_package_id: string
          created_at: string
          id: string
          price_per_user: number
          pricing_tier_id: string
          three_year_discount_percentage: number | null
          updated_at: string
        }
        Insert: {
          annual_discount_percentage?: number | null
          course_package_id: string
          created_at?: string
          id?: string
          price_per_user: number
          pricing_tier_id: string
          three_year_discount_percentage?: number | null
          updated_at?: string
        }
        Update: {
          annual_discount_percentage?: number | null
          course_package_id?: string
          created_at?: string
          id?: string
          price_per_user?: number
          pricing_tier_id?: string
          three_year_discount_percentage?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "pricing_matrix_course_package_id_fkey"
            columns: ["course_package_id"]
            isOneToOne: false
            referencedRelation: "course_packages"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "pricing_matrix_pricing_tier_id_fkey"
            columns: ["pricing_tier_id"]
            isOneToOne: false
            referencedRelation: "pricing_tiers"
            referencedColumns: ["id"]
          },
        ]
      }
      pricing_tiers: {
        Row: {
          created_at: string
          id: string
          is_active: boolean
          max_users: number
          min_users: number
          updated_at: string
        }
        Insert: {
          created_at?: string
          id?: string
          is_active?: boolean
          max_users: number
          min_users: number
          updated_at?: string
        }
        Update: {
          created_at?: string
          id?: string
          is_active?: boolean
          max_users?: number
          min_users?: number
          updated_at?: string
        }
        Relationships: []
      }
      profiles: {
        Row: {
          company_id: string | null
          completed_tours: string[] | null
          created_at: string
          email: string
          first_name: string | null
          id: string
          is_employee: boolean
          last_name: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          company_id?: string | null
          completed_tours?: string[] | null
          created_at?: string
          email: string
          first_name?: string | null
          id?: string
          is_employee?: boolean
          last_name?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          company_id?: string | null
          completed_tours?: string[] | null
          created_at?: string
          email?: string
          first_name?: string | null
          id?: string
          is_employee?: boolean
          last_name?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "profiles_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      propgen_additional_fees: {
        Row: {
          billing_type: Database["public"]["Enums"]["propgen_billing_type"]
          created_at: string
          created_by: string | null
          default_cost: number
          default_inclusion: boolean
          description: string | null
          display_in_proposal: boolean
          editable_at_company_level: boolean
          fee_name: string
          id: string
          include_in_roi_calculation: boolean
          is_active: boolean
          sort_order: number
          updated_at: string
        }
        Insert: {
          billing_type?: Database["public"]["Enums"]["propgen_billing_type"]
          created_at?: string
          created_by?: string | null
          default_cost?: number
          default_inclusion?: boolean
          description?: string | null
          display_in_proposal?: boolean
          editable_at_company_level?: boolean
          fee_name: string
          id?: string
          include_in_roi_calculation?: boolean
          is_active?: boolean
          sort_order?: number
          updated_at?: string
        }
        Update: {
          billing_type?: Database["public"]["Enums"]["propgen_billing_type"]
          created_at?: string
          created_by?: string | null
          default_cost?: number
          default_inclusion?: boolean
          description?: string | null
          display_in_proposal?: boolean
          editable_at_company_level?: boolean
          fee_name?: string
          id?: string
          include_in_roi_calculation?: boolean
          is_active?: boolean
          sort_order?: number
          updated_at?: string
        }
        Relationships: []
      }
      propgen_audit_logs: {
        Row: {
          action_result: Json | null
          action_type: string
          company_id: string
          created_at: string
          id: string
          ip_address: unknown | null
          performed_by: string | null
          trigger_data: Json | null
          trigger_type: string
          user_agent: string | null
        }
        Insert: {
          action_result?: Json | null
          action_type: string
          company_id: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          performed_by?: string | null
          trigger_data?: Json | null
          trigger_type: string
          user_agent?: string | null
        }
        Update: {
          action_result?: Json | null
          action_type?: string
          company_id?: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          performed_by?: string | null
          trigger_data?: Json | null
          trigger_type?: string
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "propgen_audit_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      propgen_company_additional_fees: {
        Row: {
          additional_fee_id: string
          company_id: string
          created_at: string
          custom_cost: number | null
          id: string
          is_included: boolean
          notes: string | null
          updated_at: string
          workflow_id: string | null
        }
        Insert: {
          additional_fee_id: string
          company_id: string
          created_at?: string
          custom_cost?: number | null
          id?: string
          is_included?: boolean
          notes?: string | null
          updated_at?: string
          workflow_id?: string | null
        }
        Update: {
          additional_fee_id?: string
          company_id?: string
          created_at?: string
          custom_cost?: number | null
          id?: string
          is_included?: boolean
          notes?: string | null
          updated_at?: string
          workflow_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "propgen_company_additional_fees_additional_fee_id_fkey"
            columns: ["additional_fee_id"]
            isOneToOne: false
            referencedRelation: "propgen_additional_fees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "propgen_company_additional_fees_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "propgen_company_additional_fees_workflow_id_fkey"
            columns: ["workflow_id"]
            isOneToOne: false
            referencedRelation: "propgen_workflows"
            referencedColumns: ["id"]
          },
        ]
      }
      propgen_workflows: {
        Row: {
          benefits_analysis: Json | null
          company_id: string
          created_at: string
          created_by: string | null
          hr_risk_assessment_completed: boolean | null
          id: string
          investment_analysis_data: Json | null
          investment_analysis_status: string | null
          proposal_approval_id: string | null
          proposal_data: Json | null
          proposal_generated: boolean | null
          proposal_status: string | null
          risk_assessment_id: string | null
          spin_content: Json | null
          spin_content_completed: boolean | null
          spin_content_status: string | null
          updated_at: string
          workflow_status: string
        }
        Insert: {
          benefits_analysis?: Json | null
          company_id: string
          created_at?: string
          created_by?: string | null
          hr_risk_assessment_completed?: boolean | null
          id?: string
          investment_analysis_data?: Json | null
          investment_analysis_status?: string | null
          proposal_approval_id?: string | null
          proposal_data?: Json | null
          proposal_generated?: boolean | null
          proposal_status?: string | null
          risk_assessment_id?: string | null
          spin_content?: Json | null
          spin_content_completed?: boolean | null
          spin_content_status?: string | null
          updated_at?: string
          workflow_status?: string
        }
        Update: {
          benefits_analysis?: Json | null
          company_id?: string
          created_at?: string
          created_by?: string | null
          hr_risk_assessment_completed?: boolean | null
          id?: string
          investment_analysis_data?: Json | null
          investment_analysis_status?: string | null
          proposal_approval_id?: string | null
          proposal_data?: Json | null
          proposal_generated?: boolean | null
          proposal_status?: string | null
          risk_assessment_id?: string | null
          spin_content?: Json | null
          spin_content_completed?: boolean | null
          spin_content_status?: string | null
          updated_at?: string
          workflow_status?: string
        }
        Relationships: [
          {
            foreignKeyName: "propgen_workflows_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: true
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "propgen_workflows_proposal_approval_id_fkey"
            columns: ["proposal_approval_id"]
            isOneToOne: false
            referencedRelation: "proposal_approvals"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "propgen_workflows_risk_assessment_id_fkey"
            columns: ["risk_assessment_id"]
            isOneToOne: false
            referencedRelation: "company_hr_assessments"
            referencedColumns: ["id"]
          },
        ]
      }
      proposal_approvals: {
        Row: {
          approval_notes: string | null
          approved_at: string | null
          approved_by: string | null
          company_id: string
          created_at: string
          id: string
          investment_analysis: Json | null
          proposal_data: Json
          proposal_id: string
          risk_score: number | null
          status: string
          submitted_at: string
          submitted_by: string
          updated_at: string
        }
        Insert: {
          approval_notes?: string | null
          approved_at?: string | null
          approved_by?: string | null
          company_id: string
          created_at?: string
          id?: string
          investment_analysis?: Json | null
          proposal_data?: Json
          proposal_id: string
          risk_score?: number | null
          status?: string
          submitted_at?: string
          submitted_by: string
          updated_at?: string
        }
        Update: {
          approval_notes?: string | null
          approved_at?: string | null
          approved_by?: string | null
          company_id?: string
          created_at?: string
          id?: string
          investment_analysis?: Json | null
          proposal_data?: Json
          proposal_id?: string
          risk_score?: number | null
          status?: string
          submitted_at?: string
          submitted_by?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "proposal_approvals_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      proposal_events: {
        Row: {
          event_data: Json | null
          event_type: string
          id: string
          ip_address: unknown | null
          proposal_id: string
          timestamp: string
          user_agent: string | null
        }
        Insert: {
          event_data?: Json | null
          event_type: string
          id?: string
          ip_address?: unknown | null
          proposal_id: string
          timestamp?: string
          user_agent?: string | null
        }
        Update: {
          event_data?: Json | null
          event_type?: string
          id?: string
          ip_address?: unknown | null
          proposal_id?: string
          timestamp?: string
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "proposal_events_proposal_id_fkey"
            columns: ["proposal_id"]
            isOneToOne: false
            referencedRelation: "proposal_tracking"
            referencedColumns: ["id"]
          },
        ]
      }
      proposal_templates: {
        Row: {
          created_at: string
          created_by: string
          description: string | null
          id: string
          is_default: boolean
          name: string
          template_data: Json
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by: string
          description?: string | null
          id?: string
          is_default?: boolean
          name: string
          template_data?: Json
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string
          description?: string | null
          id?: string
          is_default?: boolean
          name?: string
          template_data?: Json
          updated_at?: string
        }
        Relationships: []
      }
      proposal_tracking: {
        Row: {
          company_name: string
          created_at: string
          created_by: string | null
          email_id: string
          id: string
          proposal_id: string | null
          proposal_type: string
          proposal_url: string | null
          recipient_email: string
          sent_at: string
          status: string
          tracking_data: Json | null
          updated_at: string
        }
        Insert: {
          company_name: string
          created_at?: string
          created_by?: string | null
          email_id: string
          id?: string
          proposal_id?: string | null
          proposal_type?: string
          proposal_url?: string | null
          recipient_email: string
          sent_at?: string
          status?: string
          tracking_data?: Json | null
          updated_at?: string
        }
        Update: {
          company_name?: string
          created_at?: string
          created_by?: string | null
          email_id?: string
          id?: string
          proposal_id?: string | null
          proposal_type?: string
          proposal_url?: string | null
          recipient_email?: string
          sent_at?: string
          status?: string
          tracking_data?: Json | null
          updated_at?: string
        }
        Relationships: []
      }
      proposals: {
        Row: {
          brand_settings: Json
          client_id: string | null
          company_id: string | null
          created_at: string
          created_by: string
          financial_data: Json
          id: string
          include_investment_analysis: boolean
          include_recommendations: boolean
          include_risk_assessment: boolean
          parent_proposal_id: string | null
          pdf_url: string | null
          proposal_data: Json
          sent_at: string | null
          status: string
          title: string
          updated_at: string
          version: number
          word_url: string | null
        }
        Insert: {
          brand_settings?: Json
          client_id?: string | null
          company_id?: string | null
          created_at?: string
          created_by: string
          financial_data?: Json
          id?: string
          include_investment_analysis?: boolean
          include_recommendations?: boolean
          include_risk_assessment?: boolean
          parent_proposal_id?: string | null
          pdf_url?: string | null
          proposal_data?: Json
          sent_at?: string | null
          status?: string
          title: string
          updated_at?: string
          version?: number
          word_url?: string | null
        }
        Update: {
          brand_settings?: Json
          client_id?: string | null
          company_id?: string | null
          created_at?: string
          created_by?: string
          financial_data?: Json
          id?: string
          include_investment_analysis?: boolean
          include_recommendations?: boolean
          include_risk_assessment?: boolean
          parent_proposal_id?: string | null
          pdf_url?: string | null
          proposal_data?: Json
          sent_at?: string | null
          status?: string
          title?: string
          updated_at?: string
          version?: number
          word_url?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "proposals_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "proposals_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "proposals_parent_proposal_id_fkey"
            columns: ["parent_proposal_id"]
            isOneToOne: false
            referencedRelation: "proposals"
            referencedColumns: ["id"]
          },
        ]
      }
      pto_balances: {
        Row: {
          accrued_hours: number | null
          available_hours: number | null
          company_id: string
          created_at: string
          employee_id: string
          id: string
          pto_type: string
          updated_at: string
          used_hours: number | null
          year: number
        }
        Insert: {
          accrued_hours?: number | null
          available_hours?: number | null
          company_id: string
          created_at?: string
          employee_id: string
          id?: string
          pto_type: string
          updated_at?: string
          used_hours?: number | null
          year?: number
        }
        Update: {
          accrued_hours?: number | null
          available_hours?: number | null
          company_id?: string
          created_at?: string
          employee_id?: string
          id?: string
          pto_type?: string
          updated_at?: string
          used_hours?: number | null
          year?: number
        }
        Relationships: []
      }
      pto_policies: {
        Row: {
          accrual_rate: number | null
          company_id: string | null
          created_at: string | null
          description: string | null
          id: string
          is_active: boolean | null
          max_carryover: number | null
          name: string
          updated_at: string | null
        }
        Insert: {
          accrual_rate?: number | null
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          max_carryover?: number | null
          name: string
          updated_at?: string | null
        }
        Update: {
          accrual_rate?: number | null
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          max_carryover?: number | null
          name?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "pto_policies_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      pto_requests: {
        Row: {
          approved_at: string | null
          approved_by: string | null
          company_id: string
          created_at: string
          employee_id: string
          end_date: string
          hours_requested: number
          id: string
          reason: string | null
          request_type: string
          start_date: string
          status: string | null
          updated_at: string
        }
        Insert: {
          approved_at?: string | null
          approved_by?: string | null
          company_id: string
          created_at?: string
          employee_id: string
          end_date: string
          hours_requested: number
          id?: string
          reason?: string | null
          request_type: string
          start_date: string
          status?: string | null
          updated_at?: string
        }
        Update: {
          approved_at?: string | null
          approved_by?: string | null
          company_id?: string
          created_at?: string
          employee_id?: string
          end_date?: string
          hours_requested?: number
          id?: string
          reason?: string | null
          request_type?: string
          start_date?: string
          status?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      pulse_cases: {
        Row: {
          client_id: string | null
          client_name: string | null
          created_at: string
          description: string | null
          employee_id: string | null
          employee_name: string | null
          escalation_sent_at: string | null
          follow_up_sent_at: string | null
          id: string
          issue_category: string
          last_activity_at: string | null
          sla_status: string | null
          sla_violation: boolean | null
          sms_session_id: string | null
          status: string | null
          updated_at: string
          wants_hr: boolean | null
        }
        Insert: {
          client_id?: string | null
          client_name?: string | null
          created_at?: string
          description?: string | null
          employee_id?: string | null
          employee_name?: string | null
          escalation_sent_at?: string | null
          follow_up_sent_at?: string | null
          id?: string
          issue_category: string
          last_activity_at?: string | null
          sla_status?: string | null
          sla_violation?: boolean | null
          sms_session_id?: string | null
          status?: string | null
          updated_at?: string
          wants_hr?: boolean | null
        }
        Update: {
          client_id?: string | null
          client_name?: string | null
          created_at?: string
          description?: string | null
          employee_id?: string | null
          employee_name?: string | null
          escalation_sent_at?: string | null
          follow_up_sent_at?: string | null
          id?: string
          issue_category?: string
          last_activity_at?: string | null
          sla_status?: string | null
          sla_violation?: boolean | null
          sms_session_id?: string | null
          status?: string | null
          updated_at?: string
          wants_hr?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "pulse_cases_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "pulse_cases_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      punch_corrections: {
        Row: {
          approval_notes: string | null
          company_id: string
          corrected_timestamp: string
          correction_type: string
          created_at: string
          employee_id: string
          employee_submitted: boolean | null
          id: string
          offline_submitted: boolean | null
          original_punch_id: string | null
          original_timestamp: string | null
          reason: string | null
          requires_approval: boolean | null
          reviewed_at: string | null
          reviewed_by: string | null
          status: string
          submitted_at: string
          updated_at: string
        }
        Insert: {
          approval_notes?: string | null
          company_id: string
          corrected_timestamp: string
          correction_type: string
          created_at?: string
          employee_id: string
          employee_submitted?: boolean | null
          id?: string
          offline_submitted?: boolean | null
          original_punch_id?: string | null
          original_timestamp?: string | null
          reason?: string | null
          requires_approval?: boolean | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          status?: string
          submitted_at?: string
          updated_at?: string
        }
        Update: {
          approval_notes?: string | null
          company_id?: string
          corrected_timestamp?: string
          correction_type?: string
          created_at?: string
          employee_id?: string
          employee_submitted?: boolean | null
          id?: string
          offline_submitted?: boolean | null
          original_punch_id?: string | null
          original_timestamp?: string | null
          reason?: string | null
          requires_approval?: boolean | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          status?: string
          submitted_at?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "punch_corrections_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "punch_corrections_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "punch_corrections_original_punch_id_fkey"
            columns: ["original_punch_id"]
            isOneToOne: false
            referencedRelation: "time_punches"
            referencedColumns: ["id"]
          },
        ]
      }
      punch_verifications: {
        Row: {
          confidence_score: number | null
          created_at: string
          id: string
          punch_id: string
          verification_data: Json | null
          verification_result: string
          verification_type: string
        }
        Insert: {
          confidence_score?: number | null
          created_at?: string
          id?: string
          punch_id: string
          verification_data?: Json | null
          verification_result: string
          verification_type: string
        }
        Update: {
          confidence_score?: number | null
          created_at?: string
          id?: string
          punch_id?: string
          verification_data?: Json | null
          verification_result?: string
          verification_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "punch_verifications_punch_id_fkey"
            columns: ["punch_id"]
            isOneToOne: false
            referencedRelation: "time_punches"
            referencedColumns: ["id"]
          },
        ]
      }
      purchase_history: {
        Row: {
          amount_paid: number
          client_id: string | null
          created_at: string
          currency: string | null
          id: string
          metadata: Json | null
          payment_status: string | null
          plan_expires_at: string | null
          plan_started_at: string | null
          plan_type: string
          stripe_session_id: string | null
          stripe_subscription_id: string | null
          user_id: string | null
        }
        Insert: {
          amount_paid: number
          client_id?: string | null
          created_at?: string
          currency?: string | null
          id?: string
          metadata?: Json | null
          payment_status?: string | null
          plan_expires_at?: string | null
          plan_started_at?: string | null
          plan_type: string
          stripe_session_id?: string | null
          stripe_subscription_id?: string | null
          user_id?: string | null
        }
        Update: {
          amount_paid?: number
          client_id?: string | null
          created_at?: string
          currency?: string | null
          id?: string
          metadata?: Json | null
          payment_status?: string | null
          plan_expires_at?: string | null
          plan_started_at?: string | null
          plan_type?: string
          stripe_session_id?: string | null
          stripe_subscription_id?: string | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "purchase_history_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
        ]
      }
      question_bank: {
        Row: {
          company_id: string | null
          complexity_score: number | null
          correct_answer: Json
          created_at: string
          difficulty: string
          explanation: string | null
          id: string
          is_public: boolean
          learning_objectives: string[] | null
          media_type: string | null
          media_url: string | null
          options: Json
          points: number
          prerequisites: string[] | null
          question_text: string
          question_type: string
          remediation_hint: string | null
          tags: string[] | null
          time_limit: number | null
          topic: string | null
          updated_at: string
          usage_count: number
        }
        Insert: {
          company_id?: string | null
          complexity_score?: number | null
          correct_answer: Json
          created_at?: string
          difficulty?: string
          explanation?: string | null
          id?: string
          is_public?: boolean
          learning_objectives?: string[] | null
          media_type?: string | null
          media_url?: string | null
          options?: Json
          points?: number
          prerequisites?: string[] | null
          question_text: string
          question_type: string
          remediation_hint?: string | null
          tags?: string[] | null
          time_limit?: number | null
          topic?: string | null
          updated_at?: string
          usage_count?: number
        }
        Update: {
          company_id?: string | null
          complexity_score?: number | null
          correct_answer?: Json
          created_at?: string
          difficulty?: string
          explanation?: string | null
          id?: string
          is_public?: boolean
          learning_objectives?: string[] | null
          media_type?: string | null
          media_url?: string | null
          options?: Json
          points?: number
          prerequisites?: string[] | null
          question_text?: string
          question_type?: string
          remediation_hint?: string | null
          tags?: string[] | null
          time_limit?: number | null
          topic?: string | null
          updated_at?: string
          usage_count?: number
        }
        Relationships: []
      }
      quiz_analytics: {
        Row: {
          average_time_seconds: number | null
          correct_attempts: number | null
          created_at: string
          difficulty_index: number | null
          id: string
          last_calculated: string | null
          question_id: string | null
          quiz_configuration_id: string
          total_attempts: number | null
          updated_at: string
        }
        Insert: {
          average_time_seconds?: number | null
          correct_attempts?: number | null
          created_at?: string
          difficulty_index?: number | null
          id?: string
          last_calculated?: string | null
          question_id?: string | null
          quiz_configuration_id: string
          total_attempts?: number | null
          updated_at?: string
        }
        Update: {
          average_time_seconds?: number | null
          correct_attempts?: number | null
          created_at?: string
          difficulty_index?: number | null
          id?: string
          last_calculated?: string | null
          question_id?: string | null
          quiz_configuration_id?: string
          total_attempts?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "quiz_analytics_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "quiz_questions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "quiz_analytics_quiz_configuration_id_fkey"
            columns: ["quiz_configuration_id"]
            isOneToOne: false
            referencedRelation: "quiz_configurations"
            referencedColumns: ["id"]
          },
        ]
      }
      quiz_answer_options: {
        Row: {
          created_at: string
          explanation: string | null
          id: string
          is_correct: boolean
          option_image_url: string | null
          option_order: number
          option_text: string
          question_id: string
        }
        Insert: {
          created_at?: string
          explanation?: string | null
          id?: string
          is_correct?: boolean
          option_image_url?: string | null
          option_order?: number
          option_text: string
          question_id: string
        }
        Update: {
          created_at?: string
          explanation?: string | null
          id?: string
          is_correct?: boolean
          option_image_url?: string | null
          option_order?: number
          option_text?: string
          question_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "quiz_answer_options_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "quiz_questions"
            referencedColumns: ["id"]
          },
        ]
      }
      quiz_attempts: {
        Row: {
          attempt_number: number
          completed_at: string | null
          earned_points: number | null
          employee_id: string
          id: string
          metadata: Json | null
          quiz_configuration_id: string
          score: number | null
          started_at: string
          status: Database["public"]["Enums"]["quiz_attempt_status"]
          time_spent_seconds: number | null
          total_points: number | null
        }
        Insert: {
          attempt_number?: number
          completed_at?: string | null
          earned_points?: number | null
          employee_id: string
          id?: string
          metadata?: Json | null
          quiz_configuration_id: string
          score?: number | null
          started_at?: string
          status?: Database["public"]["Enums"]["quiz_attempt_status"]
          time_spent_seconds?: number | null
          total_points?: number | null
        }
        Update: {
          attempt_number?: number
          completed_at?: string | null
          earned_points?: number | null
          employee_id?: string
          id?: string
          metadata?: Json | null
          quiz_configuration_id?: string
          score?: number | null
          started_at?: string
          status?: Database["public"]["Enums"]["quiz_attempt_status"]
          time_spent_seconds?: number | null
          total_points?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "quiz_attempts_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "quiz_attempts_quiz_configuration_id_fkey"
            columns: ["quiz_configuration_id"]
            isOneToOne: false
            referencedRelation: "quiz_configurations"
            referencedColumns: ["id"]
          },
        ]
      }
      quiz_configurations: {
        Row: {
          allow_retries: boolean | null
          allow_review: boolean | null
          created_at: string
          created_by: string | null
          description: string | null
          id: string
          is_required: boolean | null
          max_attempts: number | null
          passing_score: number
          random_pool_size: number | null
          show_correct_answers: boolean | null
          show_results_immediately: boolean | null
          shuffle_answers: boolean | null
          shuffle_questions: boolean | null
          time_limit_minutes: number | null
          title: string
          training_module_id: string
          updated_at: string
        }
        Insert: {
          allow_retries?: boolean | null
          allow_review?: boolean | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_required?: boolean | null
          max_attempts?: number | null
          passing_score?: number
          random_pool_size?: number | null
          show_correct_answers?: boolean | null
          show_results_immediately?: boolean | null
          shuffle_answers?: boolean | null
          shuffle_questions?: boolean | null
          time_limit_minutes?: number | null
          title?: string
          training_module_id: string
          updated_at?: string
        }
        Update: {
          allow_retries?: boolean | null
          allow_review?: boolean | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_required?: boolean | null
          max_attempts?: number | null
          passing_score?: number
          random_pool_size?: number | null
          show_correct_answers?: boolean | null
          show_results_immediately?: boolean | null
          shuffle_answers?: boolean | null
          shuffle_questions?: boolean | null
          time_limit_minutes?: number | null
          title?: string
          training_module_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "quiz_configurations_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      quiz_questions: {
        Row: {
          category: string | null
          correct_feedback: string | null
          created_at: string
          explanation: string | null
          id: string
          incorrect_feedback: string | null
          is_required: boolean | null
          metadata: Json | null
          points: number
          question_image_url: string | null
          question_order: number
          question_text: string
          question_type: Database["public"]["Enums"]["quiz_question_type"]
          question_video_url: string | null
          quiz_configuration_id: string
          updated_at: string
        }
        Insert: {
          category?: string | null
          correct_feedback?: string | null
          created_at?: string
          explanation?: string | null
          id?: string
          incorrect_feedback?: string | null
          is_required?: boolean | null
          metadata?: Json | null
          points?: number
          question_image_url?: string | null
          question_order?: number
          question_text: string
          question_type: Database["public"]["Enums"]["quiz_question_type"]
          question_video_url?: string | null
          quiz_configuration_id: string
          updated_at?: string
        }
        Update: {
          category?: string | null
          correct_feedback?: string | null
          created_at?: string
          explanation?: string | null
          id?: string
          incorrect_feedback?: string | null
          is_required?: boolean | null
          metadata?: Json | null
          points?: number
          question_image_url?: string | null
          question_order?: number
          question_text?: string
          question_type?: Database["public"]["Enums"]["quiz_question_type"]
          question_video_url?: string | null
          quiz_configuration_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "quiz_questions_quiz_configuration_id_fkey"
            columns: ["quiz_configuration_id"]
            isOneToOne: false
            referencedRelation: "quiz_configurations"
            referencedColumns: ["id"]
          },
        ]
      }
      quiz_responses: {
        Row: {
          attempt_id: string
          created_at: string
          id: string
          is_correct: boolean | null
          points_earned: number | null
          question_id: string
          response_metadata: Json | null
          selected_option_ids: string[] | null
          text_response: string | null
          time_spent_seconds: number | null
        }
        Insert: {
          attempt_id: string
          created_at?: string
          id?: string
          is_correct?: boolean | null
          points_earned?: number | null
          question_id: string
          response_metadata?: Json | null
          selected_option_ids?: string[] | null
          text_response?: string | null
          time_spent_seconds?: number | null
        }
        Update: {
          attempt_id?: string
          created_at?: string
          id?: string
          is_correct?: boolean | null
          points_earned?: number | null
          question_id?: string
          response_metadata?: Json | null
          selected_option_ids?: string[] | null
          text_response?: string | null
          time_spent_seconds?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "quiz_responses_attempt_id_fkey"
            columns: ["attempt_id"]
            isOneToOne: false
            referencedRelation: "quiz_attempts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "quiz_responses_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "quiz_questions"
            referencedColumns: ["id"]
          },
        ]
      }
      quiz_struggle_analytics: {
        Row: {
          assignment_id: string
          created_at: string | null
          employee_id: string
          hint_content: string | null
          hint_shown: boolean | null
          id: string
          question_id: string
          resolved: boolean | null
          struggle_data: Json | null
          struggle_type: string
        }
        Insert: {
          assignment_id: string
          created_at?: string | null
          employee_id: string
          hint_content?: string | null
          hint_shown?: boolean | null
          id?: string
          question_id: string
          resolved?: boolean | null
          struggle_data?: Json | null
          struggle_type: string
        }
        Update: {
          assignment_id?: string
          created_at?: string | null
          employee_id?: string
          hint_content?: string | null
          hint_shown?: boolean | null
          id?: string
          question_id?: string
          resolved?: boolean | null
          struggle_data?: Json | null
          struggle_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "quiz_struggle_analytics_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
        ]
      }
      reflection_themes_summary: {
        Row: {
          company_id: string | null
          created_at: string
          id: string
          module_topic: string | null
          occurrence_count: number | null
          question_type: string | null
          sentiment_avg: number | null
          theme: string
          training_module_id: string | null
          updated_at: string
          week_start: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          id?: string
          module_topic?: string | null
          occurrence_count?: number | null
          question_type?: string | null
          sentiment_avg?: number | null
          theme: string
          training_module_id?: string | null
          updated_at?: string
          week_start: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          id?: string
          module_topic?: string | null
          occurrence_count?: number | null
          question_type?: string | null
          sentiment_avg?: number | null
          theme?: string
          training_module_id?: string | null
          updated_at?: string
          week_start?: string
        }
        Relationships: []
      }
      renewal_history: {
        Row: {
          created_at: string
          due_date: string | null
          employee_id: string
          id: string
          original_completion_id: string | null
          renewal_assignment_id: string | null
          renewal_date: string
          renewal_type: string
          status: string
          training_module_id: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          due_date?: string | null
          employee_id: string
          id?: string
          original_completion_id?: string | null
          renewal_assignment_id?: string | null
          renewal_date: string
          renewal_type?: string
          status?: string
          training_module_id: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          due_date?: string | null
          employee_id?: string
          id?: string
          original_completion_id?: string | null
          renewal_assignment_id?: string | null
          renewal_date?: string
          renewal_type?: string
          status?: string
          training_module_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "renewal_history_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "renewal_history_original_completion_id_fkey"
            columns: ["original_completion_id"]
            isOneToOne: false
            referencedRelation: "training_completions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "renewal_history_renewal_assignment_id_fkey"
            columns: ["renewal_assignment_id"]
            isOneToOne: false
            referencedRelation: "training_assignments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "renewal_history_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      renewal_schedules: {
        Row: {
          auto_assign: boolean
          company_id: string | null
          created_at: string
          grace_period_days: number
          id: string
          is_active: boolean
          next_renewal_check: string | null
          renewal_period_months: number
          training_module_id: string
          updated_at: string
        }
        Insert: {
          auto_assign?: boolean
          company_id?: string | null
          created_at?: string
          grace_period_days?: number
          id?: string
          is_active?: boolean
          next_renewal_check?: string | null
          renewal_period_months?: number
          training_module_id: string
          updated_at?: string
        }
        Update: {
          auto_assign?: boolean
          company_id?: string | null
          created_at?: string
          grace_period_days?: number
          id?: string
          is_active?: boolean
          next_renewal_check?: string | null
          renewal_period_months?: number
          training_module_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "renewal_schedules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "renewal_schedules_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      report_alerts: {
        Row: {
          alert_conditions: Json
          company_id: string | null
          created_at: string
          created_by: string | null
          data_source: string
          description: string | null
          id: string
          is_active: boolean | null
          last_triggered_at: string | null
          name: string
          notification_methods: string[] | null
          notification_recipients: string[] | null
          updated_at: string
        }
        Insert: {
          alert_conditions?: Json
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          data_source: string
          description?: string | null
          id?: string
          is_active?: boolean | null
          last_triggered_at?: string | null
          name: string
          notification_methods?: string[] | null
          notification_recipients?: string[] | null
          updated_at?: string
        }
        Update: {
          alert_conditions?: Json
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          data_source?: string
          description?: string | null
          id?: string
          is_active?: boolean | null
          last_triggered_at?: string | null
          name?: string
          notification_methods?: string[] | null
          notification_recipients?: string[] | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "report_alerts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      report_conversations: {
        Row: {
          answer: string | null
          context_data: Json | null
          conversation_step: number
          created_at: string
          id: string
          is_complete: boolean
          question: string | null
          report_id: string | null
          session_id: string
          updated_at: string
          user_id: string
        }
        Insert: {
          answer?: string | null
          context_data?: Json | null
          conversation_step?: number
          created_at?: string
          id?: string
          is_complete?: boolean
          question?: string | null
          report_id?: string | null
          session_id: string
          updated_at?: string
          user_id: string
        }
        Update: {
          answer?: string | null
          context_data?: Json | null
          conversation_step?: number
          created_at?: string
          id?: string
          is_complete?: boolean
          question?: string | null
          report_id?: string | null
          session_id?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "report_conversations_report_id_fkey"
            columns: ["report_id"]
            isOneToOne: false
            referencedRelation: "reports"
            referencedColumns: ["id"]
          },
        ]
      }
      report_executions: {
        Row: {
          completed_at: string | null
          created_at: string
          error_message: string | null
          executed_by: string | null
          execution_time_ms: number | null
          execution_type: string
          file_path: string | null
          id: string
          recipient_emails: string[] | null
          record_count: number | null
          saved_report_id: string | null
          schedule_id: string | null
          status: string
        }
        Insert: {
          completed_at?: string | null
          created_at?: string
          error_message?: string | null
          executed_by?: string | null
          execution_time_ms?: number | null
          execution_type?: string
          file_path?: string | null
          id?: string
          recipient_emails?: string[] | null
          record_count?: number | null
          saved_report_id?: string | null
          schedule_id?: string | null
          status?: string
        }
        Update: {
          completed_at?: string | null
          created_at?: string
          error_message?: string | null
          executed_by?: string | null
          execution_time_ms?: number | null
          execution_type?: string
          file_path?: string | null
          id?: string
          recipient_emails?: string[] | null
          record_count?: number | null
          saved_report_id?: string | null
          schedule_id?: string | null
          status?: string
        }
        Relationships: [
          {
            foreignKeyName: "report_executions_saved_report_id_fkey"
            columns: ["saved_report_id"]
            isOneToOne: false
            referencedRelation: "saved_reports"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "report_executions_schedule_id_fkey"
            columns: ["schedule_id"]
            isOneToOne: false
            referencedRelation: "report_schedules"
            referencedColumns: ["id"]
          },
        ]
      }
      report_instances: {
        Row: {
          company_id: string | null
          created_at: string
          error_message: string | null
          file_size: number | null
          file_url: string | null
          generated_at: string
          generated_by: string | null
          id: string
          report_data: Json
          report_name: string
          scheduled_report_id: string | null
          status: string
          template_id: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          error_message?: string | null
          file_size?: number | null
          file_url?: string | null
          generated_at?: string
          generated_by?: string | null
          id?: string
          report_data: Json
          report_name: string
          scheduled_report_id?: string | null
          status?: string
          template_id: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          error_message?: string | null
          file_size?: number | null
          file_url?: string | null
          generated_at?: string
          generated_by?: string | null
          id?: string
          report_data?: Json
          report_name?: string
          scheduled_report_id?: string | null
          status?: string
          template_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "report_instances_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "report_instances_scheduled_report_id_fkey"
            columns: ["scheduled_report_id"]
            isOneToOne: false
            referencedRelation: "scheduled_reports"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "report_instances_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "report_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      report_notifications: {
        Row: {
          created_at: string
          id: string
          is_read: boolean
          message: string
          notification_type: string
          read_at: string | null
          recipient_id: string
          report_id: string
          title: string
        }
        Insert: {
          created_at?: string
          id?: string
          is_read?: boolean
          message: string
          notification_type: string
          read_at?: string | null
          recipient_id: string
          report_id: string
          title: string
        }
        Update: {
          created_at?: string
          id?: string
          is_read?: boolean
          message?: string
          notification_type?: string
          read_at?: string | null
          recipient_id?: string
          report_id?: string
          title?: string
        }
        Relationships: [
          {
            foreignKeyName: "report_notifications_report_id_fkey"
            columns: ["report_id"]
            isOneToOne: false
            referencedRelation: "reports"
            referencedColumns: ["id"]
          },
        ]
      }
      report_schedules: {
        Row: {
          created_at: string
          created_by: string | null
          email_message: string | null
          email_recipients: string[] | null
          email_subject: string | null
          export_format: string | null
          id: string
          is_active: boolean | null
          next_generation_at: string | null
          saved_report_id: string | null
          schedule_day_of_month: number | null
          schedule_day_of_week: number | null
          schedule_frequency: string
          schedule_time: string | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          email_message?: string | null
          email_recipients?: string[] | null
          email_subject?: string | null
          export_format?: string | null
          id?: string
          is_active?: boolean | null
          next_generation_at?: string | null
          saved_report_id?: string | null
          schedule_day_of_month?: number | null
          schedule_day_of_week?: number | null
          schedule_frequency: string
          schedule_time?: string | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string | null
          email_message?: string | null
          email_recipients?: string[] | null
          email_subject?: string | null
          export_format?: string | null
          id?: string
          is_active?: boolean | null
          next_generation_at?: string | null
          saved_report_id?: string | null
          schedule_day_of_month?: number | null
          schedule_day_of_week?: number | null
          schedule_frequency?: string
          schedule_time?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "report_schedules_saved_report_id_fkey"
            columns: ["saved_report_id"]
            isOneToOne: false
            referencedRelation: "saved_reports"
            referencedColumns: ["id"]
          },
        ]
      }
      report_templates: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          description: string | null
          id: string
          is_active: boolean
          is_system_template: boolean
          layout_config: Json
          name: string
          report_type: string
          template_config: Json
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean
          is_system_template?: boolean
          layout_config?: Json
          name: string
          report_type: string
          template_config?: Json
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean
          is_system_template?: boolean
          layout_config?: Json
          name?: string
          report_type?: string
          template_config?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "report_templates_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      reports: {
        Row: {
          approved_at: string | null
          approved_by: string | null
          category: string | null
          company_id: string | null
          created_at: string
          created_by: string
          data_sources: Json | null
          description: string | null
          filters: Json | null
          id: string
          is_template: boolean
          last_used_at: string | null
          parameters: Json | null
          published_at: string | null
          report_content: string
          report_type: string
          status: string
          template_config: Json | null
          title: string
          updated_at: string
          usage_count: number
        }
        Insert: {
          approved_at?: string | null
          approved_by?: string | null
          category?: string | null
          company_id?: string | null
          created_at?: string
          created_by: string
          data_sources?: Json | null
          description?: string | null
          filters?: Json | null
          id?: string
          is_template?: boolean
          last_used_at?: string | null
          parameters?: Json | null
          published_at?: string | null
          report_content: string
          report_type?: string
          status?: string
          template_config?: Json | null
          title: string
          updated_at?: string
          usage_count?: number
        }
        Update: {
          approved_at?: string | null
          approved_by?: string | null
          category?: string | null
          company_id?: string | null
          created_at?: string
          created_by?: string
          data_sources?: Json | null
          description?: string | null
          filters?: Json | null
          id?: string
          is_template?: boolean
          last_used_at?: string | null
          parameters?: Json | null
          published_at?: string | null
          report_content?: string
          report_type?: string
          status?: string
          template_config?: Json | null
          title?: string
          updated_at?: string
          usage_count?: number
        }
        Relationships: []
      }
      retainer_usage_alerts: {
        Row: {
          alert_sent_at: string | null
          alert_type: string
          company_id: string
          created_at: string | null
          current_hours: number
          id: string
          recipients: Json | null
          resolved: boolean | null
          retainer_id: string
          threshold_hours: number
        }
        Insert: {
          alert_sent_at?: string | null
          alert_type: string
          company_id: string
          created_at?: string | null
          current_hours: number
          id?: string
          recipients?: Json | null
          resolved?: boolean | null
          retainer_id: string
          threshold_hours: number
        }
        Update: {
          alert_sent_at?: string | null
          alert_type?: string
          company_id?: string
          created_at?: string | null
          current_hours?: number
          id?: string
          recipients?: Json | null
          resolved?: boolean | null
          retainer_id?: string
          threshold_hours?: number
        }
        Relationships: [
          {
            foreignKeyName: "retainer_usage_alerts_retainer_id_fkey"
            columns: ["retainer_id"]
            isOneToOne: false
            referencedRelation: "hroiq_client_retainers"
            referencedColumns: ["id"]
          },
        ]
      }
      revenue_records: {
        Row: {
          amount: number
          created_at: string
          currency: string
          deal_id: string | null
          id: string
          lead_id: string | null
          notes: string | null
          recorded_date: string
          revenue_type: string
          sales_rep_id: string | null
          updated_at: string
        }
        Insert: {
          amount: number
          created_at?: string
          currency?: string
          deal_id?: string | null
          id?: string
          lead_id?: string | null
          notes?: string | null
          recorded_date: string
          revenue_type: string
          sales_rep_id?: string | null
          updated_at?: string
        }
        Update: {
          amount?: number
          created_at?: string
          currency?: string
          deal_id?: string | null
          id?: string
          lead_id?: string | null
          notes?: string | null
          recorded_date?: string
          revenue_type?: string
          sales_rep_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "revenue_records_deal_id_fkey"
            columns: ["deal_id"]
            isOneToOne: false
            referencedRelation: "deals"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "revenue_records_lead_id_fkey"
            columns: ["lead_id"]
            isOneToOne: false
            referencedRelation: "leads"
            referencedColumns: ["id"]
          },
        ]
      }
      review_cycles: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          description: string | null
          due_date: string
          end_date: string
          evaluation_type: Database["public"]["Enums"]["evaluation_type"]
          id: string
          name: string
          notification_schedule: Json | null
          start_date: string
          status: Database["public"]["Enums"]["review_status"]
          target_criteria: Json | null
          template_id: string | null
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          due_date: string
          end_date: string
          evaluation_type: Database["public"]["Enums"]["evaluation_type"]
          id?: string
          name: string
          notification_schedule?: Json | null
          start_date: string
          status?: Database["public"]["Enums"]["review_status"]
          target_criteria?: Json | null
          template_id?: string | null
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          due_date?: string
          end_date?: string
          evaluation_type?: Database["public"]["Enums"]["evaluation_type"]
          id?: string
          name?: string
          notification_schedule?: Json | null
          start_date?: string
          status?: Database["public"]["Enums"]["review_status"]
          target_criteria?: Json | null
          template_id?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "review_cycles_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "review_cycles_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "evaluation_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      risk_feed: {
        Row: {
          auto_resolved: boolean | null
          company_id: string
          created_at: string
          description: string
          first_detected: string
          id: string
          impact_assessment: string | null
          last_updated: string
          metadata: Json | null
          mitigation_strategy: string | null
          risk_level: string
          risk_score: number | null
          risk_type: string
          status: string
          title: string
          updated_at: string
        }
        Insert: {
          auto_resolved?: boolean | null
          company_id: string
          created_at?: string
          description: string
          first_detected?: string
          id?: string
          impact_assessment?: string | null
          last_updated?: string
          metadata?: Json | null
          mitigation_strategy?: string | null
          risk_level: string
          risk_score?: number | null
          risk_type: string
          status?: string
          title: string
          updated_at?: string
        }
        Update: {
          auto_resolved?: boolean | null
          company_id?: string
          created_at?: string
          description?: string
          first_detected?: string
          id?: string
          impact_assessment?: string | null
          last_updated?: string
          metadata?: Json | null
          mitigation_strategy?: string | null
          risk_level?: string
          risk_score?: number | null
          risk_type?: string
          status?: string
          title?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "risk_feed_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      role_change_audit: {
        Row: {
          changed_at: string | null
          changed_by: string
          company_id: string | null
          id: string
          new_role: Database["public"]["Enums"]["app_role"]
          old_role: Database["public"]["Enums"]["app_role"] | null
          reason: string | null
          user_id: string
        }
        Insert: {
          changed_at?: string | null
          changed_by: string
          company_id?: string | null
          id?: string
          new_role: Database["public"]["Enums"]["app_role"]
          old_role?: Database["public"]["Enums"]["app_role"] | null
          reason?: string | null
          user_id: string
        }
        Update: {
          changed_at?: string | null
          changed_by?: string
          company_id?: string | null
          id?: string
          new_role?: Database["public"]["Enums"]["app_role"]
          old_role?: Database["public"]["Enums"]["app_role"] | null
          reason?: string | null
          user_id?: string
        }
        Relationships: []
      }
      role_learning_profiles: {
        Row: {
          coaching_style: string | null
          context_prompts: string[] | null
          created_at: string
          difficulty_progression: string | null
          focus_topics: string[] | null
          id: string
          industry: string
          is_active: boolean | null
          org_size_category: string
          priority_areas: string[] | null
          recommended_modules: string[] | null
          role_specific_examples: string[] | null
          role_title: string
          scenario_types: string[] | null
          updated_at: string
        }
        Insert: {
          coaching_style?: string | null
          context_prompts?: string[] | null
          created_at?: string
          difficulty_progression?: string | null
          focus_topics?: string[] | null
          id?: string
          industry: string
          is_active?: boolean | null
          org_size_category: string
          priority_areas?: string[] | null
          recommended_modules?: string[] | null
          role_specific_examples?: string[] | null
          role_title: string
          scenario_types?: string[] | null
          updated_at?: string
        }
        Update: {
          coaching_style?: string | null
          context_prompts?: string[] | null
          created_at?: string
          difficulty_progression?: string | null
          focus_topics?: string[] | null
          id?: string
          industry?: string
          is_active?: boolean | null
          org_size_category?: string
          priority_areas?: string[] | null
          recommended_modules?: string[] | null
          role_specific_examples?: string[] | null
          role_title?: string
          scenario_types?: string[] | null
          updated_at?: string
        }
        Relationships: []
      }
      role_permissions: {
        Row: {
          created_at: string
          id: string
          permission_id: string
          role: Database["public"]["Enums"]["app_role"]
        }
        Insert: {
          created_at?: string
          id?: string
          permission_id: string
          role: Database["public"]["Enums"]["app_role"]
        }
        Update: {
          created_at?: string
          id?: string
          permission_id?: string
          role?: Database["public"]["Enums"]["app_role"]
        }
        Relationships: [
          {
            foreignKeyName: "role_permissions_permission_id_fkey"
            columns: ["permission_id"]
            isOneToOne: false
            referencedRelation: "permissions"
            referencedColumns: ["id"]
          },
        ]
      }
      role_templates: {
        Row: {
          created_at: string
          created_by: string | null
          default_attributes: Json
          default_modules: string[] | null
          id: string
          is_active: boolean
          role: Database["public"]["Enums"]["app_role"]
          template_name: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          default_attributes?: Json
          default_modules?: string[] | null
          id?: string
          is_active?: boolean
          role: Database["public"]["Enums"]["app_role"]
          template_name: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string | null
          default_attributes?: Json
          default_modules?: string[] | null
          id?: string
          is_active?: boolean
          role?: Database["public"]["Enums"]["app_role"]
          template_name?: string
          updated_at?: string
        }
        Relationships: []
      }
      sales_metrics: {
        Row: {
          additional_data: Json | null
          created_at: string
          id: string
          metric_date: string
          metric_name: string
          metric_type: string
          metric_value: number
          period_type: string
          updated_at: string
        }
        Insert: {
          additional_data?: Json | null
          created_at?: string
          id?: string
          metric_date: string
          metric_name: string
          metric_type: string
          metric_value: number
          period_type?: string
          updated_at?: string
        }
        Update: {
          additional_data?: Json | null
          created_at?: string
          id?: string
          metric_date?: string
          metric_name?: string
          metric_type?: string
          metric_value?: number
          period_type?: string
          updated_at?: string
        }
        Relationships: []
      }
      sarah_behavior_insights: {
        Row: {
          affected_user_count: number | null
          behavior_pattern: Json
          confidence_score: number | null
          content_topic: string | null
          created_at: string | null
          description: string
          flagged_for_review: boolean | null
          id: string
          insight_type: string
          quiz_question_ids: string[] | null
          section_id: string | null
          severity: string | null
          status: string | null
          suggested_actions: Json | null
          title: string
          training_module_id: string
          updated_at: string | null
        }
        Insert: {
          affected_user_count?: number | null
          behavior_pattern: Json
          confidence_score?: number | null
          content_topic?: string | null
          created_at?: string | null
          description: string
          flagged_for_review?: boolean | null
          id?: string
          insight_type: string
          quiz_question_ids?: string[] | null
          section_id?: string | null
          severity?: string | null
          status?: string | null
          suggested_actions?: Json | null
          title: string
          training_module_id: string
          updated_at?: string | null
        }
        Update: {
          affected_user_count?: number | null
          behavior_pattern?: Json
          confidence_score?: number | null
          content_topic?: string | null
          created_at?: string | null
          description?: string
          flagged_for_review?: boolean | null
          id?: string
          insight_type?: string
          quiz_question_ids?: string[] | null
          section_id?: string | null
          severity?: string | null
          status?: string | null
          suggested_actions?: Json | null
          title?: string
          training_module_id?: string
          updated_at?: string | null
        }
        Relationships: []
      }
      saved_reports: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          data_source: string
          description: string | null
          id: string
          is_template: boolean | null
          name: string
          report_config: Json
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          data_source: string
          description?: string | null
          id?: string
          is_template?: boolean | null
          name: string
          report_config?: Json
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          data_source?: string
          description?: string | null
          id?: string
          is_template?: boolean | null
          name?: string
          report_config?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "saved_reports_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      scene_completions: {
        Row: {
          completed_at: string | null
          completion_percentage: number | null
          created_at: string
          employee_id: string
          id: string
          scene_id: string
          scorm_data: Json | null
          started_at: string | null
          status: string | null
          time_spent_seconds: number | null
          updated_at: string
        }
        Insert: {
          completed_at?: string | null
          completion_percentage?: number | null
          created_at?: string
          employee_id: string
          id?: string
          scene_id: string
          scorm_data?: Json | null
          started_at?: string | null
          status?: string | null
          time_spent_seconds?: number | null
          updated_at?: string
        }
        Update: {
          completed_at?: string | null
          completion_percentage?: number | null
          created_at?: string
          employee_id?: string
          id?: string
          scene_id?: string
          scorm_data?: Json | null
          started_at?: string | null
          status?: string | null
          time_spent_seconds?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "scene_completions_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "scene_completions_scene_id_fkey"
            columns: ["scene_id"]
            isOneToOne: false
            referencedRelation: "training_scenes"
            referencedColumns: ["id"]
          },
        ]
      }
      scene_question_options: {
        Row: {
          created_at: string
          explanation: string | null
          id: string
          is_correct: boolean | null
          option_order: number
          option_text: string
          question_id: string
        }
        Insert: {
          created_at?: string
          explanation?: string | null
          id?: string
          is_correct?: boolean | null
          option_order?: number
          option_text: string
          question_id: string
        }
        Update: {
          created_at?: string
          explanation?: string | null
          id?: string
          is_correct?: boolean | null
          option_order?: number
          option_text?: string
          question_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "scene_question_options_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "scene_questions"
            referencedColumns: ["id"]
          },
        ]
      }
      scene_question_responses: {
        Row: {
          created_at: string
          employee_id: string
          id: string
          is_correct: boolean | null
          points_earned: number | null
          question_id: string
          responded_at: string | null
          selected_option_id: string | null
          true_false_answer: boolean | null
        }
        Insert: {
          created_at?: string
          employee_id: string
          id?: string
          is_correct?: boolean | null
          points_earned?: number | null
          question_id: string
          responded_at?: string | null
          selected_option_id?: string | null
          true_false_answer?: boolean | null
        }
        Update: {
          created_at?: string
          employee_id?: string
          id?: string
          is_correct?: boolean | null
          points_earned?: number | null
          question_id?: string
          responded_at?: string | null
          selected_option_id?: string | null
          true_false_answer?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "scene_question_responses_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "scene_question_responses_question_id_fkey"
            columns: ["question_id"]
            isOneToOne: false
            referencedRelation: "scene_questions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "scene_question_responses_selected_option_id_fkey"
            columns: ["selected_option_id"]
            isOneToOne: false
            referencedRelation: "scene_question_options"
            referencedColumns: ["id"]
          },
        ]
      }
      scene_questions: {
        Row: {
          created_at: string
          created_by: string | null
          explanation: string | null
          id: string
          is_required: boolean | null
          metadata: Json | null
          points: number | null
          question_order: number
          question_text: string
          question_type: string
          scene_id: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by?: string | null
          explanation?: string | null
          id?: string
          is_required?: boolean | null
          metadata?: Json | null
          points?: number | null
          question_order?: number
          question_text: string
          question_type: string
          scene_id: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string | null
          explanation?: string | null
          id?: string
          is_required?: boolean | null
          metadata?: Json | null
          points?: number | null
          question_order?: number
          question_text?: string
          question_type?: string
          scene_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "scene_questions_scene_id_fkey"
            columns: ["scene_id"]
            isOneToOne: false
            referencedRelation: "training_scenes"
            referencedColumns: ["id"]
          },
        ]
      }
      schedule_conflicts: {
        Row: {
          conflict_date: string
          conflict_type: string
          conflicting_shift_id: string | null
          created_at: string
          description: string
          employee_id: string
          id: string
          primary_shift_id: string | null
          resolution_notes: string | null
          resolved_at: string | null
          resolved_by: string | null
          severity: string
          status: string
          updated_at: string
        }
        Insert: {
          conflict_date: string
          conflict_type: string
          conflicting_shift_id?: string | null
          created_at?: string
          description: string
          employee_id: string
          id?: string
          primary_shift_id?: string | null
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          status?: string
          updated_at?: string
        }
        Update: {
          conflict_date?: string
          conflict_type?: string
          conflicting_shift_id?: string | null
          created_at?: string
          description?: string
          employee_id?: string
          id?: string
          primary_shift_id?: string | null
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "schedule_conflicts_conflicting_shift_id_fkey"
            columns: ["conflicting_shift_id"]
            isOneToOne: false
            referencedRelation: "work_shifts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "schedule_conflicts_primary_shift_id_fkey"
            columns: ["primary_shift_id"]
            isOneToOne: false
            referencedRelation: "work_shifts"
            referencedColumns: ["id"]
          },
        ]
      }
      schedule_templates: {
        Row: {
          client_id: string | null
          created_at: string
          created_by: string
          id: string
          is_default: boolean
          schedule_pattern: Json
          template_name: string
          updated_at: string
        }
        Insert: {
          client_id?: string | null
          created_at?: string
          created_by: string
          id?: string
          is_default?: boolean
          schedule_pattern: Json
          template_name: string
          updated_at?: string
        }
        Update: {
          client_id?: string | null
          created_at?: string
          created_by?: string
          id?: string
          is_default?: boolean
          schedule_pattern?: Json
          template_name?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "schedule_templates_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
        ]
      }
      scheduled_reports: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string | null
          description: string | null
          id: string
          is_active: boolean
          last_generated_at: string | null
          name: string
          next_generation_at: string
          recipients: string[]
          report_format: string
          schedule_day_of_month: number | null
          schedule_day_of_week: number | null
          schedule_frequency: string
          schedule_time: string
          template_id: string
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean
          last_generated_at?: string | null
          name: string
          next_generation_at: string
          recipients?: string[]
          report_format?: string
          schedule_day_of_month?: number | null
          schedule_day_of_week?: number | null
          schedule_frequency: string
          schedule_time?: string
          template_id: string
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          id?: string
          is_active?: boolean
          last_generated_at?: string | null
          name?: string
          next_generation_at?: string
          recipients?: string[]
          report_format?: string
          schedule_day_of_month?: number | null
          schedule_day_of_week?: number | null
          schedule_frequency?: string
          schedule_time?: string
          template_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "scheduled_reports_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "scheduled_reports_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "report_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      scorm_progress: {
        Row: {
          assignment_id: string
          completed_at: string | null
          completion_status: string
          created_at: string
          employee_id: string
          id: string
          scene_id: string
          score_percentage: number | null
          session_time: unknown | null
          suspend_data: string | null
          updated_at: string
        }
        Insert: {
          assignment_id: string
          completed_at?: string | null
          completion_status?: string
          created_at?: string
          employee_id: string
          id?: string
          scene_id: string
          score_percentage?: number | null
          session_time?: unknown | null
          suspend_data?: string | null
          updated_at?: string
        }
        Update: {
          assignment_id?: string
          completed_at?: string | null
          completion_status?: string
          created_at?: string
          employee_id?: string
          id?: string
          scene_id?: string
          score_percentage?: number | null
          session_time?: unknown | null
          suspend_data?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      search_index: {
        Row: {
          content: string
          created_at: string
          entity_id: string
          entity_type: string
          id: string
          metadata: Json | null
          search_vector: unknown | null
          title: string
          updated_at: string
        }
        Insert: {
          content: string
          created_at?: string
          entity_id: string
          entity_type: string
          id?: string
          metadata?: Json | null
          search_vector?: unknown | null
          title: string
          updated_at?: string
        }
        Update: {
          content?: string
          created_at?: string
          entity_id?: string
          entity_type?: string
          id?: string
          metadata?: Json | null
          search_vector?: unknown | null
          title?: string
          updated_at?: string
        }
        Relationships: []
      }
      seat_access_logs: {
        Row: {
          access_granted: boolean
          attempted_at: string
          company_id: string
          created_at: string
          id: string
          reason: string | null
          training_module_id: string
          user_id: string | null
        }
        Insert: {
          access_granted?: boolean
          attempted_at?: string
          company_id: string
          created_at?: string
          id?: string
          reason?: string | null
          training_module_id: string
          user_id?: string | null
        }
        Update: {
          access_granted?: boolean
          attempted_at?: string
          company_id?: string
          created_at?: string
          id?: string
          reason?: string | null
          training_module_id?: string
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "seat_access_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "seat_access_logs_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      seat_plan_configurations: {
        Row: {
          allow_additional_seats: boolean | null
          auto_unlock_on_purchase: boolean | null
          created_at: string | null
          default_courses: string[] | null
          id: string
          included_seats: number
          is_active: boolean | null
          max_total_seats: number | null
          plan_name: string
          price_per_additional_seat: number | null
          updated_at: string | null
        }
        Insert: {
          allow_additional_seats?: boolean | null
          auto_unlock_on_purchase?: boolean | null
          created_at?: string | null
          default_courses?: string[] | null
          id?: string
          included_seats: number
          is_active?: boolean | null
          max_total_seats?: number | null
          plan_name: string
          price_per_additional_seat?: number | null
          updated_at?: string | null
        }
        Update: {
          allow_additional_seats?: boolean | null
          auto_unlock_on_purchase?: boolean | null
          created_at?: string | null
          default_courses?: string[] | null
          id?: string
          included_seats?: number
          is_active?: boolean | null
          max_total_seats?: number | null
          plan_name?: string
          price_per_additional_seat?: number | null
          updated_at?: string | null
        }
        Relationships: []
      }
      seat_transactions: {
        Row: {
          action_type: string
          company_id: string | null
          created_at: string | null
          id: string
          metadata: Json | null
          performed_by: string | null
          price_paid: number | null
          seats_change: number | null
          stripe_payment_intent_id: string | null
          training_module_id: string | null
        }
        Insert: {
          action_type: string
          company_id?: string | null
          created_at?: string | null
          id?: string
          metadata?: Json | null
          performed_by?: string | null
          price_paid?: number | null
          seats_change?: number | null
          stripe_payment_intent_id?: string | null
          training_module_id?: string | null
        }
        Update: {
          action_type?: string
          company_id?: string | null
          created_at?: string | null
          id?: string
          metadata?: Json | null
          performed_by?: string | null
          price_paid?: number | null
          seats_change?: number | null
          stripe_payment_intent_id?: string | null
          training_module_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "seat_transactions_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "seat_transactions_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      security_audit_logs: {
        Row: {
          action: string
          compliance_flags: string[] | null
          created_at: string
          data_classification: string | null
          event_type: string
          failure_reason: string | null
          geolocation: Json | null
          id: string
          ip_address: unknown | null
          metadata: Json | null
          pii_fields_accessed: string[] | null
          resource_id: string | null
          resource_type: string
          risk_score: number | null
          sensitive_data_accessed: boolean | null
          session_id: string | null
          success: boolean
          user_agent: string | null
          user_id: string | null
        }
        Insert: {
          action: string
          compliance_flags?: string[] | null
          created_at?: string
          data_classification?: string | null
          event_type: string
          failure_reason?: string | null
          geolocation?: Json | null
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          pii_fields_accessed?: string[] | null
          resource_id?: string | null
          resource_type: string
          risk_score?: number | null
          sensitive_data_accessed?: boolean | null
          session_id?: string | null
          success: boolean
          user_agent?: string | null
          user_id?: string | null
        }
        Update: {
          action?: string
          compliance_flags?: string[] | null
          created_at?: string
          data_classification?: string | null
          event_type?: string
          failure_reason?: string | null
          geolocation?: Json | null
          id?: string
          ip_address?: unknown | null
          metadata?: Json | null
          pii_fields_accessed?: string[] | null
          resource_id?: string | null
          resource_type?: string
          risk_score?: number | null
          sensitive_data_accessed?: boolean | null
          session_id?: string | null
          success?: boolean
          user_agent?: string | null
          user_id?: string | null
        }
        Relationships: []
      }
      security_events: {
        Row: {
          created_at: string
          details: Json | null
          event_type: string
          id: string
          is_resolved: boolean
          resolved_at: string | null
          resolved_by: string | null
          severity: string
          source_ip: unknown | null
          user_agent: string | null
          user_id: string | null
        }
        Insert: {
          created_at?: string
          details?: Json | null
          event_type: string
          id?: string
          is_resolved?: boolean
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          source_ip?: unknown | null
          user_agent?: string | null
          user_id?: string | null
        }
        Update: {
          created_at?: string
          details?: Json | null
          event_type?: string
          id?: string
          is_resolved?: boolean
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          source_ip?: unknown | null
          user_agent?: string | null
          user_id?: string | null
        }
        Relationships: []
      }
      service_audit_trail: {
        Row: {
          action_details: Json | null
          action_type: string
          deliverable_id: string
          id: string
          performed_by: string
          timestamp: string | null
        }
        Insert: {
          action_details?: Json | null
          action_type: string
          deliverable_id: string
          id?: string
          performed_by: string
          timestamp?: string | null
        }
        Update: {
          action_details?: Json | null
          action_type?: string
          deliverable_id?: string
          id?: string
          performed_by?: string
          timestamp?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "service_audit_trail_deliverable_id_fkey"
            columns: ["deliverable_id"]
            isOneToOne: false
            referencedRelation: "service_deliverables"
            referencedColumns: ["id"]
          },
        ]
      }
      service_deliverables: {
        Row: {
          approved_by: string | null
          billable_hours: number | null
          case_id: string | null
          client_visible: boolean | null
          company_id: string
          created_at: string | null
          created_by: string
          deliverable_type: string
          delivered_at: string | null
          description: string | null
          file_url: string | null
          id: string
          metadata: Json | null
          retainer_id: string | null
          status: string | null
          title: string
          updated_at: string | null
          version: string | null
        }
        Insert: {
          approved_by?: string | null
          billable_hours?: number | null
          case_id?: string | null
          client_visible?: boolean | null
          company_id: string
          created_at?: string | null
          created_by: string
          deliverable_type: string
          delivered_at?: string | null
          description?: string | null
          file_url?: string | null
          id?: string
          metadata?: Json | null
          retainer_id?: string | null
          status?: string | null
          title: string
          updated_at?: string | null
          version?: string | null
        }
        Update: {
          approved_by?: string | null
          billable_hours?: number | null
          case_id?: string | null
          client_visible?: boolean | null
          company_id?: string
          created_at?: string | null
          created_by?: string
          deliverable_type?: string
          delivered_at?: string | null
          description?: string | null
          file_url?: string | null
          id?: string
          metadata?: Json | null
          retainer_id?: string | null
          status?: string | null
          title?: string
          updated_at?: string | null
          version?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "service_deliverables_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "service_deliverables_retainer_id_fkey"
            columns: ["retainer_id"]
            isOneToOne: false
            referencedRelation: "hroiq_client_retainers"
            referencedColumns: ["id"]
          },
        ]
      }
      shared_links: {
        Row: {
          created_at: string
          expires_at: string | null
          id: string
          is_active: boolean | null
          page_type: string
          token: string
          view_count: number | null
        }
        Insert: {
          created_at?: string
          expires_at?: string | null
          id?: string
          is_active?: boolean | null
          page_type: string
          token: string
          view_count?: number | null
        }
        Update: {
          created_at?: string
          expires_at?: string | null
          id?: string
          is_active?: boolean | null
          page_type?: string
          token?: string
          view_count?: number | null
        }
        Relationships: []
      }
      shift_change_requests: {
        Row: {
          created_at: string
          id: string
          original_date: string | null
          original_end_time: string | null
          original_start_time: string | null
          priority: string
          reason: string
          request_type: string
          requested_by: string
          requested_date: string | null
          requested_end_time: string | null
          requested_start_time: string | null
          response_notes: string | null
          reviewed_at: string | null
          reviewed_by: string | null
          shift_id: string | null
          status: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          id?: string
          original_date?: string | null
          original_end_time?: string | null
          original_start_time?: string | null
          priority?: string
          reason: string
          request_type: string
          requested_by: string
          requested_date?: string | null
          requested_end_time?: string | null
          requested_start_time?: string | null
          response_notes?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          shift_id?: string | null
          status?: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          id?: string
          original_date?: string | null
          original_end_time?: string | null
          original_start_time?: string | null
          priority?: string
          reason?: string
          request_type?: string
          requested_by?: string
          requested_date?: string | null
          requested_end_time?: string | null
          requested_start_time?: string | null
          response_notes?: string | null
          reviewed_at?: string | null
          reviewed_by?: string | null
          shift_id?: string | null
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "shift_change_requests_shift_id_fkey"
            columns: ["shift_id"]
            isOneToOne: false
            referencedRelation: "work_shifts"
            referencedColumns: ["id"]
          },
        ]
      }
      shift_enforcement_rules: {
        Row: {
          allow_early_clockin_minutes: number | null
          allow_late_clockin_minutes: number | null
          auto_clockout_delay_minutes: number | null
          auto_clockout_enabled: boolean | null
          block_unscheduled_punches: boolean | null
          company_id: string
          created_at: string
          flag_early_departures: boolean | null
          flag_late_arrivals: boolean | null
          id: string
          require_schedule_to_punch: boolean | null
          updated_at: string
        }
        Insert: {
          allow_early_clockin_minutes?: number | null
          allow_late_clockin_minutes?: number | null
          auto_clockout_delay_minutes?: number | null
          auto_clockout_enabled?: boolean | null
          block_unscheduled_punches?: boolean | null
          company_id: string
          created_at?: string
          flag_early_departures?: boolean | null
          flag_late_arrivals?: boolean | null
          id?: string
          require_schedule_to_punch?: boolean | null
          updated_at?: string
        }
        Update: {
          allow_early_clockin_minutes?: number | null
          allow_late_clockin_minutes?: number | null
          auto_clockout_delay_minutes?: number | null
          auto_clockout_enabled?: boolean | null
          block_unscheduled_punches?: boolean | null
          company_id?: string
          created_at?: string
          flag_early_departures?: boolean | null
          flag_late_arrivals?: boolean | null
          id?: string
          require_schedule_to_punch?: boolean | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "shift_enforcement_rules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: true
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      shift_templates: {
        Row: {
          break_minutes: number | null
          company_id: string
          created_at: string
          end_time: string
          id: string
          is_active: boolean | null
          job_code: string | null
          name: string
          start_time: string
          updated_at: string
        }
        Insert: {
          break_minutes?: number | null
          company_id: string
          created_at?: string
          end_time: string
          id?: string
          is_active?: boolean | null
          job_code?: string | null
          name: string
          start_time: string
          updated_at?: string
        }
        Update: {
          break_minutes?: number | null
          company_id?: string
          created_at?: string
          end_time?: string
          id?: string
          is_active?: boolean | null
          job_code?: string | null
          name?: string
          start_time?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "shift_templates_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      sms_cases: {
        Row: {
          ai_confidence_score: number | null
          ai_last_content_hash: string | null
          ai_processed_at: string | null
          ai_suggested_action: string | null
          ai_summary: string | null
          assigned_to: string | null
          client_name: string | null
          conversation_id: string | null
          conversation_step: number
          created_at: string
          employee_name: string | null
          id: string
          issue_category: string
          last_message: string | null
          phone_number: string
          status: string
          updated_at: string
          wants_hr: boolean
        }
        Insert: {
          ai_confidence_score?: number | null
          ai_last_content_hash?: string | null
          ai_processed_at?: string | null
          ai_suggested_action?: string | null
          ai_summary?: string | null
          assigned_to?: string | null
          client_name?: string | null
          conversation_id?: string | null
          conversation_step?: number
          created_at?: string
          employee_name?: string | null
          id?: string
          issue_category?: string
          last_message?: string | null
          phone_number: string
          status?: string
          updated_at?: string
          wants_hr?: boolean
        }
        Update: {
          ai_confidence_score?: number | null
          ai_last_content_hash?: string | null
          ai_processed_at?: string | null
          ai_suggested_action?: string | null
          ai_summary?: string | null
          assigned_to?: string | null
          client_name?: string | null
          conversation_id?: string | null
          conversation_step?: number
          created_at?: string
          employee_name?: string | null
          id?: string
          issue_category?: string
          last_message?: string | null
          phone_number?: string
          status?: string
          updated_at?: string
          wants_hr?: boolean
        }
        Relationships: [
          {
            foreignKeyName: "sms_cases_conversation_id_fkey"
            columns: ["conversation_id"]
            isOneToOne: false
            referencedRelation: "sms_conversations"
            referencedColumns: ["id"]
          },
        ]
      }
      sms_conversations: {
        Row: {
          case_id: string | null
          conversation_data: Json | null
          conversation_step: string
          created_at: string
          current_step: string | null
          error_flagged: boolean | null
          id: string
          is_active: boolean | null
          last_message_at: string | null
          last_updated_at: string | null
          phone_number: string
          timeout_count: number | null
          updated_at: string
        }
        Insert: {
          case_id?: string | null
          conversation_data?: Json | null
          conversation_step?: string
          created_at?: string
          current_step?: string | null
          error_flagged?: boolean | null
          id?: string
          is_active?: boolean | null
          last_message_at?: string | null
          last_updated_at?: string | null
          phone_number: string
          timeout_count?: number | null
          updated_at?: string
        }
        Update: {
          case_id?: string | null
          conversation_data?: Json | null
          conversation_step?: string
          created_at?: string
          current_step?: string | null
          error_flagged?: boolean | null
          id?: string
          is_active?: boolean | null
          last_message_at?: string | null
          last_updated_at?: string | null
          phone_number?: string
          timeout_count?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "sms_conversations_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "pulse_cases"
            referencedColumns: ["id"]
          },
        ]
      }
      sms_intake_sessions: {
        Row: {
          client_name: string | null
          completed_at: string | null
          created_at: string
          description: string | null
          employee_name: string | null
          id: string
          issue_category: string | null
          phone_number: string
          pulse_case_id: string | null
          status: string | null
          updated_at: string
          wants_hr: boolean | null
        }
        Insert: {
          client_name?: string | null
          completed_at?: string | null
          created_at?: string
          description?: string | null
          employee_name?: string | null
          id?: string
          issue_category?: string | null
          phone_number: string
          pulse_case_id?: string | null
          status?: string | null
          updated_at?: string
          wants_hr?: boolean | null
        }
        Update: {
          client_name?: string | null
          completed_at?: string | null
          created_at?: string
          description?: string | null
          employee_name?: string | null
          id?: string
          issue_category?: string | null
          phone_number?: string
          pulse_case_id?: string | null
          status?: string | null
          updated_at?: string
          wants_hr?: boolean | null
        }
        Relationships: [
          {
            foreignKeyName: "sms_intake_sessions_pulse_case_id_fkey"
            columns: ["pulse_case_id"]
            isOneToOne: false
            referencedRelation: "pulse_cases"
            referencedColumns: ["id"]
          },
        ]
      }
      sms_logs: {
        Row: {
          conversation_id: string
          created_at: string
          direction: string
          id: string
          message_body: string
          metadata: Json | null
          phone_number: string
          status: string | null
          twilio_sid: string | null
        }
        Insert: {
          conversation_id: string
          created_at?: string
          direction: string
          id?: string
          message_body: string
          metadata?: Json | null
          phone_number: string
          status?: string | null
          twilio_sid?: string | null
        }
        Update: {
          conversation_id?: string
          created_at?: string
          direction?: string
          id?: string
          message_body?: string
          metadata?: Json | null
          phone_number?: string
          status?: string | null
          twilio_sid?: string | null
        }
        Relationships: []
      }
      sso_configurations: {
        Row: {
          auto_provision_users: boolean
          company_id: string
          created_at: string
          created_by: string | null
          default_role: Database["public"]["Enums"]["app_role"]
          domain_restrictions: string[] | null
          id: string
          is_active: boolean
          oidc_client_id: string | null
          oidc_client_secret: string | null
          oidc_discovery_url: string | null
          oidc_scopes: string[] | null
          provider_name: string
          provider_type: string
          saml_attribute_mapping: Json | null
          saml_certificate: string | null
          saml_entity_id: string | null
          saml_sso_url: string | null
          updated_at: string
        }
        Insert: {
          auto_provision_users?: boolean
          company_id: string
          created_at?: string
          created_by?: string | null
          default_role?: Database["public"]["Enums"]["app_role"]
          domain_restrictions?: string[] | null
          id?: string
          is_active?: boolean
          oidc_client_id?: string | null
          oidc_client_secret?: string | null
          oidc_discovery_url?: string | null
          oidc_scopes?: string[] | null
          provider_name: string
          provider_type?: string
          saml_attribute_mapping?: Json | null
          saml_certificate?: string | null
          saml_entity_id?: string | null
          saml_sso_url?: string | null
          updated_at?: string
        }
        Update: {
          auto_provision_users?: boolean
          company_id?: string
          created_at?: string
          created_by?: string | null
          default_role?: Database["public"]["Enums"]["app_role"]
          domain_restrictions?: string[] | null
          id?: string
          is_active?: boolean
          oidc_client_id?: string | null
          oidc_client_secret?: string | null
          oidc_discovery_url?: string | null
          oidc_scopes?: string[] | null
          provider_name?: string
          provider_type?: string
          saml_attribute_mapping?: Json | null
          saml_certificate?: string | null
          saml_entity_id?: string | null
          saml_sso_url?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "sso_configurations_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      sso_sessions: {
        Row: {
          created_at: string
          expires_at: string
          id: string
          relay_state: string | null
          saml_request_id: string | null
          session_id: string
          sso_configuration_id: string
          status: string
          updated_at: string
          user_id: string | null
        }
        Insert: {
          created_at?: string
          expires_at?: string
          id?: string
          relay_state?: string | null
          saml_request_id?: string | null
          session_id: string
          sso_configuration_id: string
          status?: string
          updated_at?: string
          user_id?: string | null
        }
        Update: {
          created_at?: string
          expires_at?: string
          id?: string
          relay_state?: string | null
          saml_request_id?: string | null
          session_id?: string
          sso_configuration_id?: string
          status?: string
          updated_at?: string
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "sso_sessions_sso_configuration_id_fkey"
            columns: ["sso_configuration_id"]
            isOneToOne: false
            referencedRelation: "sso_configurations"
            referencedColumns: ["id"]
          },
        ]
      }
      sso_user_mappings: {
        Row: {
          created_at: string
          external_attributes: Json | null
          external_user_id: string
          id: string
          last_login_at: string | null
          sso_configuration_id: string
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          external_attributes?: Json | null
          external_user_id: string
          id?: string
          last_login_at?: string | null
          sso_configuration_id: string
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          external_attributes?: Json | null
          external_user_id?: string
          id?: string
          last_login_at?: string | null
          sso_configuration_id?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "sso_user_mappings_sso_configuration_id_fkey"
            columns: ["sso_configuration_id"]
            isOneToOne: false
            referencedRelation: "sso_configurations"
            referencedColumns: ["id"]
          },
        ]
      }
      staffing_billing_rates: {
        Row: {
          client_id: string | null
          created_at: string
          effective_date: string
          end_date: string | null
          holiday_rate: number | null
          hourly_rate: number
          id: string
          is_active: boolean
          overtime_rate: number | null
          position_type: string
          updated_at: string
        }
        Insert: {
          client_id?: string | null
          created_at?: string
          effective_date?: string
          end_date?: string | null
          holiday_rate?: number | null
          hourly_rate: number
          id?: string
          is_active?: boolean
          overtime_rate?: number | null
          position_type: string
          updated_at?: string
        }
        Update: {
          client_id?: string | null
          created_at?: string
          effective_date?: string
          end_date?: string | null
          holiday_rate?: number | null
          hourly_rate?: number
          id?: string
          is_active?: boolean
          overtime_rate?: number | null
          position_type?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "staffing_billing_rates_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
        ]
      }
      staffing_candidates: {
        Row: {
          availability: string | null
          created_at: string | null
          email: string
          experience_level: string | null
          first_name: string
          id: string
          last_name: string
          notes: string | null
          phone: string | null
          resume_url: string | null
          skills: string[] | null
          source: string | null
          status: string | null
          updated_at: string | null
        }
        Insert: {
          availability?: string | null
          created_at?: string | null
          email: string
          experience_level?: string | null
          first_name: string
          id?: string
          last_name: string
          notes?: string | null
          phone?: string | null
          resume_url?: string | null
          skills?: string[] | null
          source?: string | null
          status?: string | null
          updated_at?: string | null
        }
        Update: {
          availability?: string | null
          created_at?: string | null
          email?: string
          experience_level?: string | null
          first_name?: string
          id?: string
          last_name?: string
          notes?: string | null
          phone?: string | null
          resume_url?: string | null
          skills?: string[] | null
          source?: string | null
          status?: string | null
          updated_at?: string | null
        }
        Relationships: []
      }
      staffing_clients: {
        Row: {
          address: string | null
          approval_status: string
          approved_at: string | null
          approved_by: string | null
          city: string | null
          created_at: string
          credit_application_url: string | null
          dba_name: string | null
          employee_count: number
          ex_mod_rate: number | null
          id: string
          industry: string
          legal_name: string
          markup_percentage: number | null
          notes: string | null
          primary_contact_email: string | null
          primary_contact_name: string | null
          primary_contact_phone: string | null
          rejection_reason: string | null
          state: string | null
          submitted_by: string
          updated_at: string
          workers_comp_code: string | null
          workers_comp_rate: number | null
          zip_code: string | null
        }
        Insert: {
          address?: string | null
          approval_status?: string
          approved_at?: string | null
          approved_by?: string | null
          city?: string | null
          created_at?: string
          credit_application_url?: string | null
          dba_name?: string | null
          employee_count: number
          ex_mod_rate?: number | null
          id?: string
          industry: string
          legal_name: string
          markup_percentage?: number | null
          notes?: string | null
          primary_contact_email?: string | null
          primary_contact_name?: string | null
          primary_contact_phone?: string | null
          rejection_reason?: string | null
          state?: string | null
          submitted_by: string
          updated_at?: string
          workers_comp_code?: string | null
          workers_comp_rate?: number | null
          zip_code?: string | null
        }
        Update: {
          address?: string | null
          approval_status?: string
          approved_at?: string | null
          approved_by?: string | null
          city?: string | null
          created_at?: string
          credit_application_url?: string | null
          dba_name?: string | null
          employee_count?: number
          ex_mod_rate?: number | null
          id?: string
          industry?: string
          legal_name?: string
          markup_percentage?: number | null
          notes?: string | null
          primary_contact_email?: string | null
          primary_contact_name?: string | null
          primary_contact_phone?: string | null
          rejection_reason?: string | null
          state?: string | null
          submitted_by?: string
          updated_at?: string
          workers_comp_code?: string | null
          workers_comp_rate?: number | null
          zip_code?: string | null
        }
        Relationships: []
      }
      staffing_employee_rates: {
        Row: {
          created_at: string
          effective_date: string
          employee_id: string
          end_date: string | null
          holiday_wage: number | null
          hourly_wage: number
          id: string
          is_active: boolean
          overtime_wage: number | null
          position_type: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          effective_date?: string
          employee_id: string
          end_date?: string | null
          holiday_wage?: number | null
          hourly_wage: number
          id?: string
          is_active?: boolean
          overtime_wage?: number | null
          position_type: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          effective_date?: string
          employee_id?: string
          end_date?: string | null
          holiday_wage?: number | null
          hourly_wage?: number
          id?: string
          is_active?: boolean
          overtime_wage?: number | null
          position_type?: string
          updated_at?: string
        }
        Relationships: []
      }
      staffing_invoice_items: {
        Row: {
          amount: number
          created_at: string
          description: string
          employee_id: string | null
          id: string
          invoice_id: string | null
          position_type: string | null
          quantity: number
          rate: number
          work_date: string | null
        }
        Insert: {
          amount: number
          created_at?: string
          description: string
          employee_id?: string | null
          id?: string
          invoice_id?: string | null
          position_type?: string | null
          quantity: number
          rate: number
          work_date?: string | null
        }
        Update: {
          amount?: number
          created_at?: string
          description?: string
          employee_id?: string | null
          id?: string
          invoice_id?: string | null
          position_type?: string | null
          quantity?: number
          rate?: number
          work_date?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "staffing_invoice_items_invoice_id_fkey"
            columns: ["invoice_id"]
            isOneToOne: false
            referencedRelation: "staffing_invoices"
            referencedColumns: ["id"]
          },
        ]
      }
      staffing_invoices: {
        Row: {
          billing_period_end: string
          billing_period_start: string
          client_id: string | null
          created_at: string
          created_by: string
          due_date: string
          id: string
          invoice_number: string
          notes: string | null
          paid_date: string | null
          payment_terms: number
          sent_date: string | null
          status: string
          subtotal: number
          tax_amount: number
          total_amount: number
          updated_at: string
        }
        Insert: {
          billing_period_end: string
          billing_period_start: string
          client_id?: string | null
          created_at?: string
          created_by: string
          due_date: string
          id?: string
          invoice_number: string
          notes?: string | null
          paid_date?: string | null
          payment_terms?: number
          sent_date?: string | null
          status?: string
          subtotal?: number
          tax_amount?: number
          total_amount?: number
          updated_at?: string
        }
        Update: {
          billing_period_end?: string
          billing_period_start?: string
          client_id?: string | null
          created_at?: string
          created_by?: string
          due_date?: string
          id?: string
          invoice_number?: string
          notes?: string | null
          paid_date?: string | null
          payment_terms?: number
          sent_date?: string | null
          status?: string
          subtotal?: number
          tax_amount?: number
          total_amount?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "staffing_invoices_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
        ]
      }
      staffing_payments: {
        Row: {
          amount: number
          created_at: string
          id: string
          invoice_id: string | null
          notes: string | null
          payment_date: string
          payment_method: string
          recorded_by: string
          reference_number: string | null
        }
        Insert: {
          amount: number
          created_at?: string
          id?: string
          invoice_id?: string | null
          notes?: string | null
          payment_date: string
          payment_method: string
          recorded_by: string
          reference_number?: string | null
        }
        Update: {
          amount?: number
          created_at?: string
          id?: string
          invoice_id?: string | null
          notes?: string | null
          payment_date?: string
          payment_method?: string
          recorded_by?: string
          reference_number?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "staffing_payments_invoice_id_fkey"
            columns: ["invoice_id"]
            isOneToOne: false
            referencedRelation: "staffing_invoices"
            referencedColumns: ["id"]
          },
        ]
      }
      staffing_payroll_periods: {
        Row: {
          created_at: string
          created_by: string
          end_date: string
          id: string
          pay_date: string
          period_name: string
          processed_at: string | null
          processed_by: string | null
          start_date: string
          status: string
          total_employees: number | null
          total_gross_pay: number | null
          total_net_pay: number | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by: string
          end_date: string
          id?: string
          pay_date: string
          period_name: string
          processed_at?: string | null
          processed_by?: string | null
          start_date: string
          status?: string
          total_employees?: number | null
          total_gross_pay?: number | null
          total_net_pay?: number | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string
          end_date?: string
          id?: string
          pay_date?: string
          period_name?: string
          processed_at?: string | null
          processed_by?: string | null
          start_date?: string
          status?: string
          total_employees?: number | null
          total_gross_pay?: number | null
          total_net_pay?: number | null
          updated_at?: string
        }
        Relationships: []
      }
      staffing_payroll_records: {
        Row: {
          calculations: Json | null
          created_at: string
          deductions: number
          employee_id: string
          gross_pay: number
          holiday_hours: number
          holiday_rate: number | null
          id: string
          net_pay: number
          overtime_hours: number
          overtime_rate: number | null
          payroll_period_id: string | null
          regular_hours: number
          regular_rate: number
          status: string
          updated_at: string
        }
        Insert: {
          calculations?: Json | null
          created_at?: string
          deductions?: number
          employee_id: string
          gross_pay?: number
          holiday_hours?: number
          holiday_rate?: number | null
          id?: string
          net_pay?: number
          overtime_hours?: number
          overtime_rate?: number | null
          payroll_period_id?: string | null
          regular_hours?: number
          regular_rate: number
          status?: string
          updated_at?: string
        }
        Update: {
          calculations?: Json | null
          created_at?: string
          deductions?: number
          employee_id?: string
          gross_pay?: number
          holiday_hours?: number
          holiday_rate?: number | null
          id?: string
          net_pay?: number
          overtime_hours?: number
          overtime_rate?: number | null
          payroll_period_id?: string | null
          regular_hours?: number
          regular_rate?: number
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "staffing_payroll_records_payroll_period_id_fkey"
            columns: ["payroll_period_id"]
            isOneToOne: false
            referencedRelation: "staffing_payroll_periods"
            referencedColumns: ["id"]
          },
        ]
      }
      staffing_placements: {
        Row: {
          candidate_id: string | null
          client_id: string | null
          created_at: string | null
          end_date: string | null
          id: string
          notes: string | null
          pay_rate: number
          position_id: string | null
          start_date: string
          status: string | null
          updated_at: string | null
        }
        Insert: {
          candidate_id?: string | null
          client_id?: string | null
          created_at?: string | null
          end_date?: string | null
          id?: string
          notes?: string | null
          pay_rate: number
          position_id?: string | null
          start_date: string
          status?: string | null
          updated_at?: string | null
        }
        Update: {
          candidate_id?: string | null
          client_id?: string | null
          created_at?: string | null
          end_date?: string | null
          id?: string
          notes?: string | null
          pay_rate?: number
          position_id?: string | null
          start_date?: string
          status?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "staffing_placements_candidate_id_fkey"
            columns: ["candidate_id"]
            isOneToOne: false
            referencedRelation: "staffing_candidates"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "staffing_placements_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "staffing_placements_position_id_fkey"
            columns: ["position_id"]
            isOneToOne: false
            referencedRelation: "staffing_positions"
            referencedColumns: ["id"]
          },
        ]
      }
      staffing_positions: {
        Row: {
          client_id: string | null
          created_at: string | null
          created_by: string | null
          description: string
          duration: string | null
          id: string
          location: string | null
          pay_rate: number | null
          pay_type: string | null
          priority: string | null
          requirements: string[] | null
          start_date: string | null
          status: string | null
          title: string
          updated_at: string | null
        }
        Insert: {
          client_id?: string | null
          created_at?: string | null
          created_by?: string | null
          description: string
          duration?: string | null
          id?: string
          location?: string | null
          pay_rate?: number | null
          pay_type?: string | null
          priority?: string | null
          requirements?: string[] | null
          start_date?: string | null
          status?: string | null
          title: string
          updated_at?: string | null
        }
        Update: {
          client_id?: string | null
          created_at?: string | null
          created_by?: string | null
          description?: string
          duration?: string | null
          id?: string
          location?: string | null
          pay_rate?: number | null
          pay_type?: string | null
          priority?: string | null
          requirements?: string[] | null
          start_date?: string | null
          status?: string | null
          title?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "staffing_positions_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
        ]
      }
      staffing_user_roles: {
        Row: {
          commission_rate: number | null
          created_at: string | null
          id: string
          is_active: boolean | null
          role: Database["public"]["Enums"]["staffing_role"]
          territory_id: string | null
          updated_at: string | null
          user_id: string
        }
        Insert: {
          commission_rate?: number | null
          created_at?: string | null
          id?: string
          is_active?: boolean | null
          role: Database["public"]["Enums"]["staffing_role"]
          territory_id?: string | null
          updated_at?: string | null
          user_id: string
        }
        Update: {
          commission_rate?: number | null
          created_at?: string | null
          id?: string
          is_active?: boolean | null
          role?: Database["public"]["Enums"]["staffing_role"]
          territory_id?: string | null
          updated_at?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "staffing_user_roles_territory_id_fkey"
            columns: ["territory_id"]
            isOneToOne: false
            referencedRelation: "territories"
            referencedColumns: ["id"]
          },
        ]
      }
      state_expansion_requests: {
        Row: {
          admin_notes: string | null
          assigned_to: string | null
          created_at: string
          employee_id: string | null
          employee_name: string | null
          estimated_completion: string | null
          id: string
          priority: string
          request_reason: string | null
          state_code: string
          state_name: string
          status: string
          updated_at: string
        }
        Insert: {
          admin_notes?: string | null
          assigned_to?: string | null
          created_at?: string
          employee_id?: string | null
          employee_name?: string | null
          estimated_completion?: string | null
          id?: string
          priority?: string
          request_reason?: string | null
          state_code: string
          state_name: string
          status?: string
          updated_at?: string
        }
        Update: {
          admin_notes?: string | null
          assigned_to?: string | null
          created_at?: string
          employee_id?: string | null
          employee_name?: string | null
          estimated_completion?: string | null
          id?: string
          priority?: string
          request_reason?: string | null
          state_code?: string
          state_name?: string
          status?: string
          updated_at?: string
        }
        Relationships: []
      }
      state_tax_brackets: {
        Row: {
          base_tax: number
          bracket_max: number | null
          bracket_min: number
          created_at: string
          filing_status: string
          id: string
          personal_exemption: number
          standard_deduction: number
          state_code: string
          tax_rate: number
          tax_year: number
        }
        Insert: {
          base_tax?: number
          bracket_max?: number | null
          bracket_min: number
          created_at?: string
          filing_status: string
          id?: string
          personal_exemption?: number
          standard_deduction?: number
          state_code: string
          tax_rate: number
          tax_year: number
        }
        Update: {
          base_tax?: number
          bracket_max?: number | null
          bracket_min?: number
          created_at?: string
          filing_status?: string
          id?: string
          personal_exemption?: number
          standard_deduction?: number
          state_code?: string
          tax_rate?: number
          tax_year?: number
        }
        Relationships: []
      }
      state_tax_forms: {
        Row: {
          created_at: string | null
          form_fields: Json
          form_name: string
          id: string
          is_active: boolean | null
          language: Database["public"]["Enums"]["user_language"] | null
          state_code: string
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          form_fields: Json
          form_name: string
          id?: string
          is_active?: boolean | null
          language?: Database["public"]["Enums"]["user_language"] | null
          state_code: string
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          form_fields?: Json
          form_name?: string
          id?: string
          is_active?: boolean | null
          language?: Database["public"]["Enums"]["user_language"] | null
          state_code?: string
          updated_at?: string | null
        }
        Relationships: []
      }
      state_tax_settings: {
        Row: {
          created_at: string
          futa_wage_base: number
          id: string
          is_active: boolean
          state_code: string
          state_name: string
          suta_rate_max: number | null
          suta_rate_min: number | null
          suta_wage_base: number
          updated_at: string
        }
        Insert: {
          created_at?: string
          futa_wage_base?: number
          id?: string
          is_active?: boolean
          state_code: string
          state_name: string
          suta_rate_max?: number | null
          suta_rate_min?: number | null
          suta_wage_base?: number
          updated_at?: string
        }
        Update: {
          created_at?: string
          futa_wage_base?: number
          id?: string
          is_active?: boolean
          state_code?: string
          state_name?: string
          suta_rate_max?: number | null
          suta_rate_min?: number | null
          suta_wage_base?: number
          updated_at?: string
        }
        Relationships: []
      }
      subscriptions: {
        Row: {
          created_at: string
          current_period_end: string | null
          current_period_start: string | null
          employee_count: number
          id: string
          package_id: string | null
          status: string
          stripe_customer_id: string | null
          stripe_subscription_id: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          current_period_end?: string | null
          current_period_start?: string | null
          employee_count: number
          id?: string
          package_id?: string | null
          status?: string
          stripe_customer_id?: string | null
          stripe_subscription_id?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          current_period_end?: string | null
          current_period_start?: string | null
          employee_count?: number
          id?: string
          package_id?: string | null
          status?: string
          stripe_customer_id?: string | null
          stripe_subscription_id?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "subscriptions_package_id_fkey"
            columns: ["package_id"]
            isOneToOne: false
            referencedRelation: "course_packages"
            referencedColumns: ["id"]
          },
        ]
      }
      supported_tax_states: {
        Row: {
          created_at: string
          employee_count: number | null
          id: string
          implementation_notes: string | null
          is_supported: boolean
          last_employee_added: string | null
          state_code: string
          state_name: string
          support_priority: string
          tax_tables_implemented: boolean | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          employee_count?: number | null
          id?: string
          implementation_notes?: string | null
          is_supported?: boolean
          last_employee_added?: string | null
          state_code: string
          state_name: string
          support_priority?: string
          tax_tables_implemented?: boolean | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          employee_count?: number | null
          id?: string
          implementation_notes?: string | null
          is_supported?: boolean
          last_employee_added?: string | null
          state_code?: string
          state_name?: string
          support_priority?: string
          tax_tables_implemented?: boolean | null
          updated_at?: string
        }
        Relationships: []
      }
      system_registry: {
        Row: {
          category: string
          created_at: string
          data_type: string
          description: string | null
          id: string
          key: string
          requires_restart: boolean | null
          status: string
          updated_at: string
          updated_by: string | null
          value: string
        }
        Insert: {
          category?: string
          created_at?: string
          data_type?: string
          description?: string | null
          id?: string
          key: string
          requires_restart?: boolean | null
          status?: string
          updated_at?: string
          updated_by?: string | null
          value: string
        }
        Update: {
          category?: string
          created_at?: string
          data_type?: string
          description?: string | null
          id?: string
          key?: string
          requires_restart?: boolean | null
          status?: string
          updated_at?: string
          updated_by?: string | null
          value?: string
        }
        Relationships: []
      }
      system_registry_audit: {
        Row: {
          action_type: string
          id: string
          new_metadata: Json | null
          new_value: string | null
          old_metadata: Json | null
          old_value: string | null
          performed_at: string
          performed_by: string | null
          registry_id: string
        }
        Insert: {
          action_type: string
          id?: string
          new_metadata?: Json | null
          new_value?: string | null
          old_metadata?: Json | null
          old_value?: string | null
          performed_at?: string
          performed_by?: string | null
          registry_id: string
        }
        Update: {
          action_type?: string
          id?: string
          new_metadata?: Json | null
          new_value?: string | null
          old_metadata?: Json | null
          old_value?: string | null
          performed_at?: string
          performed_by?: string | null
          registry_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "system_registry_audit_registry_id_fkey"
            columns: ["registry_id"]
            isOneToOne: false
            referencedRelation: "system_registry"
            referencedColumns: ["id"]
          },
        ]
      }
      system_settings: {
        Row: {
          category: string
          created_at: string
          created_by: string
          description: string | null
          id: string
          is_public: boolean
          key: string
          updated_at: string
          value: Json
        }
        Insert: {
          category: string
          created_at?: string
          created_by: string
          description?: string | null
          id?: string
          is_public?: boolean
          key: string
          updated_at?: string
          value: Json
        }
        Update: {
          category?: string
          created_at?: string
          created_by?: string
          description?: string | null
          id?: string
          is_public?: boolean
          key?: string
          updated_at?: string
          value?: Json
        }
        Relationships: []
      }
      taggable_entities: {
        Row: {
          entity_id: string
          entity_type: string
          id: string
          tag_id: string
          tagged_at: string
          tagged_by: string
        }
        Insert: {
          entity_id: string
          entity_type: string
          id?: string
          tag_id: string
          tagged_at?: string
          tagged_by: string
        }
        Update: {
          entity_id?: string
          entity_type?: string
          id?: string
          tag_id?: string
          tagged_at?: string
          tagged_by?: string
        }
        Relationships: [
          {
            foreignKeyName: "taggable_entities_tag_id_fkey"
            columns: ["tag_id"]
            isOneToOne: false
            referencedRelation: "tags"
            referencedColumns: ["id"]
          },
        ]
      }
      tags: {
        Row: {
          company_id: string | null
          created_at: string
          created_by: string
          description: string | null
          id: string
          is_active: boolean
          scope: string
          tag_color: string
          tag_name: string
          tag_type: string | null
          updated_at: string
        }
        Insert: {
          company_id?: string | null
          created_at?: string
          created_by: string
          description?: string | null
          id?: string
          is_active?: boolean
          scope?: string
          tag_color?: string
          tag_name: string
          tag_type?: string | null
          updated_at?: string
        }
        Update: {
          company_id?: string | null
          created_at?: string
          created_by?: string
          description?: string | null
          id?: string
          is_active?: boolean
          scope?: string
          tag_color?: string
          tag_name?: string
          tag_type?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "tags_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      tasks: {
        Row: {
          assigned_to: string
          auto_generation_metadata: Json | null
          case_id: string | null
          company_id: string | null
          completed_at: string | null
          contact_email: string | null
          contact_name: string | null
          created_at: string
          created_by: string
          deal_id: string | null
          description: string | null
          due_date: string | null
          id: string
          is_auto_generated: boolean | null
          last_activity_date: string | null
          lead_id: string | null
          notes: string | null
          priority: string
          reminder_at: string | null
          risk_score: number | null
          sarah_generated: boolean | null
          status: string
          title: string
          trigger_reason: string | null
          type: string
          updated_at: string
          workflow_rule_id: string | null
        }
        Insert: {
          assigned_to: string
          auto_generation_metadata?: Json | null
          case_id?: string | null
          company_id?: string | null
          completed_at?: string | null
          contact_email?: string | null
          contact_name?: string | null
          created_at?: string
          created_by: string
          deal_id?: string | null
          description?: string | null
          due_date?: string | null
          id?: string
          is_auto_generated?: boolean | null
          last_activity_date?: string | null
          lead_id?: string | null
          notes?: string | null
          priority?: string
          reminder_at?: string | null
          risk_score?: number | null
          sarah_generated?: boolean | null
          status?: string
          title: string
          trigger_reason?: string | null
          type?: string
          updated_at?: string
          workflow_rule_id?: string | null
        }
        Update: {
          assigned_to?: string
          auto_generation_metadata?: Json | null
          case_id?: string | null
          company_id?: string | null
          completed_at?: string | null
          contact_email?: string | null
          contact_name?: string | null
          created_at?: string
          created_by?: string
          deal_id?: string | null
          description?: string | null
          due_date?: string | null
          id?: string
          is_auto_generated?: boolean | null
          last_activity_date?: string | null
          lead_id?: string | null
          notes?: string | null
          priority?: string
          reminder_at?: string | null
          risk_score?: number | null
          sarah_generated?: boolean | null
          status?: string
          title?: string
          trigger_reason?: string | null
          type?: string
          updated_at?: string
          workflow_rule_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "tasks_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "tasks_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "tasks_deal_id_fkey"
            columns: ["deal_id"]
            isOneToOne: false
            referencedRelation: "deals"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "tasks_lead_id_fkey"
            columns: ["lead_id"]
            isOneToOne: false
            referencedRelation: "leads"
            referencedColumns: ["id"]
          },
        ]
      }
      tax_calculation_audit: {
        Row: {
          calculated_at: string
          calculation_id: string
          created_at: string
          employee_id: string
          engine_used: string
          gross_pay: number
          id: string
          pay_period: string
          result: Json
        }
        Insert: {
          calculated_at?: string
          calculation_id: string
          created_at?: string
          employee_id: string
          engine_used: string
          gross_pay: number
          id?: string
          pay_period: string
          result: Json
        }
        Update: {
          calculated_at?: string
          calculation_id?: string
          created_at?: string
          employee_id?: string
          engine_used?: string
          gross_pay?: number
          id?: string
          pay_period?: string
          result?: Json
        }
        Relationships: []
      }
      tax_calculations: {
        Row: {
          calculated_at: string
          calculation_details: Json | null
          created_at: string
          employee_id: string
          engine_version: string
          federal_income_tax: number
          gross_wages: number
          id: string
          medicare_additional: number
          medicare_employee: number
          medicare_employer: number
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_run_id: string | null
          rule_set_id: string
          social_security_employee: number
          social_security_employer: number
          state_disability_insurance: number
          state_income_tax: number
          updated_at: string
        }
        Insert: {
          calculated_at?: string
          calculation_details?: Json | null
          created_at?: string
          employee_id: string
          engine_version?: string
          federal_income_tax?: number
          gross_wages: number
          id?: string
          medicare_additional?: number
          medicare_employee?: number
          medicare_employer?: number
          pay_date: string
          pay_period_end: string
          pay_period_start: string
          payroll_run_id?: string | null
          rule_set_id?: string
          social_security_employee?: number
          social_security_employer?: number
          state_disability_insurance?: number
          state_income_tax?: number
          updated_at?: string
        }
        Update: {
          calculated_at?: string
          calculation_details?: Json | null
          created_at?: string
          employee_id?: string
          engine_version?: string
          federal_income_tax?: number
          gross_wages?: number
          id?: string
          medicare_additional?: number
          medicare_employee?: number
          medicare_employer?: number
          pay_date?: string
          pay_period_end?: string
          pay_period_start?: string
          payroll_run_id?: string | null
          rule_set_id?: string
          social_security_employee?: number
          social_security_employer?: number
          state_disability_insurance?: number
          state_income_tax?: number
          updated_at?: string
        }
        Relationships: []
      }
      tax_change_alerts: {
        Row: {
          acknowledged_at: string | null
          acknowledged_by: string | null
          alert_type: string
          change_details: Json | null
          change_type: string
          created_at: string
          description: string | null
          detected_at: string
          effective_date: string | null
          id: string
          jurisdiction: string
          severity: string
          status: string
          title: string
          updated_at: string
        }
        Insert: {
          acknowledged_at?: string | null
          acknowledged_by?: string | null
          alert_type: string
          change_details?: Json | null
          change_type: string
          created_at?: string
          description?: string | null
          detected_at?: string
          effective_date?: string | null
          id?: string
          jurisdiction: string
          severity?: string
          status?: string
          title: string
          updated_at?: string
        }
        Update: {
          acknowledged_at?: string | null
          acknowledged_by?: string | null
          alert_type?: string
          change_details?: Json | null
          change_type?: string
          created_at?: string
          description?: string | null
          detected_at?: string
          effective_date?: string | null
          id?: string
          jurisdiction?: string
          severity?: string
          status?: string
          title?: string
          updated_at?: string
        }
        Relationships: []
      }
      tax_compliance_audit: {
        Row: {
          action_details: Json
          action_type: string
          company_id: string
          created_at: string
          id: string
          ip_address: unknown | null
          new_values: Json | null
          old_values: Json | null
          performed_by: string | null
          resource_id: string | null
          resource_type: string
          user_agent: string | null
        }
        Insert: {
          action_details?: Json
          action_type: string
          company_id: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          performed_by?: string | null
          resource_id?: string | null
          resource_type: string
          user_agent?: string | null
        }
        Update: {
          action_details?: Json
          action_type?: string
          company_id?: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          new_values?: Json | null
          old_values?: Json | null
          performed_by?: string | null
          resource_id?: string | null
          resource_type?: string
          user_agent?: string | null
        }
        Relationships: []
      }
      tax_filing_archive: {
        Row: {
          agency: string
          archived_by: string | null
          archived_date: string
          company_id: string
          created_at: string
          document_name: string
          document_size_bytes: number | null
          document_type: string
          document_url: string
          filing_id: string | null
          filing_type: string
          id: string
          retention_until: string | null
          tax_year: number
        }
        Insert: {
          agency: string
          archived_by?: string | null
          archived_date?: string
          company_id: string
          created_at?: string
          document_name: string
          document_size_bytes?: number | null
          document_type: string
          document_url: string
          filing_id?: string | null
          filing_type: string
          id?: string
          retention_until?: string | null
          tax_year: number
        }
        Update: {
          agency?: string
          archived_by?: string | null
          archived_date?: string
          company_id?: string
          created_at?: string
          document_name?: string
          document_size_bytes?: number | null
          document_type?: string
          document_url?: string
          filing_id?: string | null
          filing_type?: string
          id?: string
          retention_until?: string | null
          tax_year?: number
        }
        Relationships: [
          {
            foreignKeyName: "tax_filing_archive_filing_id_fkey"
            columns: ["filing_id"]
            isOneToOne: false
            referencedRelation: "tax_filings"
            referencedColumns: ["id"]
          },
        ]
      }
      tax_filing_calendar: {
        Row: {
          agency: string
          alert_days_before: number | null
          company_id: string
          confirmation_number: string | null
          created_at: string
          due_date: string
          extended_due_date: string | null
          filed_date: string | null
          filing_type: string
          id: string
          jurisdiction: string
          period_end_date: string
          period_start_date: string
          reminder_sent_at: string | null
          status: string | null
          tax_month: number | null
          tax_quarter: number | null
          tax_year: number
          updated_at: string
        }
        Insert: {
          agency: string
          alert_days_before?: number | null
          company_id: string
          confirmation_number?: string | null
          created_at?: string
          due_date: string
          extended_due_date?: string | null
          filed_date?: string | null
          filing_type: string
          id?: string
          jurisdiction: string
          period_end_date: string
          period_start_date: string
          reminder_sent_at?: string | null
          status?: string | null
          tax_month?: number | null
          tax_quarter?: number | null
          tax_year: number
          updated_at?: string
        }
        Update: {
          agency?: string
          alert_days_before?: number | null
          company_id?: string
          confirmation_number?: string | null
          created_at?: string
          due_date?: string
          extended_due_date?: string | null
          filed_date?: string | null
          filing_type?: string
          id?: string
          jurisdiction?: string
          period_end_date?: string
          period_start_date?: string
          reminder_sent_at?: string | null
          status?: string | null
          tax_month?: number | null
          tax_quarter?: number | null
          tax_year?: number
          updated_at?: string
        }
        Relationships: []
      }
      tax_filings: {
        Row: {
          agency: string
          calculated_liability: number | null
          calendar_entry_id: string | null
          company_id: string
          confirmation_document_url: string | null
          created_at: string
          efiling_confirmation: string | null
          efiling_response: Json | null
          efiling_status: string | null
          efiling_transaction_id: string | null
          filing_data: Json
          filing_document_url: string | null
          filing_type: string
          id: string
          jurisdiction: string
          period_end_date: string
          period_start_date: string
          status: string | null
          submitted_at: string | null
          submitted_by: string | null
          tax_quarter: number | null
          tax_year: number
          total_tax_due: number | null
          updated_at: string
        }
        Insert: {
          agency: string
          calculated_liability?: number | null
          calendar_entry_id?: string | null
          company_id: string
          confirmation_document_url?: string | null
          created_at?: string
          efiling_confirmation?: string | null
          efiling_response?: Json | null
          efiling_status?: string | null
          efiling_transaction_id?: string | null
          filing_data?: Json
          filing_document_url?: string | null
          filing_type: string
          id?: string
          jurisdiction: string
          period_end_date: string
          period_start_date: string
          status?: string | null
          submitted_at?: string | null
          submitted_by?: string | null
          tax_quarter?: number | null
          tax_year: number
          total_tax_due?: number | null
          updated_at?: string
        }
        Update: {
          agency?: string
          calculated_liability?: number | null
          calendar_entry_id?: string | null
          company_id?: string
          confirmation_document_url?: string | null
          created_at?: string
          efiling_confirmation?: string | null
          efiling_response?: Json | null
          efiling_status?: string | null
          efiling_transaction_id?: string | null
          filing_data?: Json
          filing_document_url?: string | null
          filing_type?: string
          id?: string
          jurisdiction?: string
          period_end_date?: string
          period_start_date?: string
          status?: string | null
          submitted_at?: string | null
          submitted_by?: string | null
          tax_quarter?: number | null
          tax_year?: number
          total_tax_due?: number | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "tax_filings_calendar_entry_id_fkey"
            columns: ["calendar_entry_id"]
            isOneToOne: false
            referencedRelation: "tax_filing_calendar"
            referencedColumns: ["id"]
          },
        ]
      }
      tax_liabilities: {
        Row: {
          agency: string
          company_id: string
          created_at: string
          employee_tax_amount: number | null
          employer_tax_amount: number | null
          id: string
          jurisdiction: string
          liability_type: string
          payroll_run_id: string | null
          period_end_date: string
          period_start_date: string
          status: string | null
          tax_month: number | null
          tax_quarter: number | null
          tax_rate: number | null
          tax_year: number
          taxable_wages: number | null
          total_liability: number
          updated_at: string
        }
        Insert: {
          agency: string
          company_id: string
          created_at?: string
          employee_tax_amount?: number | null
          employer_tax_amount?: number | null
          id?: string
          jurisdiction: string
          liability_type: string
          payroll_run_id?: string | null
          period_end_date: string
          period_start_date: string
          status?: string | null
          tax_month?: number | null
          tax_quarter?: number | null
          tax_rate?: number | null
          tax_year: number
          taxable_wages?: number | null
          total_liability: number
          updated_at?: string
        }
        Update: {
          agency?: string
          company_id?: string
          created_at?: string
          employee_tax_amount?: number | null
          employer_tax_amount?: number | null
          id?: string
          jurisdiction?: string
          liability_type?: string
          payroll_run_id?: string | null
          period_end_date?: string
          period_start_date?: string
          status?: string | null
          tax_month?: number | null
          tax_quarter?: number | null
          tax_rate?: number | null
          tax_year?: number
          taxable_wages?: number | null
          total_liability?: number
          updated_at?: string
        }
        Relationships: []
      }
      tax_monitoring_log: {
        Row: {
          changes_detected: number | null
          created_at: string
          error_message: string | null
          id: string
          last_checked: string
          monitor_type: string
          monitoring_data: Json | null
          next_check: string | null
          source: string
          status: string
          updated_at: string
        }
        Insert: {
          changes_detected?: number | null
          created_at?: string
          error_message?: string | null
          id?: string
          last_checked?: string
          monitor_type: string
          monitoring_data?: Json | null
          next_check?: string | null
          source: string
          status: string
          updated_at?: string
        }
        Update: {
          changes_detected?: number | null
          created_at?: string
          error_message?: string | null
          id?: string
          last_checked?: string
          monitor_type?: string
          monitoring_data?: Json | null
          next_check?: string | null
          source?: string
          status?: string
          updated_at?: string
        }
        Relationships: []
      }
      tax_notices: {
        Row: {
          adjustment_amount: number | null
          agency: string
          company_id: string
          created_at: string
          created_by: string | null
          description: string | null
          filing_id: string | null
          id: string
          interest_amount: number | null
          jurisdiction: string
          notice_date: string
          notice_document_url: string | null
          notice_number: string | null
          notice_type: string
          penalty_amount: number | null
          resolution_date: string | null
          resolution_notes: string | null
          resolved_by: string | null
          response_due_date: string | null
          status: string | null
          subject: string
          updated_at: string
        }
        Insert: {
          adjustment_amount?: number | null
          agency: string
          company_id: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          filing_id?: string | null
          id?: string
          interest_amount?: number | null
          jurisdiction: string
          notice_date: string
          notice_document_url?: string | null
          notice_number?: string | null
          notice_type: string
          penalty_amount?: number | null
          resolution_date?: string | null
          resolution_notes?: string | null
          resolved_by?: string | null
          response_due_date?: string | null
          status?: string | null
          subject: string
          updated_at?: string
        }
        Update: {
          adjustment_amount?: number | null
          agency?: string
          company_id?: string
          created_at?: string
          created_by?: string | null
          description?: string | null
          filing_id?: string | null
          id?: string
          interest_amount?: number | null
          jurisdiction?: string
          notice_date?: string
          notice_document_url?: string | null
          notice_number?: string | null
          notice_type?: string
          penalty_amount?: number | null
          resolution_date?: string | null
          resolution_notes?: string | null
          resolved_by?: string | null
          response_due_date?: string | null
          status?: string | null
          subject?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "tax_notices_filing_id_fkey"
            columns: ["filing_id"]
            isOneToOne: false
            referencedRelation: "tax_filings"
            referencedColumns: ["id"]
          },
        ]
      }
      tax_payments: {
        Row: {
          agency: string
          bank_account_id: string | null
          company_id: string
          confirmation_number: string | null
          created_at: string
          created_by: string | null
          due_date: string
          filing_id: string | null
          id: string
          jurisdiction: string
          payment_amount: number
          payment_date: string | null
          payment_method: string | null
          payment_response: Json | null
          payment_type: string
          scheduled_date: string | null
          status: string | null
          trace_number: string | null
          updated_at: string
        }
        Insert: {
          agency: string
          bank_account_id?: string | null
          company_id: string
          confirmation_number?: string | null
          created_at?: string
          created_by?: string | null
          due_date: string
          filing_id?: string | null
          id?: string
          jurisdiction: string
          payment_amount: number
          payment_date?: string | null
          payment_method?: string | null
          payment_response?: Json | null
          payment_type: string
          scheduled_date?: string | null
          status?: string | null
          trace_number?: string | null
          updated_at?: string
        }
        Update: {
          agency?: string
          bank_account_id?: string | null
          company_id?: string
          confirmation_number?: string | null
          created_at?: string
          created_by?: string | null
          due_date?: string
          filing_id?: string | null
          id?: string
          jurisdiction?: string
          payment_amount?: number
          payment_date?: string | null
          payment_method?: string | null
          payment_response?: Json | null
          payment_type?: string
          scheduled_date?: string | null
          status?: string | null
          trace_number?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "tax_payments_filing_id_fkey"
            columns: ["filing_id"]
            isOneToOne: false
            referencedRelation: "tax_filings"
            referencedColumns: ["id"]
          },
        ]
      }
      tax_profiles: {
        Row: {
          company_id: string
          created_at: string
          created_by: string | null
          efiling_config: Json | null
          efiling_enabled: boolean | null
          efiling_provider: string | null
          federal_deposit_frequency: string | null
          fein: string
          futa_number: string | null
          id: string
          is_active: boolean | null
          local_jurisdictions: Json | null
          setup_completed: boolean | null
          state_deposit_frequencies: Json | null
          state_tax_ids: Json | null
          suta_numbers: Json | null
          updated_at: string
          updated_by: string | null
        }
        Insert: {
          company_id: string
          created_at?: string
          created_by?: string | null
          efiling_config?: Json | null
          efiling_enabled?: boolean | null
          efiling_provider?: string | null
          federal_deposit_frequency?: string | null
          fein: string
          futa_number?: string | null
          id?: string
          is_active?: boolean | null
          local_jurisdictions?: Json | null
          setup_completed?: boolean | null
          state_deposit_frequencies?: Json | null
          state_tax_ids?: Json | null
          suta_numbers?: Json | null
          updated_at?: string
          updated_by?: string | null
        }
        Update: {
          company_id?: string
          created_at?: string
          created_by?: string | null
          efiling_config?: Json | null
          efiling_enabled?: boolean | null
          efiling_provider?: string | null
          federal_deposit_frequency?: string | null
          fein?: string
          futa_number?: string | null
          id?: string
          is_active?: boolean | null
          local_jurisdictions?: Json | null
          setup_completed?: boolean | null
          state_deposit_frequencies?: Json | null
          state_tax_ids?: Json | null
          suta_numbers?: Json | null
          updated_at?: string
          updated_by?: string | null
        }
        Relationships: []
      }
      tax_rate_archives: {
        Row: {
          created_at: string
          effective_date: string
          id: string
          jurisdiction: string
          rate_type: string
          rate_value: number
          tax_year: number
          threshold: number | null
          updated_at: string
          wage_base: number | null
        }
        Insert: {
          created_at?: string
          effective_date: string
          id?: string
          jurisdiction?: string
          rate_type: string
          rate_value: number
          tax_year: number
          threshold?: number | null
          updated_at?: string
          wage_base?: number | null
        }
        Update: {
          created_at?: string
          effective_date?: string
          id?: string
          jurisdiction?: string
          rate_type?: string
          rate_value?: number
          tax_year?: number
          threshold?: number | null
          updated_at?: string
          wage_base?: number | null
        }
        Relationships: []
      }
      tax_rates: {
        Row: {
          created_at: string
          effective_year: number
          employee_rate: number | null
          employer_rate: number | null
          id: string
          rate_percentage: number
          state_code: string | null
          tax_type: string
          updated_at: string
          wage_base_limit: number | null
        }
        Insert: {
          created_at?: string
          effective_year?: number
          employee_rate?: number | null
          employer_rate?: number | null
          id?: string
          rate_percentage: number
          state_code?: string | null
          tax_type: string
          updated_at?: string
          wage_base_limit?: number | null
        }
        Update: {
          created_at?: string
          effective_year?: number
          employee_rate?: number | null
          employer_rate?: number | null
          id?: string
          rate_percentage?: number
          state_code?: string | null
          tax_type?: string
          updated_at?: string
          wage_base_limit?: number | null
        }
        Relationships: []
      }
      team_members: {
        Row: {
          created_at: string
          id: string
          joined_at: string
          role: string
          team_id: string
          user_id: string
        }
        Insert: {
          created_at?: string
          id?: string
          joined_at?: string
          role?: string
          team_id: string
          user_id: string
        }
        Update: {
          created_at?: string
          id?: string
          joined_at?: string
          role?: string
          team_id?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "team_members_team_id_fkey"
            columns: ["team_id"]
            isOneToOne: false
            referencedRelation: "teams"
            referencedColumns: ["id"]
          },
        ]
      }
      teams: {
        Row: {
          created_at: string
          created_by: string
          description: string | null
          id: string
          is_active: boolean
          name: string
          team_lead_id: string | null
          updated_at: string
        }
        Insert: {
          created_at?: string
          created_by: string
          description?: string | null
          id?: string
          is_active?: boolean
          name: string
          team_lead_id?: string | null
          updated_at?: string
        }
        Update: {
          created_at?: string
          created_by?: string
          description?: string | null
          id?: string
          is_active?: boolean
          name?: string
          team_lead_id?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      terms_acknowledgments: {
        Row: {
          acknowledged_at: string
          created_at: string
          id: string
          ip_address: unknown | null
          privacy_version: string
          terms_version: string
          updated_at: string
          user_agent: string | null
          user_id: string
        }
        Insert: {
          acknowledged_at?: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          privacy_version?: string
          terms_version?: string
          updated_at?: string
          user_agent?: string | null
          user_id: string
        }
        Update: {
          acknowledged_at?: string
          created_at?: string
          id?: string
          ip_address?: unknown | null
          privacy_version?: string
          terms_version?: string
          updated_at?: string
          user_agent?: string | null
          user_id?: string
        }
        Relationships: []
      }
      territories: {
        Row: {
          assigned_to: string | null
          cities: string[] | null
          created_at: string | null
          id: string
          is_locked: boolean | null
          locked_at: string | null
          locked_by: string | null
          name: string
          state: string
          updated_at: string | null
          zip_codes: string[] | null
        }
        Insert: {
          assigned_to?: string | null
          cities?: string[] | null
          created_at?: string | null
          id?: string
          is_locked?: boolean | null
          locked_at?: string | null
          locked_by?: string | null
          name: string
          state: string
          updated_at?: string | null
          zip_codes?: string[] | null
        }
        Update: {
          assigned_to?: string | null
          cities?: string[] | null
          created_at?: string | null
          id?: string
          is_locked?: boolean | null
          locked_at?: string | null
          locked_by?: string | null
          name?: string
          state?: string
          updated_at?: string | null
          zip_codes?: string[] | null
        }
        Relationships: []
      }
      testimonials: {
        Row: {
          company: string | null
          content: string
          created_at: string
          display_order: number | null
          id: string
          image_url: string | null
          is_active: boolean
          is_featured: boolean
          name: string
          rating: number | null
          title: string | null
          updated_at: string
        }
        Insert: {
          company?: string | null
          content: string
          created_at?: string
          display_order?: number | null
          id?: string
          image_url?: string | null
          is_active?: boolean
          is_featured?: boolean
          name: string
          rating?: number | null
          title?: string | null
          updated_at?: string
        }
        Update: {
          company?: string | null
          content?: string
          created_at?: string
          display_order?: number | null
          id?: string
          image_url?: string | null
          is_active?: boolean
          is_featured?: boolean
          name?: string
          rating?: number | null
          title?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      time_audit_logs: {
        Row: {
          action_type: string
          company_id: string
          created_at: string
          device_id: string | null
          employee_id: string
          id: string
          ip_address: unknown | null
          new_value: Json | null
          notes: string | null
          performed_by_role: string
          performed_by_user_id: string
          previous_value: Json | null
          source: string
          timestamp: string
        }
        Insert: {
          action_type: string
          company_id: string
          created_at?: string
          device_id?: string | null
          employee_id: string
          id?: string
          ip_address?: unknown | null
          new_value?: Json | null
          notes?: string | null
          performed_by_role: string
          performed_by_user_id: string
          previous_value?: Json | null
          source: string
          timestamp?: string
        }
        Update: {
          action_type?: string
          company_id?: string
          created_at?: string
          device_id?: string | null
          employee_id?: string
          id?: string
          ip_address?: unknown | null
          new_value?: Json | null
          notes?: string | null
          performed_by_role?: string
          performed_by_user_id?: string
          previous_value?: Json | null
          source?: string
          timestamp?: string
        }
        Relationships: []
      }
      time_codes: {
        Row: {
          category: string
          code: string
          color_code: string | null
          company_id: string
          created_at: string
          description: string | null
          id: string
          is_active: boolean
          is_billable: boolean
          is_paid: boolean
          name: string
          requires_approval: boolean
          sort_order: number
          updated_at: string
        }
        Insert: {
          category: string
          code: string
          color_code?: string | null
          company_id: string
          created_at?: string
          description?: string | null
          id?: string
          is_active?: boolean
          is_billable?: boolean
          is_paid?: boolean
          name: string
          requires_approval?: boolean
          sort_order?: number
          updated_at?: string
        }
        Update: {
          category?: string
          code?: string
          color_code?: string | null
          company_id?: string
          created_at?: string
          description?: string | null
          id?: string
          is_active?: boolean
          is_billable?: boolean
          is_paid?: boolean
          name?: string
          requires_approval?: boolean
          sort_order?: number
          updated_at?: string
        }
        Relationships: []
      }
      time_compliance_violations: {
        Row: {
          company_id: string
          created_at: string | null
          doubletime_hours: number | null
          employee_id: string
          hours_worked: number
          id: string
          is_resolved: boolean
          overtime_hours: number | null
          policy_id: string
          resolution_notes: string | null
          resolved_at: string | null
          resolved_by: string | null
          severity: string
          threshold_exceeded: number
          violation_date: string
          violation_details: Json | null
          violation_type: string
        }
        Insert: {
          company_id: string
          created_at?: string | null
          doubletime_hours?: number | null
          employee_id: string
          hours_worked: number
          id?: string
          is_resolved?: boolean
          overtime_hours?: number | null
          policy_id: string
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          threshold_exceeded: number
          violation_date: string
          violation_details?: Json | null
          violation_type: string
        }
        Update: {
          company_id?: string
          created_at?: string | null
          doubletime_hours?: number | null
          employee_id?: string
          hours_worked?: number
          id?: string
          is_resolved?: boolean
          overtime_hours?: number | null
          policy_id?: string
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          threshold_exceeded?: number
          violation_date?: string
          violation_details?: Json | null
          violation_type?: string
        }
        Relationships: [
          {
            foreignKeyName: "time_compliance_violations_policy_id_fkey"
            columns: ["policy_id"]
            isOneToOne: false
            referencedRelation: "time_policies"
            referencedColumns: ["id"]
          },
        ]
      }
      time_entries: {
        Row: {
          billable_rate: number
          case_id: string
          created_at: string
          duration_minutes: number
          entry_date: string
          id: string
          is_billable: boolean | null
          notes: string
          updated_at: string
          user_id: string
        }
        Insert: {
          billable_rate: number
          case_id: string
          created_at?: string
          duration_minutes: number
          entry_date?: string
          id?: string
          is_billable?: boolean | null
          notes: string
          updated_at?: string
          user_id: string
        }
        Update: {
          billable_rate?: number
          case_id?: string
          created_at?: string
          duration_minutes?: number
          entry_date?: string
          id?: string
          is_billable?: boolean | null
          notes?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      time_policies: {
        Row: {
          company_id: string
          created_at: string | null
          created_by: string | null
          custom_rules: Json | null
          daily_doubletime_threshold: number
          daily_overtime_threshold: number
          id: string
          is_active: boolean
          policy_name: string
          seven_day_rule: boolean
          state: string
          updated_at: string | null
          weekly_overtime_threshold: number
          workweek_start_day: string
        }
        Insert: {
          company_id: string
          created_at?: string | null
          created_by?: string | null
          custom_rules?: Json | null
          daily_doubletime_threshold?: number
          daily_overtime_threshold?: number
          id?: string
          is_active?: boolean
          policy_name?: string
          seven_day_rule?: boolean
          state: string
          updated_at?: string | null
          weekly_overtime_threshold?: number
          workweek_start_day?: string
        }
        Update: {
          company_id?: string
          created_at?: string | null
          created_by?: string | null
          custom_rules?: Json | null
          daily_doubletime_threshold?: number
          daily_overtime_threshold?: number
          id?: string
          is_active?: boolean
          policy_name?: string
          seven_day_rule?: boolean
          state?: string
          updated_at?: string | null
          weekly_overtime_threshold?: number
          workweek_start_day?: string
        }
        Relationships: []
      }
      time_policy_audit_trail: {
        Row: {
          action_type: string
          changed_fields: string[] | null
          created_at: string | null
          id: string
          new_values: Json | null
          old_values: Json | null
          performed_by: string | null
          policy_id: string
        }
        Insert: {
          action_type: string
          changed_fields?: string[] | null
          created_at?: string | null
          id?: string
          new_values?: Json | null
          old_values?: Json | null
          performed_by?: string | null
          policy_id: string
        }
        Update: {
          action_type?: string
          changed_fields?: string[] | null
          created_at?: string | null
          id?: string
          new_values?: Json | null
          old_values?: Json | null
          performed_by?: string | null
          policy_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "time_policy_audit_trail_policy_id_fkey"
            columns: ["policy_id"]
            isOneToOne: false
            referencedRelation: "time_policies"
            referencedColumns: ["id"]
          },
        ]
      }
      time_projects: {
        Row: {
          budget_hours: number | null
          client_name: string | null
          company_id: string
          created_at: string
          created_by: string | null
          default_hourly_rate: number | null
          description: string | null
          id: string
          is_active: boolean
          is_billable: boolean
          name: string
          project_code: string | null
          updated_at: string
        }
        Insert: {
          budget_hours?: number | null
          client_name?: string | null
          company_id: string
          created_at?: string
          created_by?: string | null
          default_hourly_rate?: number | null
          description?: string | null
          id?: string
          is_active?: boolean
          is_billable?: boolean
          name: string
          project_code?: string | null
          updated_at?: string
        }
        Update: {
          budget_hours?: number | null
          client_name?: string | null
          company_id?: string
          created_at?: string
          created_by?: string | null
          default_hourly_rate?: number | null
          description?: string | null
          id?: string
          is_active?: boolean
          is_billable?: boolean
          name?: string
          project_code?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      time_punches: {
        Row: {
          biometric_verified: boolean | null
          company_id: string
          created_at: string
          device_id: string | null
          employee_id: string
          id: string
          ip_address: unknown | null
          is_offline_punch: boolean | null
          location_name: string | null
          notes: string | null
          override_by: string | null
          override_reason: string | null
          photo_url: string | null
          pin_verified: boolean | null
          punch_time: string
          punch_type: string
          synced_at: string | null
          updated_at: string
        }
        Insert: {
          biometric_verified?: boolean | null
          company_id: string
          created_at?: string
          device_id?: string | null
          employee_id: string
          id?: string
          ip_address?: unknown | null
          is_offline_punch?: boolean | null
          location_name?: string | null
          notes?: string | null
          override_by?: string | null
          override_reason?: string | null
          photo_url?: string | null
          pin_verified?: boolean | null
          punch_time?: string
          punch_type: string
          synced_at?: string | null
          updated_at?: string
        }
        Update: {
          biometric_verified?: boolean | null
          company_id?: string
          created_at?: string
          device_id?: string | null
          employee_id?: string
          id?: string
          ip_address?: unknown | null
          is_offline_punch?: boolean | null
          location_name?: string | null
          notes?: string | null
          override_by?: string | null
          override_reason?: string | null
          photo_url?: string | null
          pin_verified?: boolean | null
          punch_time?: string
          punch_type?: string
          synced_at?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "time_punches_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "payroll_employees"
            referencedColumns: ["id"]
          },
        ]
      }
      time_scores: {
        Row: {
          approved_without_changes: boolean | null
          breakdown_json: Json
          calculated_at: string
          calculation_factors: Json
          company_id: string
          created_at: string
          employee_id: string
          entries_match_schedule: boolean | null
          id: string
          manager_flags: number | null
          missed_days: number | null
          no_missing_days: boolean | null
          notes_included: boolean | null
          overtime_violations: number | null
          submitted_on_time: boolean | null
          total_score: number
          updated_at: string
          week_end: string
          week_start: string
        }
        Insert: {
          approved_without_changes?: boolean | null
          breakdown_json?: Json
          calculated_at?: string
          calculation_factors?: Json
          company_id: string
          created_at?: string
          employee_id: string
          entries_match_schedule?: boolean | null
          id?: string
          manager_flags?: number | null
          missed_days?: number | null
          no_missing_days?: boolean | null
          notes_included?: boolean | null
          overtime_violations?: number | null
          submitted_on_time?: boolean | null
          total_score?: number
          updated_at?: string
          week_end: string
          week_start: string
        }
        Update: {
          approved_without_changes?: boolean | null
          breakdown_json?: Json
          calculated_at?: string
          calculation_factors?: Json
          company_id?: string
          created_at?: string
          employee_id?: string
          entries_match_schedule?: boolean | null
          id?: string
          manager_flags?: number | null
          missed_days?: number | null
          no_missing_days?: boolean | null
          notes_included?: boolean | null
          overtime_violations?: number | null
          submitted_on_time?: boolean | null
          total_score?: number
          updated_at?: string
          week_end?: string
          week_start?: string
        }
        Relationships: []
      }
      time_settings: {
        Row: {
          allow_future_entries: boolean
          allow_mobile_entry: boolean
          auto_break_minutes: number | null
          auto_submit_timesheet: boolean
          company_id: string
          created_at: string
          enforce_break_rules: boolean
          id: string
          max_hours_per_day: number
          minimum_break_minutes: number
          overtime_threshold_daily: number | null
          overtime_threshold_weekly: number | null
          reminder_days: string[] | null
          reminder_enabled: boolean
          reminder_time: string | null
          require_manager_approval: boolean
          require_notes_for_overtime: boolean
          require_project_for_billable: boolean
          require_time_approval: boolean
          time_entry_method: string
          timezone: string
          updated_at: string
        }
        Insert: {
          allow_future_entries?: boolean
          allow_mobile_entry?: boolean
          auto_break_minutes?: number | null
          auto_submit_timesheet?: boolean
          company_id: string
          created_at?: string
          enforce_break_rules?: boolean
          id?: string
          max_hours_per_day?: number
          minimum_break_minutes?: number
          overtime_threshold_daily?: number | null
          overtime_threshold_weekly?: number | null
          reminder_days?: string[] | null
          reminder_enabled?: boolean
          reminder_time?: string | null
          require_manager_approval?: boolean
          require_notes_for_overtime?: boolean
          require_project_for_billable?: boolean
          require_time_approval?: boolean
          time_entry_method?: string
          timezone?: string
          updated_at?: string
        }
        Update: {
          allow_future_entries?: boolean
          allow_mobile_entry?: boolean
          auto_break_minutes?: number | null
          auto_submit_timesheet?: boolean
          company_id?: string
          created_at?: string
          enforce_break_rules?: boolean
          id?: string
          max_hours_per_day?: number
          minimum_break_minutes?: number
          overtime_threshold_daily?: number | null
          overtime_threshold_weekly?: number | null
          reminder_days?: string[] | null
          reminder_enabled?: boolean
          reminder_time?: string | null
          require_manager_approval?: boolean
          require_notes_for_overtime?: boolean
          require_project_for_billable?: boolean
          require_time_approval?: boolean
          time_entry_method?: string
          timezone?: string
          updated_at?: string
        }
        Relationships: []
      }
      time_sync_logs: {
        Row: {
          company_id: string
          created_at: string
          error_message: string | null
          id: string
          jobcost_entry_id: string | null
          last_sync_attempt: string | null
          last_sync_success: string | null
          payroll_entry_id: string | null
          sync_attempts: number
          sync_destination: string
          sync_metadata: Json | null
          sync_status: string
          time_entry_id: string
          updated_at: string
        }
        Insert: {
          company_id: string
          created_at?: string
          error_message?: string | null
          id?: string
          jobcost_entry_id?: string | null
          last_sync_attempt?: string | null
          last_sync_success?: string | null
          payroll_entry_id?: string | null
          sync_attempts?: number
          sync_destination: string
          sync_metadata?: Json | null
          sync_status?: string
          time_entry_id: string
          updated_at?: string
        }
        Update: {
          company_id?: string
          created_at?: string
          error_message?: string | null
          id?: string
          jobcost_entry_id?: string | null
          last_sync_attempt?: string | null
          last_sync_success?: string | null
          payroll_entry_id?: string | null
          sync_attempts?: number
          sync_destination?: string
          sync_metadata?: Json | null
          sync_status?: string
          time_entry_id?: string
          updated_at?: string
        }
        Relationships: []
      }
      training_acknowledgments: {
        Row: {
          acknowledgment_disclaimer_acknowledged: boolean
          acknowledgment_disclaimer_acknowledged_at: string | null
          created_at: string
          id: string
          ip_address: unknown | null
          learner_id: string
          legal_disclaimer_acknowledged: boolean
          legal_disclaimer_acknowledged_at: string | null
          training_module_id: string
          updated_at: string
          user_agent: string | null
        }
        Insert: {
          acknowledgment_disclaimer_acknowledged?: boolean
          acknowledgment_disclaimer_acknowledged_at?: string | null
          created_at?: string
          id?: string
          ip_address?: unknown | null
          learner_id: string
          legal_disclaimer_acknowledged?: boolean
          legal_disclaimer_acknowledged_at?: string | null
          training_module_id: string
          updated_at?: string
          user_agent?: string | null
        }
        Update: {
          acknowledgment_disclaimer_acknowledged?: boolean
          acknowledgment_disclaimer_acknowledged_at?: string | null
          created_at?: string
          id?: string
          ip_address?: unknown | null
          learner_id?: string
          legal_disclaimer_acknowledged?: boolean
          legal_disclaimer_acknowledged_at?: string | null
          training_module_id?: string
          updated_at?: string
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "training_acknowledgments_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      training_analytics_events: {
        Row: {
          assignment_id: string | null
          created_at: string
          employee_id: string
          event_data: Json | null
          event_type: string
          id: string
          ip_address: unknown | null
          learning_path_id: string | null
          scene_id: string | null
          session_id: string | null
          training_module_id: string | null
          user_agent: string | null
        }
        Insert: {
          assignment_id?: string | null
          created_at?: string
          employee_id: string
          event_data?: Json | null
          event_type: string
          id?: string
          ip_address?: unknown | null
          learning_path_id?: string | null
          scene_id?: string | null
          session_id?: string | null
          training_module_id?: string | null
          user_agent?: string | null
        }
        Update: {
          assignment_id?: string | null
          created_at?: string
          employee_id?: string
          event_data?: Json | null
          event_type?: string
          id?: string
          ip_address?: unknown | null
          learning_path_id?: string | null
          scene_id?: string | null
          session_id?: string | null
          training_module_id?: string | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "training_analytics_events_assignment_id_fkey"
            columns: ["assignment_id"]
            isOneToOne: false
            referencedRelation: "training_assignments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "training_analytics_events_learning_path_id_fkey"
            columns: ["learning_path_id"]
            isOneToOne: false
            referencedRelation: "learning_paths"
            referencedColumns: ["id"]
          },
        ]
      }
      training_assignments: {
        Row: {
          assigned_at: string
          assigned_by: string | null
          due_date: string | null
          employee_id: string
          id: string
          priority: string | null
          status: string | null
          training_module_id: string
        }
        Insert: {
          assigned_at?: string
          assigned_by?: string | null
          due_date?: string | null
          employee_id: string
          id?: string
          priority?: string | null
          status?: string | null
          training_module_id: string
        }
        Update: {
          assigned_at?: string
          assigned_by?: string | null
          due_date?: string | null
          employee_id?: string
          id?: string
          priority?: string | null
          status?: string | null
          training_module_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "training_assignments_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "training_assignments_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      training_completions: {
        Row: {
          assignment_id: string
          completed_at: string | null
          created_at: string
          employee_id: string
          id: string
          last_video_position_seconds: number | null
          progress_percentage: number | null
          quiz_attempts: number | null
          quiz_passed: boolean | null
          quiz_score: number | null
          started_at: string | null
          status: string | null
          training_module_id: string
          updated_at: string
          video_progress_data: Json | null
          video_total_seconds: number | null
          video_watched_seconds: number | null
        }
        Insert: {
          assignment_id: string
          completed_at?: string | null
          created_at?: string
          employee_id: string
          id?: string
          last_video_position_seconds?: number | null
          progress_percentage?: number | null
          quiz_attempts?: number | null
          quiz_passed?: boolean | null
          quiz_score?: number | null
          started_at?: string | null
          status?: string | null
          training_module_id: string
          updated_at?: string
          video_progress_data?: Json | null
          video_total_seconds?: number | null
          video_watched_seconds?: number | null
        }
        Update: {
          assignment_id?: string
          completed_at?: string | null
          created_at?: string
          employee_id?: string
          id?: string
          last_video_position_seconds?: number | null
          progress_percentage?: number | null
          quiz_attempts?: number | null
          quiz_passed?: boolean | null
          quiz_score?: number | null
          started_at?: string | null
          status?: string | null
          training_module_id?: string
          updated_at?: string
          video_progress_data?: Json | null
          video_total_seconds?: number | null
          video_watched_seconds?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "training_completions_assignment_id_fkey"
            columns: ["assignment_id"]
            isOneToOne: true
            referencedRelation: "training_assignments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "training_completions_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "training_completions_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      training_disclaimers: {
        Row: {
          acknowledgment_disclaimer_enabled: boolean
          acknowledgment_disclaimer_text: string | null
          created_at: string
          created_by: string | null
          id: string
          legal_disclaimer_enabled: boolean
          legal_disclaimer_position: string
          legal_disclaimer_text: string | null
          training_module_id: string
          updated_at: string
        }
        Insert: {
          acknowledgment_disclaimer_enabled?: boolean
          acknowledgment_disclaimer_text?: string | null
          created_at?: string
          created_by?: string | null
          id?: string
          legal_disclaimer_enabled?: boolean
          legal_disclaimer_position?: string
          legal_disclaimer_text?: string | null
          training_module_id: string
          updated_at?: string
        }
        Update: {
          acknowledgment_disclaimer_enabled?: boolean
          acknowledgment_disclaimer_text?: string | null
          created_at?: string
          created_by?: string | null
          id?: string
          legal_disclaimer_enabled?: boolean
          legal_disclaimer_position?: string
          legal_disclaimer_text?: string | null
          training_module_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "training_disclaimers_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: true
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      training_module_analytics: {
        Row: {
          average_completion_time: number | null
          created_at: string | null
          dropout_rate: number | null
          engagement_heatmap: Json | null
          id: string
          module_id: string
          struggle_indicators: Json | null
          tags: string[] | null
          updated_at: string | null
        }
        Insert: {
          average_completion_time?: number | null
          created_at?: string | null
          dropout_rate?: number | null
          engagement_heatmap?: Json | null
          id?: string
          module_id: string
          struggle_indicators?: Json | null
          tags?: string[] | null
          updated_at?: string | null
        }
        Update: {
          average_completion_time?: number | null
          created_at?: string | null
          dropout_rate?: number | null
          engagement_heatmap?: Json | null
          id?: string
          module_id?: string
          struggle_indicators?: Json | null
          tags?: string[] | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "training_module_analytics_module_id_fkey"
            columns: ["module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      training_module_client_access: {
        Row: {
          client_id: string
          created_at: string | null
          id: string
          is_published: boolean | null
          notes: string | null
          published_at: string | null
          published_by: string | null
          training_module_id: string
          updated_at: string | null
        }
        Insert: {
          client_id: string
          created_at?: string | null
          id?: string
          is_published?: boolean | null
          notes?: string | null
          published_at?: string | null
          published_by?: string | null
          training_module_id: string
          updated_at?: string | null
        }
        Update: {
          client_id?: string
          created_at?: string | null
          id?: string
          is_published?: boolean | null
          notes?: string | null
          published_at?: string | null
          published_by?: string | null
          training_module_id?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "fk_training_module_client_access_client"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "fk_training_module_client_access_training_module"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      training_module_publishing_audit: {
        Row: {
          action_type: string
          client_ids: string[] | null
          created_at: string | null
          id: string
          notes: string | null
          performed_by: string | null
          publishing_scope: string
          training_module_id: string
        }
        Insert: {
          action_type: string
          client_ids?: string[] | null
          created_at?: string | null
          id?: string
          notes?: string | null
          performed_by?: string | null
          publishing_scope: string
          training_module_id: string
        }
        Update: {
          action_type?: string
          client_ids?: string[] | null
          created_at?: string | null
          id?: string
          notes?: string | null
          performed_by?: string | null
          publishing_scope?: string
          training_module_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "fk_training_module_publishing_audit_training_module"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      training_modules: {
        Row: {
          accessibility_compliant: boolean | null
          available_for_licensing: boolean | null
          category: string | null
          company_id: string | null
          completion_method: string | null
          completion_threshold_percentage: number | null
          created_at: string
          created_by: string | null
          credit_value: number | null
          description: string | null
          difficulty_level: string | null
          estimated_completion_time: number | null
          estimated_duration: number | null
          id: string
          industry: string | null
          is_published: boolean
          is_required: boolean | null
          language: string | null
          license_category: string | null
          metadata: Json | null
          passing_score: number | null
          public_title: string | null
          publishing_scope: string | null
          quiz_enabled: boolean | null
          quiz_questions: Json | null
          requires_special_approval: boolean | null
          scorm_compatible: boolean | null
          scorm_file_name: string | null
          scorm_file_path: string | null
          scorm_version: string | null
          seat_price_override: number | null
          status: string | null
          tags: string[] | null
          target_roles: string[] | null
          thumbnail_url: string | null
          title: string
          updated_at: string
          video_code: string | null
          video_duration_seconds: number | null
          video_type: string | null
          video_url: string | null
          vimeo_embed_url: string | null
          vimeo_video_id: string | null
          visibility_level: string | null
        }
        Insert: {
          accessibility_compliant?: boolean | null
          available_for_licensing?: boolean | null
          category?: string | null
          company_id?: string | null
          completion_method?: string | null
          completion_threshold_percentage?: number | null
          created_at?: string
          created_by?: string | null
          credit_value?: number | null
          description?: string | null
          difficulty_level?: string | null
          estimated_completion_time?: number | null
          estimated_duration?: number | null
          id?: string
          industry?: string | null
          is_published?: boolean
          is_required?: boolean | null
          language?: string | null
          license_category?: string | null
          metadata?: Json | null
          passing_score?: number | null
          public_title?: string | null
          publishing_scope?: string | null
          quiz_enabled?: boolean | null
          quiz_questions?: Json | null
          requires_special_approval?: boolean | null
          scorm_compatible?: boolean | null
          scorm_file_name?: string | null
          scorm_file_path?: string | null
          scorm_version?: string | null
          seat_price_override?: number | null
          status?: string | null
          tags?: string[] | null
          target_roles?: string[] | null
          thumbnail_url?: string | null
          title: string
          updated_at?: string
          video_code?: string | null
          video_duration_seconds?: number | null
          video_type?: string | null
          video_url?: string | null
          vimeo_embed_url?: string | null
          vimeo_video_id?: string | null
          visibility_level?: string | null
        }
        Update: {
          accessibility_compliant?: boolean | null
          available_for_licensing?: boolean | null
          category?: string | null
          company_id?: string | null
          completion_method?: string | null
          completion_threshold_percentage?: number | null
          created_at?: string
          created_by?: string | null
          credit_value?: number | null
          description?: string | null
          difficulty_level?: string | null
          estimated_completion_time?: number | null
          estimated_duration?: number | null
          id?: string
          industry?: string | null
          is_published?: boolean
          is_required?: boolean | null
          language?: string | null
          license_category?: string | null
          metadata?: Json | null
          passing_score?: number | null
          public_title?: string | null
          publishing_scope?: string | null
          quiz_enabled?: boolean | null
          quiz_questions?: Json | null
          requires_special_approval?: boolean | null
          scorm_compatible?: boolean | null
          scorm_file_name?: string | null
          scorm_file_path?: string | null
          scorm_version?: string | null
          seat_price_override?: number | null
          status?: string | null
          tags?: string[] | null
          target_roles?: string[] | null
          thumbnail_url?: string | null
          title?: string
          updated_at?: string
          video_code?: string | null
          video_duration_seconds?: number | null
          video_type?: string | null
          video_url?: string | null
          vimeo_embed_url?: string | null
          vimeo_video_id?: string | null
          visibility_level?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "training_modules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      training_modules_catalog: {
        Row: {
          category: string
          created_at: string | null
          dependencies: string[] | null
          description: string | null
          icon: string | null
          id: string
          is_beta: boolean | null
          is_coming_soon: boolean | null
          is_premium: boolean | null
          module_id: string
          name: string
          requires_setup: boolean | null
          setup_wizard_path: string | null
          thumbnail_url: string | null
          updated_at: string | null
        }
        Insert: {
          category: string
          created_at?: string | null
          dependencies?: string[] | null
          description?: string | null
          icon?: string | null
          id?: string
          is_beta?: boolean | null
          is_coming_soon?: boolean | null
          is_premium?: boolean | null
          module_id: string
          name: string
          requires_setup?: boolean | null
          setup_wizard_path?: string | null
          thumbnail_url?: string | null
          updated_at?: string | null
        }
        Update: {
          category?: string
          created_at?: string | null
          dependencies?: string[] | null
          description?: string | null
          icon?: string | null
          id?: string
          is_beta?: boolean | null
          is_coming_soon?: boolean | null
          is_premium?: boolean | null
          module_id?: string
          name?: string
          requires_setup?: boolean | null
          setup_wizard_path?: string | null
          thumbnail_url?: string | null
          updated_at?: string | null
        }
        Relationships: []
      }
      training_scene_questions: {
        Row: {
          correct_answer: Json
          created_at: string
          difficulty: string
          explanation: string | null
          id: string
          is_required: boolean
          media_type: string | null
          media_url: string | null
          options: Json
          order_index: number
          points: number
          question_text: string
          question_type: string
          scene_id: string
          tags: string[] | null
          time_limit: number | null
          updated_at: string
        }
        Insert: {
          correct_answer: Json
          created_at?: string
          difficulty?: string
          explanation?: string | null
          id?: string
          is_required?: boolean
          media_type?: string | null
          media_url?: string | null
          options?: Json
          order_index?: number
          points?: number
          question_text: string
          question_type: string
          scene_id: string
          tags?: string[] | null
          time_limit?: number | null
          updated_at?: string
        }
        Update: {
          correct_answer?: Json
          created_at?: string
          difficulty?: string
          explanation?: string | null
          id?: string
          is_required?: boolean
          media_type?: string | null
          media_url?: string | null
          options?: Json
          order_index?: number
          points?: number
          question_text?: string
          question_type?: string
          scene_id?: string
          tags?: string[] | null
          time_limit?: number | null
          updated_at?: string
        }
        Relationships: []
      }
      training_scene_settings: {
        Row: {
          created_at: string
          id: string
          scene_id: string
          setting_type: string
          settings: Json
          updated_at: string
        }
        Insert: {
          created_at?: string
          id?: string
          scene_id: string
          setting_type: string
          settings?: Json
          updated_at?: string
        }
        Update: {
          created_at?: string
          id?: string
          scene_id?: string
          setting_type?: string
          settings?: Json
          updated_at?: string
        }
        Relationships: []
      }
      training_scenes: {
        Row: {
          auto_advance: boolean | null
          completion_criteria: Json | null
          content_url: string | null
          created_at: string
          created_by: string | null
          description: string | null
          estimated_duration: number | null
          html_content: string | null
          id: string
          is_completion_scene: boolean | null
          is_required: boolean | null
          metadata: Json | null
          scene_order: number
          scene_type: string
          scorm_package_url: string | null
          status: string | null
          thumbnail_url: string | null
          title: string
          training_module_id: string
          updated_at: string
        }
        Insert: {
          auto_advance?: boolean | null
          completion_criteria?: Json | null
          content_url?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          estimated_duration?: number | null
          html_content?: string | null
          id?: string
          is_completion_scene?: boolean | null
          is_required?: boolean | null
          metadata?: Json | null
          scene_order?: number
          scene_type: string
          scorm_package_url?: string | null
          status?: string | null
          thumbnail_url?: string | null
          title: string
          training_module_id: string
          updated_at?: string
        }
        Update: {
          auto_advance?: boolean | null
          completion_criteria?: Json | null
          content_url?: string | null
          created_at?: string
          created_by?: string | null
          description?: string | null
          estimated_duration?: number | null
          html_content?: string | null
          id?: string
          is_completion_scene?: boolean | null
          is_required?: boolean | null
          metadata?: Json | null
          scene_order?: number
          scene_type?: string
          scorm_package_url?: string | null
          status?: string | null
          thumbnail_url?: string | null
          title?: string
          training_module_id?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "training_scenes_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      unified_time_entries: {
        Row: {
          billable: boolean | null
          case_id: string | null
          company_id: string
          created_at: string | null
          description: string | null
          employee_id: string | null
          hours_logged: number
          id: string
          logged_by: string | null
          retainer_id: string | null
          service_log_id: string | null
          time_type: string
          updated_at: string | null
          work_date: string
        }
        Insert: {
          billable?: boolean | null
          case_id?: string | null
          company_id: string
          created_at?: string | null
          description?: string | null
          employee_id?: string | null
          hours_logged?: number
          id?: string
          logged_by?: string | null
          retainer_id?: string | null
          service_log_id?: string | null
          time_type: string
          updated_at?: string | null
          work_date?: string
        }
        Update: {
          billable?: boolean | null
          case_id?: string | null
          company_id?: string
          created_at?: string | null
          description?: string | null
          employee_id?: string | null
          hours_logged?: number
          id?: string
          logged_by?: string | null
          retainer_id?: string | null
          service_log_id?: string | null
          time_type?: string
          updated_at?: string | null
          work_date?: string
        }
        Relationships: [
          {
            foreignKeyName: "unified_time_entries_case_id_fkey"
            columns: ["case_id"]
            isOneToOne: false
            referencedRelation: "cases"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "unified_time_entries_retainer_id_fkey"
            columns: ["retainer_id"]
            isOneToOne: false
            referencedRelation: "hroiq_client_retainers"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "unified_time_entries_service_log_id_fkey"
            columns: ["service_log_id"]
            isOneToOne: false
            referencedRelation: "hroiq_service_logs"
            referencedColumns: ["id"]
          },
        ]
      }
      user_2fa_settings: {
        Row: {
          activation_code: string | null
          activation_expires_at: string | null
          backup_codes: string[] | null
          created_at: string
          email_code: string | null
          email_code_expires_at: string | null
          id: string
          is_activated: boolean | null
          is_enabled: boolean
          last_used_at: string | null
          method: string
          phone_number: string | null
          totp_secret: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          activation_code?: string | null
          activation_expires_at?: string | null
          backup_codes?: string[] | null
          created_at?: string
          email_code?: string | null
          email_code_expires_at?: string | null
          id?: string
          is_activated?: boolean | null
          is_enabled?: boolean
          last_used_at?: string | null
          method?: string
          phone_number?: string | null
          totp_secret?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          activation_code?: string | null
          activation_expires_at?: string | null
          backup_codes?: string[] | null
          created_at?: string
          email_code?: string | null
          email_code_expires_at?: string | null
          id?: string
          is_activated?: boolean | null
          is_enabled?: boolean
          last_used_at?: string | null
          method?: string
          phone_number?: string | null
          totp_secret?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      user_achievements: {
        Row: {
          achievement_id: string
          company_id: string | null
          earned_at: string
          id: string
          metadata: Json | null
          user_id: string
        }
        Insert: {
          achievement_id: string
          company_id?: string | null
          earned_at?: string
          id?: string
          metadata?: Json | null
          user_id: string
        }
        Update: {
          achievement_id?: string
          company_id?: string | null
          earned_at?: string
          id?: string
          metadata?: Json | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_achievements_achievement_id_fkey"
            columns: ["achievement_id"]
            isOneToOne: false
            referencedRelation: "achievement_definitions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "user_achievements_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      user_attributes: {
        Row: {
          assigned_modules: string[] | null
          certifications: string[] | null
          created_at: string
          custom_attributes: Json | null
          department: string | null
          direct_reports: string[] | null
          id: string
          is_manager: boolean
          job_title: string | null
          updated_at: string
          user_id: string
        }
        Insert: {
          assigned_modules?: string[] | null
          certifications?: string[] | null
          created_at?: string
          custom_attributes?: Json | null
          department?: string | null
          direct_reports?: string[] | null
          id?: string
          is_manager?: boolean
          job_title?: string | null
          updated_at?: string
          user_id: string
        }
        Update: {
          assigned_modules?: string[] | null
          certifications?: string[] | null
          created_at?: string
          custom_attributes?: Json | null
          department?: string | null
          direct_reports?: string[] | null
          id?: string
          is_manager?: boolean
          job_title?: string | null
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      user_behavior_analytics: {
        Row: {
          assignment_id: string
          created_at: string | null
          current_time_seconds: number | null
          employee_id: string
          engagement_score: number | null
          event_data: Json | null
          event_type: string
          id: string
          metadata: Json | null
          scene_id: string
          session_id: string
          timestamp: string | null
          video_duration_seconds: number | null
        }
        Insert: {
          assignment_id: string
          created_at?: string | null
          current_time_seconds?: number | null
          employee_id: string
          engagement_score?: number | null
          event_data?: Json | null
          event_type: string
          id?: string
          metadata?: Json | null
          scene_id: string
          session_id: string
          timestamp?: string | null
          video_duration_seconds?: number | null
        }
        Update: {
          assignment_id?: string
          created_at?: string | null
          current_time_seconds?: number | null
          employee_id?: string
          engagement_score?: number | null
          event_data?: Json | null
          event_type?: string
          id?: string
          metadata?: Json | null
          scene_id?: string
          session_id?: string
          timestamp?: string | null
          video_duration_seconds?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "user_behavior_analytics_assignment_id_fkey"
            columns: ["assignment_id"]
            isOneToOne: false
            referencedRelation: "training_assignments"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "user_behavior_analytics_employee_id_fkey"
            columns: ["employee_id"]
            isOneToOne: false
            referencedRelation: "employees"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "user_behavior_analytics_scene_id_fkey"
            columns: ["scene_id"]
            isOneToOne: false
            referencedRelation: "training_scenes"
            referencedColumns: ["id"]
          },
        ]
      }
      user_billable_rates: {
        Row: {
          created_at: string
          effective_date: string
          hourly_rate: number
          id: string
          is_active: boolean | null
          role_type: string
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          effective_date?: string
          hourly_rate: number
          id?: string
          is_active?: boolean | null
          role_type: string
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          effective_date?: string
          hourly_rate?: number
          id?: string
          is_active?: boolean | null
          role_type?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      user_course_access: {
        Row: {
          certificate_generated: boolean
          certificate_id: string | null
          created_at: string
          id: string
          ip_address: unknown | null
          last_accessed_at: string | null
          seat_package_id: string
          status: string
          training_module_id: string
          unlocked_at: string
          updated_at: string
          user_agent: string | null
          user_id: string
        }
        Insert: {
          certificate_generated?: boolean
          certificate_id?: string | null
          created_at?: string
          id?: string
          ip_address?: unknown | null
          last_accessed_at?: string | null
          seat_package_id: string
          status?: string
          training_module_id: string
          unlocked_at?: string
          updated_at?: string
          user_agent?: string | null
          user_id: string
        }
        Update: {
          certificate_generated?: boolean
          certificate_id?: string | null
          created_at?: string
          id?: string
          ip_address?: unknown | null
          last_accessed_at?: string | null
          seat_package_id?: string
          status?: string
          training_module_id?: string
          unlocked_at?: string
          updated_at?: string
          user_agent?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_course_access_certificate_id_fkey"
            columns: ["certificate_id"]
            isOneToOne: false
            referencedRelation: "certificates"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "user_course_access_seat_package_id_fkey"
            columns: ["seat_package_id"]
            isOneToOne: false
            referencedRelation: "user_course_seats"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "user_course_access_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      user_course_seats: {
        Row: {
          created_at: string
          expires_at: string | null
          id: string
          package_id: string | null
          purchased_at: string
          remaining_seats: number | null
          status: string
          stripe_payment_intent_id: string | null
          total_seats: number
          updated_at: string
          used_seats: number
          user_id: string
        }
        Insert: {
          created_at?: string
          expires_at?: string | null
          id?: string
          package_id?: string | null
          purchased_at?: string
          remaining_seats?: number | null
          status?: string
          stripe_payment_intent_id?: string | null
          total_seats: number
          updated_at?: string
          used_seats?: number
          user_id: string
        }
        Update: {
          created_at?: string
          expires_at?: string | null
          id?: string
          package_id?: string | null
          purchased_at?: string
          remaining_seats?: number | null
          status?: string
          stripe_payment_intent_id?: string | null
          total_seats?: number
          updated_at?: string
          used_seats?: number
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_course_seats_package_id_fkey"
            columns: ["package_id"]
            isOneToOne: false
            referencedRelation: "course_packages"
            referencedColumns: ["id"]
          },
        ]
      }
      user_dashboard_preferences: {
        Row: {
          created_at: string
          dashboard_type: string
          hidden_widgets: string[] | null
          id: string
          layout_config: Json
          updated_at: string
          user_id: string
          widget_settings: Json
        }
        Insert: {
          created_at?: string
          dashboard_type?: string
          hidden_widgets?: string[] | null
          id?: string
          layout_config?: Json
          updated_at?: string
          user_id: string
          widget_settings?: Json
        }
        Update: {
          created_at?: string
          dashboard_type?: string
          hidden_widgets?: string[] | null
          id?: string
          layout_config?: Json
          updated_at?: string
          user_id?: string
          widget_settings?: Json
        }
        Relationships: []
      }
      user_email_settings: {
        Row: {
          created_at: string
          from_email: string
          from_name: string
          id: string
          is_active: boolean
          is_verified: boolean
          reply_to: string | null
          smtp_enabled: boolean
          smtp_host: string | null
          smtp_password: string | null
          smtp_port: number | null
          smtp_username: string | null
          updated_at: string
          user_id: string
          verification_token: string | null
        }
        Insert: {
          created_at?: string
          from_email: string
          from_name: string
          id?: string
          is_active?: boolean
          is_verified?: boolean
          reply_to?: string | null
          smtp_enabled?: boolean
          smtp_host?: string | null
          smtp_password?: string | null
          smtp_port?: number | null
          smtp_username?: string | null
          updated_at?: string
          user_id: string
          verification_token?: string | null
        }
        Update: {
          created_at?: string
          from_email?: string
          from_name?: string
          id?: string
          is_active?: boolean
          is_verified?: boolean
          reply_to?: string | null
          smtp_enabled?: boolean
          smtp_host?: string | null
          smtp_password?: string | null
          smtp_port?: number | null
          smtp_username?: string | null
          updated_at?: string
          user_id?: string
          verification_token?: string | null
        }
        Relationships: []
      }
      user_email_signatures: {
        Row: {
          created_at: string
          id: string
          is_enabled: boolean
          signature_html: string
          signature_text: string
          updated_at: string
          use_global_template: boolean
          user_id: string
        }
        Insert: {
          created_at?: string
          id?: string
          is_enabled?: boolean
          signature_html?: string
          signature_text?: string
          updated_at?: string
          use_global_template?: boolean
          user_id: string
        }
        Update: {
          created_at?: string
          id?: string
          is_enabled?: boolean
          signature_html?: string
          signature_text?: string
          updated_at?: string
          use_global_template?: boolean
          user_id?: string
        }
        Relationships: []
      }
      user_invitations: {
        Row: {
          accepted_at: string | null
          accepted_by: string | null
          client_id: string | null
          company_id: string | null
          created_at: string
          email: string
          expires_at: string
          id: string
          invitation_token: string
          invited_by: string
          role_assignment: Json
          status: string
          updated_at: string
          user_attributes: Json
        }
        Insert: {
          accepted_at?: string | null
          accepted_by?: string | null
          client_id?: string | null
          company_id?: string | null
          created_at?: string
          email: string
          expires_at: string
          id?: string
          invitation_token: string
          invited_by: string
          role_assignment?: Json
          status?: string
          updated_at?: string
          user_attributes?: Json
        }
        Update: {
          accepted_at?: string | null
          accepted_by?: string | null
          client_id?: string | null
          company_id?: string | null
          created_at?: string
          email?: string
          expires_at?: string
          id?: string
          invitation_token?: string
          invited_by?: string
          role_assignment?: Json
          status?: string
          updated_at?: string
          user_attributes?: Json
        }
        Relationships: []
      }
      user_permissions: {
        Row: {
          created_at: string
          expires_at: string | null
          granted_at: string
          granted_by: string
          id: string
          is_active: boolean
          permission_name: string
          resource_id: string | null
          resource_type: string
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          expires_at?: string | null
          granted_at?: string
          granted_by: string
          id?: string
          is_active?: boolean
          permission_name: string
          resource_id?: string | null
          resource_type: string
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          expires_at?: string | null
          granted_at?: string
          granted_by?: string
          id?: string
          is_active?: boolean
          permission_name?: string
          resource_id?: string | null
          resource_type?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      user_points: {
        Row: {
          company_id: string | null
          current_streak: number
          id: string
          last_activity_date: string | null
          longest_streak: number
          points_this_month: number
          points_this_week: number
          total_points: number
          updated_at: string
          user_id: string
        }
        Insert: {
          company_id?: string | null
          current_streak?: number
          id?: string
          last_activity_date?: string | null
          longest_streak?: number
          points_this_month?: number
          points_this_week?: number
          total_points?: number
          updated_at?: string
          user_id: string
        }
        Update: {
          company_id?: string | null
          current_streak?: number
          id?: string
          last_activity_date?: string | null
          longest_streak?: number
          points_this_month?: number
          points_this_week?: number
          total_points?: number
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_points_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      user_preferences: {
        Row: {
          created_at: string
          id: string
          preference_key: string
          preference_value: string
          updated_at: string
          user_id: string
        }
        Insert: {
          created_at?: string
          id?: string
          preference_key: string
          preference_value: string
          updated_at?: string
          user_id: string
        }
        Update: {
          created_at?: string
          id?: string
          preference_key?: string
          preference_value?: string
          updated_at?: string
          user_id?: string
        }
        Relationships: []
      }
      user_profiles: {
        Row: {
          created_at: string | null
          email: string | null
          first_name: string | null
          id: string
          last_name: string | null
          training_progress: Json | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          email?: string | null
          first_name?: string | null
          id: string
          last_name?: string | null
          training_progress?: Json | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          email?: string | null
          first_name?: string | null
          id?: string
          last_name?: string | null
          training_progress?: Json | null
          updated_at?: string | null
        }
        Relationships: []
      }
      user_roles: {
        Row: {
          brand_identity: Database["public"]["Enums"]["brand_identity"] | null
          client_id: string | null
          company_id: string | null
          created_at: string
          id: string
          role: Database["public"]["Enums"]["app_role"]
          updated_at: string
          user_id: string
        }
        Insert: {
          brand_identity?: Database["public"]["Enums"]["brand_identity"] | null
          client_id?: string | null
          company_id?: string | null
          created_at?: string
          id?: string
          role: Database["public"]["Enums"]["app_role"]
          updated_at?: string
          user_id: string
        }
        Update: {
          brand_identity?: Database["public"]["Enums"]["brand_identity"] | null
          client_id?: string | null
          company_id?: string | null
          created_at?: string
          id?: string
          role?: Database["public"]["Enums"]["app_role"]
          updated_at?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_roles_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      user_sessions: {
        Row: {
          created_at: string
          device_info: Json | null
          expires_at: string
          id: string
          ip_address: unknown | null
          is_active: boolean
          last_activity_at: string
          location_info: Json | null
          session_token: string
          updated_at: string
          user_agent: string | null
          user_id: string
        }
        Insert: {
          created_at?: string
          device_info?: Json | null
          expires_at?: string
          id?: string
          ip_address?: unknown | null
          is_active?: boolean
          last_activity_at?: string
          location_info?: Json | null
          session_token: string
          updated_at?: string
          user_agent?: string | null
          user_id: string
        }
        Update: {
          created_at?: string
          device_info?: Json | null
          expires_at?: string
          id?: string
          ip_address?: unknown | null
          is_active?: boolean
          last_activity_at?: string
          location_info?: Json | null
          session_token?: string
          updated_at?: string
          user_agent?: string | null
          user_id?: string
        }
        Relationships: []
      }
      user_sessions_security: {
        Row: {
          created_at: string
          device_fingerprint: string | null
          expires_at: string
          id: string
          ip_address: unknown
          is_active: boolean
          is_trusted_device: boolean | null
          last_activity: string | null
          location_city: string | null
          location_country: string | null
          login_method: string | null
          mfa_verified: boolean | null
          risk_assessment: Json | null
          session_token: string
          terminated_at: string | null
          termination_reason: string | null
          user_agent: string | null
          user_id: string
        }
        Insert: {
          created_at?: string
          device_fingerprint?: string | null
          expires_at: string
          id?: string
          ip_address: unknown
          is_active?: boolean
          is_trusted_device?: boolean | null
          last_activity?: string | null
          location_city?: string | null
          location_country?: string | null
          login_method?: string | null
          mfa_verified?: boolean | null
          risk_assessment?: Json | null
          session_token: string
          terminated_at?: string | null
          termination_reason?: string | null
          user_agent?: string | null
          user_id: string
        }
        Update: {
          created_at?: string
          device_fingerprint?: string | null
          expires_at?: string
          id?: string
          ip_address?: unknown
          is_active?: boolean
          is_trusted_device?: boolean | null
          last_activity?: string | null
          location_city?: string | null
          location_country?: string | null
          login_method?: string | null
          mfa_verified?: boolean | null
          risk_assessment?: Json | null
          session_token?: string
          terminated_at?: string | null
          termination_reason?: string | null
          user_agent?: string | null
          user_id?: string
        }
        Relationships: []
      }
      user_video_sessions: {
        Row: {
          created_at: string
          device_fingerprint: string | null
          expires_at: string
          id: string
          ip_address: unknown
          is_active: boolean
          last_activity_at: string
          session_token: string
          user_agent: string | null
          user_id: string
        }
        Insert: {
          created_at?: string
          device_fingerprint?: string | null
          expires_at: string
          id?: string
          ip_address: unknown
          is_active?: boolean
          last_activity_at?: string
          session_token: string
          user_agent?: string | null
          user_id: string
        }
        Update: {
          created_at?: string
          device_fingerprint?: string | null
          expires_at?: string
          id?: string
          ip_address?: unknown
          is_active?: boolean
          last_activity_at?: string
          session_token?: string
          user_agent?: string | null
          user_id?: string
        }
        Relationships: []
      }
      user_widget_preferences: {
        Row: {
          created_at: string | null
          custom_config: Json | null
          id: string
          is_enabled: boolean | null
          position: number
          updated_at: string | null
          user_id: string
          widget_id: string
        }
        Insert: {
          created_at?: string | null
          custom_config?: Json | null
          id?: string
          is_enabled?: boolean | null
          position?: number
          updated_at?: string | null
          user_id: string
          widget_id: string
        }
        Update: {
          created_at?: string | null
          custom_config?: Json | null
          id?: string
          is_enabled?: boolean | null
          position?: number
          updated_at?: string | null
          user_id?: string
          widget_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_widget_preferences_widget_id_fkey"
            columns: ["widget_id"]
            isOneToOne: false
            referencedRelation: "widget_definitions"
            referencedColumns: ["id"]
          },
        ]
      }
      vault_audit_logs: {
        Row: {
          action: string
          created_at: string
          details: Json | null
          file_id: string | null
          id: string
          ip_address: unknown | null
          user_agent: string | null
          user_id: string | null
        }
        Insert: {
          action: string
          created_at?: string
          details?: Json | null
          file_id?: string | null
          id?: string
          ip_address?: unknown | null
          user_agent?: string | null
          user_id?: string | null
        }
        Update: {
          action?: string
          created_at?: string
          details?: Json | null
          file_id?: string | null
          id?: string
          ip_address?: unknown | null
          user_agent?: string | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "vault_audit_logs_file_id_fkey"
            columns: ["file_id"]
            isOneToOne: false
            referencedRelation: "vault_files"
            referencedColumns: ["id"]
          },
        ]
      }
      vault_files: {
        Row: {
          checksum: string | null
          company_id: string | null
          created_at: string
          description: string | null
          download_count: number
          file_path: string
          file_size: number
          folder_path: string | null
          id: string
          is_shared: boolean
          last_accessed_at: string | null
          mime_type: string
          name: string
          original_name: string
          tags: string[] | null
          updated_at: string
          uploaded_by: string
          version: number
        }
        Insert: {
          checksum?: string | null
          company_id?: string | null
          created_at?: string
          description?: string | null
          download_count?: number
          file_path: string
          file_size: number
          folder_path?: string | null
          id?: string
          is_shared?: boolean
          last_accessed_at?: string | null
          mime_type: string
          name: string
          original_name: string
          tags?: string[] | null
          updated_at?: string
          uploaded_by: string
          version?: number
        }
        Update: {
          checksum?: string | null
          company_id?: string | null
          created_at?: string
          description?: string | null
          download_count?: number
          file_path?: string
          file_size?: number
          folder_path?: string | null
          id?: string
          is_shared?: boolean
          last_accessed_at?: string | null
          mime_type?: string
          name?: string
          original_name?: string
          tags?: string[] | null
          updated_at?: string
          uploaded_by?: string
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "vault_files_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      vault_permissions: {
        Row: {
          created_at: string
          file_id: string
          granted_by: string
          id: string
          permission_type: string
          user_id: string
        }
        Insert: {
          created_at?: string
          file_id: string
          granted_by: string
          id?: string
          permission_type: string
          user_id: string
        }
        Update: {
          created_at?: string
          file_id?: string
          granted_by?: string
          id?: string
          permission_type?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "vault_permissions_file_id_fkey"
            columns: ["file_id"]
            isOneToOne: false
            referencedRelation: "vault_files"
            referencedColumns: ["id"]
          },
        ]
      }
      vault_share_links: {
        Row: {
          created_at: string
          created_by: string
          download_count: number
          expires_at: string | null
          file_id: string
          id: string
          is_active: boolean
          max_downloads: number | null
          password_hash: string | null
          token: string
        }
        Insert: {
          created_at?: string
          created_by: string
          download_count?: number
          expires_at?: string | null
          file_id: string
          id?: string
          is_active?: boolean
          max_downloads?: number | null
          password_hash?: string | null
          token: string
        }
        Update: {
          created_at?: string
          created_by?: string
          download_count?: number
          expires_at?: string | null
          file_id?: string
          id?: string
          is_active?: boolean
          max_downloads?: number | null
          password_hash?: string | null
          token?: string
        }
        Relationships: [
          {
            foreignKeyName: "vault_share_links_file_id_fkey"
            columns: ["file_id"]
            isOneToOne: false
            referencedRelation: "vault_files"
            referencedColumns: ["id"]
          },
        ]
      }
      vaultpay_credit_memos: {
        Row: {
          amount: number
          applied_invoice_id: string | null
          company_id: string
          created_at: string
          created_by: string
          id: string
          is_applied: boolean | null
          issued_date: string
          memo_number: string
          reason: string
          updated_at: string
        }
        Insert: {
          amount: number
          applied_invoice_id?: string | null
          company_id: string
          created_at?: string
          created_by: string
          id?: string
          is_applied?: boolean | null
          issued_date: string
          memo_number: string
          reason: string
          updated_at?: string
        }
        Update: {
          amount?: number
          applied_invoice_id?: string | null
          company_id?: string
          created_at?: string
          created_by?: string
          id?: string
          is_applied?: boolean | null
          issued_date?: string
          memo_number?: string
          reason?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "vaultpay_credit_memos_applied_invoice_id_fkey"
            columns: ["applied_invoice_id"]
            isOneToOne: false
            referencedRelation: "vaultpay_invoices"
            referencedColumns: ["id"]
          },
        ]
      }
      vaultpay_invoice_line_items: {
        Row: {
          created_at: string
          description: string
          id: string
          invoice_id: string
          quantity: number
          sort_order: number | null
          total: number
          unit_price: number
        }
        Insert: {
          created_at?: string
          description: string
          id?: string
          invoice_id: string
          quantity?: number
          sort_order?: number | null
          total: number
          unit_price: number
        }
        Update: {
          created_at?: string
          description?: string
          id?: string
          invoice_id?: string
          quantity?: number
          sort_order?: number | null
          total?: number
          unit_price?: number
        }
        Relationships: [
          {
            foreignKeyName: "vaultpay_invoice_line_items_invoice_id_fkey"
            columns: ["invoice_id"]
            isOneToOne: false
            referencedRelation: "vaultpay_invoices"
            referencedColumns: ["id"]
          },
        ]
      }
      vaultpay_invoices: {
        Row: {
          category: string | null
          company_id: string
          created_at: string
          created_by: string
          due_date: string
          id: string
          invoice_number: string
          invoice_pdf_url: string | null
          notes: string | null
          payroll_run_id: string | null
          sent_date: string | null
          status: string
          subtotal_amount: number
          tax_amount: number | null
          total_amount: number
          updated_at: string
        }
        Insert: {
          category?: string | null
          company_id: string
          created_at?: string
          created_by: string
          due_date: string
          id?: string
          invoice_number: string
          invoice_pdf_url?: string | null
          notes?: string | null
          payroll_run_id?: string | null
          sent_date?: string | null
          status?: string
          subtotal_amount?: number
          tax_amount?: number | null
          total_amount?: number
          updated_at?: string
        }
        Update: {
          category?: string | null
          company_id?: string
          created_at?: string
          created_by?: string
          due_date?: string
          id?: string
          invoice_number?: string
          invoice_pdf_url?: string | null
          notes?: string | null
          payroll_run_id?: string | null
          sent_date?: string | null
          status?: string
          subtotal_amount?: number
          tax_amount?: number | null
          total_amount?: number
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "vaultpay_invoices_payroll_run_id_fkey"
            columns: ["payroll_run_id"]
            isOneToOne: false
            referencedRelation: "payroll_runs"
            referencedColumns: ["id"]
          },
        ]
      }
      vaultpay_payments: {
        Row: {
          amount: number
          applied_by: string
          company_id: string
          created_at: string
          id: string
          invoice_id: string | null
          memo: string | null
          payment_date: string
          payment_method: string
          reference_number: string | null
          updated_at: string
        }
        Insert: {
          amount: number
          applied_by: string
          company_id: string
          created_at?: string
          id?: string
          invoice_id?: string | null
          memo?: string | null
          payment_date: string
          payment_method: string
          reference_number?: string | null
          updated_at?: string
        }
        Update: {
          amount?: number
          applied_by?: string
          company_id?: string
          created_at?: string
          id?: string
          invoice_id?: string | null
          memo?: string | null
          payment_date?: string
          payment_method?: string
          reference_number?: string | null
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "vaultpay_payments_invoice_id_fkey"
            columns: ["invoice_id"]
            isOneToOne: false
            referencedRelation: "vaultpay_invoices"
            referencedColumns: ["id"]
          },
        ]
      }
      vendor_bank_accounts: {
        Row: {
          account_holder_name: string
          account_number_encrypted: string
          account_type: string
          created_at: string
          id: string
          is_active: boolean
          memo_format_template: string | null
          remittance_code_required: boolean
          routing_number: string
          updated_at: string
          vendor_id: string
          vendor_type: string
          verified_on: string | null
        }
        Insert: {
          account_holder_name: string
          account_number_encrypted: string
          account_type: string
          created_at?: string
          id?: string
          is_active?: boolean
          memo_format_template?: string | null
          remittance_code_required?: boolean
          routing_number: string
          updated_at?: string
          vendor_id: string
          vendor_type: string
          verified_on?: string | null
        }
        Update: {
          account_holder_name?: string
          account_number_encrypted?: string
          account_type?: string
          created_at?: string
          id?: string
          is_active?: boolean
          memo_format_template?: string | null
          remittance_code_required?: boolean
          routing_number?: string
          updated_at?: string
          vendor_id?: string
          vendor_type?: string
          verified_on?: string | null
        }
        Relationships: []
      }
      video_access_tokens: {
        Row: {
          created_at: string
          expires_at: string
          id: string
          ip_address: unknown
          is_used: boolean
          session_id: string
          token_hash: string
          training_module_id: string
          used_at: string | null
          user_agent: string | null
          user_id: string
          video_position_seconds: number | null
        }
        Insert: {
          created_at?: string
          expires_at: string
          id?: string
          ip_address: unknown
          is_used?: boolean
          session_id?: string
          token_hash: string
          training_module_id: string
          used_at?: string | null
          user_agent?: string | null
          user_id: string
          video_position_seconds?: number | null
        }
        Update: {
          created_at?: string
          expires_at?: string
          id?: string
          ip_address?: unknown
          is_used?: boolean
          session_id?: string
          token_hash?: string
          training_module_id?: string
          used_at?: string | null
          user_agent?: string | null
          user_id?: string
          video_position_seconds?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "video_access_tokens_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      video_security_audit: {
        Row: {
          created_at: string
          event_details: Json
          event_type: string
          id: string
          ip_address: unknown | null
          risk_score: number | null
          session_id: string | null
          training_module_id: string | null
          user_agent: string | null
          user_id: string
        }
        Insert: {
          created_at?: string
          event_details?: Json
          event_type: string
          id?: string
          ip_address?: unknown | null
          risk_score?: number | null
          session_id?: string | null
          training_module_id?: string | null
          user_agent?: string | null
          user_id: string
        }
        Update: {
          created_at?: string
          event_details?: Json
          event_type?: string
          id?: string
          ip_address?: unknown | null
          risk_score?: number | null
          session_id?: string | null
          training_module_id?: string | null
          user_agent?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "video_security_audit_training_module_id_fkey"
            columns: ["training_module_id"]
            isOneToOne: false
            referencedRelation: "training_modules"
            referencedColumns: ["id"]
          },
        ]
      }
      wage_compliance_alerts: {
        Row: {
          affected_employees: string[] | null
          alert_type: string
          company_id: string | null
          created_at: string
          description: string
          due_date: string | null
          id: string
          is_resolved: boolean
          jurisdiction: string
          recommended_actions: string[] | null
          resolution_notes: string | null
          resolved_at: string | null
          resolved_by: string | null
          severity: string
          title: string
          updated_at: string
          violation_details: Json | null
        }
        Insert: {
          affected_employees?: string[] | null
          alert_type: string
          company_id?: string | null
          created_at?: string
          description: string
          due_date?: string | null
          id?: string
          is_resolved?: boolean
          jurisdiction: string
          recommended_actions?: string[] | null
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          title: string
          updated_at?: string
          violation_details?: Json | null
        }
        Update: {
          affected_employees?: string[] | null
          alert_type?: string
          company_id?: string | null
          created_at?: string
          description?: string
          due_date?: string | null
          id?: string
          is_resolved?: boolean
          jurisdiction?: string
          recommended_actions?: string[] | null
          resolution_notes?: string | null
          resolved_at?: string | null
          resolved_by?: string | null
          severity?: string
          title?: string
          updated_at?: string
          violation_details?: Json | null
        }
        Relationships: [
          {
            foreignKeyName: "wage_compliance_alerts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      wage_compliance_audit_trail: {
        Row: {
          action_details: Json
          action_type: string
          company_id: string | null
          compliance_context: Json | null
          entity_id: string
          entity_type: string
          id: string
          ip_address: unknown | null
          performed_at: string
          performed_by: string | null
          user_agent: string | null
        }
        Insert: {
          action_details?: Json
          action_type: string
          company_id?: string | null
          compliance_context?: Json | null
          entity_id: string
          entity_type: string
          id?: string
          ip_address?: unknown | null
          performed_at?: string
          performed_by?: string | null
          user_agent?: string | null
        }
        Update: {
          action_details?: Json
          action_type?: string
          company_id?: string | null
          compliance_context?: Json | null
          entity_id?: string
          entity_type?: string
          id?: string
          ip_address?: unknown | null
          performed_at?: string
          performed_by?: string | null
          user_agent?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "wage_compliance_audit_trail_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      wage_compliance_reports: {
        Row: {
          company_id: string | null
          compliance_score: number | null
          created_at: string
          executive_summary: string | null
          generated_at: string
          generated_by: string | null
          high_risk_violations: number
          id: string
          is_published: boolean
          published_at: string | null
          recommendations: string[] | null
          report_data: Json
          report_period_end: string
          report_period_start: string
          report_type: string
          total_violations: number
        }
        Insert: {
          company_id?: string | null
          compliance_score?: number | null
          created_at?: string
          executive_summary?: string | null
          generated_at?: string
          generated_by?: string | null
          high_risk_violations?: number
          id?: string
          is_published?: boolean
          published_at?: string | null
          recommendations?: string[] | null
          report_data?: Json
          report_period_end: string
          report_period_start: string
          report_type: string
          total_violations?: number
        }
        Update: {
          company_id?: string | null
          compliance_score?: number | null
          created_at?: string
          executive_summary?: string | null
          generated_at?: string
          generated_by?: string | null
          high_risk_violations?: number
          id?: string
          is_published?: boolean
          published_at?: string | null
          recommendations?: string[] | null
          report_data?: Json
          report_period_end?: string
          report_period_start?: string
          report_type?: string
          total_violations?: number
        }
        Relationships: [
          {
            foreignKeyName: "wage_compliance_reports_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      wage_compliance_rules: {
        Row: {
          alert_threshold: Json
          company_id: string | null
          created_at: string
          created_by: string | null
          id: string
          is_active: boolean
          notification_channels: string[]
          notification_frequency: string
          recipients: string[]
          rule_name: string
          rule_type: string
          trigger_conditions: Json
          updated_at: string
        }
        Insert: {
          alert_threshold?: Json
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          id?: string
          is_active?: boolean
          notification_channels?: string[]
          notification_frequency?: string
          recipients?: string[]
          rule_name: string
          rule_type: string
          trigger_conditions?: Json
          updated_at?: string
        }
        Update: {
          alert_threshold?: Json
          company_id?: string | null
          created_at?: string
          created_by?: string | null
          id?: string
          is_active?: boolean
          notification_channels?: string[]
          notification_frequency?: string
          recipients?: string[]
          rule_name?: string
          rule_type?: string
          trigger_conditions?: Json
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "wage_compliance_rules_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      wage_data_sources: {
        Row: {
          created_at: string
          error_message: string | null
          id: string
          is_active: boolean | null
          jurisdiction_level: string
          jurisdiction_name: string
          last_parsed_at: string | null
          metadata: Json | null
          next_parse_at: string | null
          parse_frequency: string | null
          parse_status: string | null
          source_name: string
          source_url: string
          updated_at: string
        }
        Insert: {
          created_at?: string
          error_message?: string | null
          id?: string
          is_active?: boolean | null
          jurisdiction_level: string
          jurisdiction_name: string
          last_parsed_at?: string | null
          metadata?: Json | null
          next_parse_at?: string | null
          parse_frequency?: string | null
          parse_status?: string | null
          source_name: string
          source_url: string
          updated_at?: string
        }
        Update: {
          created_at?: string
          error_message?: string | null
          id?: string
          is_active?: boolean | null
          jurisdiction_level?: string
          jurisdiction_name?: string
          last_parsed_at?: string | null
          metadata?: Json | null
          next_parse_at?: string | null
          parse_frequency?: string | null
          parse_status?: string | null
          source_name?: string
          source_url?: string
          updated_at?: string
        }
        Relationships: []
      }
      wage_override_history: {
        Row: {
          action_type: string
          id: string
          metadata: Json | null
          new_values: Json | null
          old_values: Json | null
          override_reason: string | null
          performed_at: string
          performed_by: string | null
          wage_rule_id: string
        }
        Insert: {
          action_type: string
          id?: string
          metadata?: Json | null
          new_values?: Json | null
          old_values?: Json | null
          override_reason?: string | null
          performed_at?: string
          performed_by?: string | null
          wage_rule_id: string
        }
        Update: {
          action_type?: string
          id?: string
          metadata?: Json | null
          new_values?: Json | null
          old_values?: Json | null
          override_reason?: string | null
          performed_at?: string
          performed_by?: string | null
          wage_rule_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "wage_override_history_wage_rule_id_fkey"
            columns: ["wage_rule_id"]
            isOneToOne: false
            referencedRelation: "wage_rules"
            referencedColumns: ["id"]
          },
        ]
      }
      wage_rules: {
        Row: {
          city_name: string | null
          county_name: string | null
          created_at: string
          created_by: string | null
          effective_date: string
          employee_count_threshold: number | null
          exempt_annual: number | null
          exempt_weekly: number | null
          expiration_date: string | null
          id: string
          industry: string | null
          is_active: boolean | null
          is_override: boolean | null
          jurisdiction_level: string
          jurisdiction_name: string
          minimum_hourly: number | null
          override_reason: string | null
          source_url: string | null
          state_code: string | null
          tipped_hourly: number | null
          updated_at: string
          updated_by: string | null
          zip_codes: string[] | null
        }
        Insert: {
          city_name?: string | null
          county_name?: string | null
          created_at?: string
          created_by?: string | null
          effective_date: string
          employee_count_threshold?: number | null
          exempt_annual?: number | null
          exempt_weekly?: number | null
          expiration_date?: string | null
          id?: string
          industry?: string | null
          is_active?: boolean | null
          is_override?: boolean | null
          jurisdiction_level: string
          jurisdiction_name: string
          minimum_hourly?: number | null
          override_reason?: string | null
          source_url?: string | null
          state_code?: string | null
          tipped_hourly?: number | null
          updated_at?: string
          updated_by?: string | null
          zip_codes?: string[] | null
        }
        Update: {
          city_name?: string | null
          county_name?: string | null
          created_at?: string
          created_by?: string | null
          effective_date?: string
          employee_count_threshold?: number | null
          exempt_annual?: number | null
          exempt_weekly?: number | null
          expiration_date?: string | null
          id?: string
          industry?: string | null
          is_active?: boolean | null
          is_override?: boolean | null
          jurisdiction_level?: string
          jurisdiction_name?: string
          minimum_hourly?: number | null
          override_reason?: string | null
          source_url?: string | null
          state_code?: string | null
          tipped_hourly?: number | null
          updated_at?: string
          updated_by?: string | null
          zip_codes?: string[] | null
        }
        Relationships: []
      }
      webhook_deliveries: {
        Row: {
          created_at: string
          delivered_at: string | null
          delivery_attempts: number
          event_type: string
          id: string
          next_retry_at: string | null
          payload: Json
          response_body: string | null
          response_status: number | null
          webhook_id: string
        }
        Insert: {
          created_at?: string
          delivered_at?: string | null
          delivery_attempts?: number
          event_type: string
          id?: string
          next_retry_at?: string | null
          payload: Json
          response_body?: string | null
          response_status?: number | null
          webhook_id: string
        }
        Update: {
          created_at?: string
          delivered_at?: string | null
          delivery_attempts?: number
          event_type?: string
          id?: string
          next_retry_at?: string | null
          payload?: Json
          response_body?: string | null
          response_status?: number | null
          webhook_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "webhook_deliveries_webhook_id_fkey"
            columns: ["webhook_id"]
            isOneToOne: false
            referencedRelation: "webhooks"
            referencedColumns: ["id"]
          },
        ]
      }
      webhook_logs: {
        Row: {
          attempt_number: number | null
          created_at: string
          error_message: string | null
          event_type: string | null
          headers: Json | null
          http_method: string
          id: string
          integration_id: string | null
          max_attempts: number | null
          payload: Json | null
          processed_at: string | null
          received_at: string | null
          response_body: string | null
          response_status: number | null
          response_time_ms: number | null
          scheduled_for: string | null
          status: string
          webhook_url: string
        }
        Insert: {
          attempt_number?: number | null
          created_at?: string
          error_message?: string | null
          event_type?: string | null
          headers?: Json | null
          http_method?: string
          id?: string
          integration_id?: string | null
          max_attempts?: number | null
          payload?: Json | null
          processed_at?: string | null
          received_at?: string | null
          response_body?: string | null
          response_status?: number | null
          response_time_ms?: number | null
          scheduled_for?: string | null
          status?: string
          webhook_url: string
        }
        Update: {
          attempt_number?: number | null
          created_at?: string
          error_message?: string | null
          event_type?: string | null
          headers?: Json | null
          http_method?: string
          id?: string
          integration_id?: string | null
          max_attempts?: number | null
          payload?: Json | null
          processed_at?: string | null
          received_at?: string | null
          response_body?: string | null
          response_status?: number | null
          response_time_ms?: number | null
          scheduled_for?: string | null
          status?: string
          webhook_url?: string
        }
        Relationships: [
          {
            foreignKeyName: "webhook_logs_integration_id_fkey"
            columns: ["integration_id"]
            isOneToOne: false
            referencedRelation: "integrations"
            referencedColumns: ["id"]
          },
        ]
      }
      webhooks: {
        Row: {
          created_at: string
          created_by: string
          events: string[]
          headers: Json | null
          id: string
          is_active: boolean
          name: string
          retry_count: number
          secret_key: string | null
          timeout_seconds: number
          updated_at: string
          url: string
        }
        Insert: {
          created_at?: string
          created_by: string
          events?: string[]
          headers?: Json | null
          id?: string
          is_active?: boolean
          name: string
          retry_count?: number
          secret_key?: string | null
          timeout_seconds?: number
          updated_at?: string
          url: string
        }
        Update: {
          created_at?: string
          created_by?: string
          events?: string[]
          headers?: Json | null
          id?: string
          is_active?: boolean
          name?: string
          retry_count?: number
          secret_key?: string | null
          timeout_seconds?: number
          updated_at?: string
          url?: string
        }
        Relationships: []
      }
      widget_definitions: {
        Row: {
          category: string
          component_name: string
          created_at: string | null
          default_config: Json | null
          description: string | null
          icon: string
          id: string
          is_active: boolean | null
          name: string
          required_roles: Database["public"]["Enums"]["app_role"][] | null
          updated_at: string | null
        }
        Insert: {
          category?: string
          component_name: string
          created_at?: string | null
          default_config?: Json | null
          description?: string | null
          icon: string
          id?: string
          is_active?: boolean | null
          name: string
          required_roles?: Database["public"]["Enums"]["app_role"][] | null
          updated_at?: string | null
        }
        Update: {
          category?: string
          component_name?: string
          created_at?: string | null
          default_config?: Json | null
          description?: string | null
          icon?: string
          id?: string
          is_active?: boolean | null
          name?: string
          required_roles?: Database["public"]["Enums"]["app_role"][] | null
          updated_at?: string | null
        }
        Relationships: []
      }
      wiki_article_sources: {
        Row: {
          article_id: string
          created_at: string | null
          id: string
          original_answer: string | null
          original_question: string | null
          source_id: string | null
          source_type: string
          topic: string | null
          user_role: string | null
        }
        Insert: {
          article_id: string
          created_at?: string | null
          id?: string
          original_answer?: string | null
          original_question?: string | null
          source_id?: string | null
          source_type: string
          topic?: string | null
          user_role?: string | null
        }
        Update: {
          article_id?: string
          created_at?: string | null
          id?: string
          original_answer?: string | null
          original_question?: string | null
          source_id?: string | null
          source_type?: string
          topic?: string | null
          user_role?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "wiki_article_sources_article_id_fkey"
            columns: ["article_id"]
            isOneToOne: false
            referencedRelation: "wiki_articles"
            referencedColumns: ["id"]
          },
        ]
      }
      wiki_articles: {
        Row: {
          category: Database["public"]["Enums"]["wiki_category"]
          company_id: string | null
          content: string
          created_at: string | null
          created_by: string | null
          helpfulness_score: number | null
          id: string
          industry_tags: string[] | null
          last_updated_at: string | null
          source_data: Json | null
          source_type: string
          status: string | null
          tags: string[] | null
          title: string
          usage_count: number | null
          user_roles: string[] | null
        }
        Insert: {
          category?: Database["public"]["Enums"]["wiki_category"]
          company_id?: string | null
          content: string
          created_at?: string | null
          created_by?: string | null
          helpfulness_score?: number | null
          id?: string
          industry_tags?: string[] | null
          last_updated_at?: string | null
          source_data?: Json | null
          source_type?: string
          status?: string | null
          tags?: string[] | null
          title: string
          usage_count?: number | null
          user_roles?: string[] | null
        }
        Update: {
          category?: Database["public"]["Enums"]["wiki_category"]
          company_id?: string | null
          content?: string
          created_at?: string | null
          created_by?: string | null
          helpfulness_score?: number | null
          id?: string
          industry_tags?: string[] | null
          last_updated_at?: string | null
          source_data?: Json | null
          source_type?: string
          status?: string | null
          tags?: string[] | null
          title?: string
          usage_count?: number | null
          user_roles?: string[] | null
        }
        Relationships: [
          {
            foreignKeyName: "wiki_articles_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      wiki_usage_logs: {
        Row: {
          access_type: string
          article_id: string
          company_id: string | null
          created_at: string | null
          helpful_rating: number | null
          id: string
          search_query: string | null
          user_id: string
          user_role: string | null
        }
        Insert: {
          access_type: string
          article_id: string
          company_id?: string | null
          created_at?: string | null
          helpful_rating?: number | null
          id?: string
          search_query?: string | null
          user_id: string
          user_role?: string | null
        }
        Update: {
          access_type?: string
          article_id?: string
          company_id?: string | null
          created_at?: string | null
          helpful_rating?: number | null
          id?: string
          search_query?: string | null
          user_id?: string
          user_role?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "wiki_usage_logs_article_id_fkey"
            columns: ["article_id"]
            isOneToOne: false
            referencedRelation: "wiki_articles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "wiki_usage_logs_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      wiki_weekly_summaries: {
        Row: {
          company_id: string
          created_at: string | null
          id: string
          summary_data: Json
          trending_topics: string[] | null
          week_start_date: string
        }
        Insert: {
          company_id: string
          created_at?: string | null
          id?: string
          summary_data?: Json
          trending_topics?: string[] | null
          week_start_date: string
        }
        Update: {
          company_id?: string
          created_at?: string | null
          id?: string
          summary_data?: Json
          trending_topics?: string[] | null
          week_start_date?: string
        }
        Relationships: [
          {
            foreignKeyName: "wiki_weekly_summaries_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      work_schedules: {
        Row: {
          client_id: string | null
          created_at: string
          created_by: string
          employee_id: string
          end_date: string | null
          id: string
          is_active: boolean
          job_order_id: string | null
          notes: string | null
          schedule_name: string
          schedule_type: string
          start_date: string
          updated_at: string
        }
        Insert: {
          client_id?: string | null
          created_at?: string
          created_by: string
          employee_id: string
          end_date?: string | null
          id?: string
          is_active?: boolean
          job_order_id?: string | null
          notes?: string | null
          schedule_name: string
          schedule_type: string
          start_date: string
          updated_at?: string
        }
        Update: {
          client_id?: string | null
          created_at?: string
          created_by?: string
          employee_id?: string
          end_date?: string | null
          id?: string
          is_active?: boolean
          job_order_id?: string | null
          notes?: string | null
          schedule_name?: string
          schedule_type?: string
          start_date?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "work_schedules_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "work_schedules_job_order_id_fkey"
            columns: ["job_order_id"]
            isOneToOne: false
            referencedRelation: "job_orders"
            referencedColumns: ["id"]
          },
        ]
      }
      work_shifts: {
        Row: {
          break_duration_minutes: number | null
          client_id: string | null
          created_at: string
          created_by: string
          employee_id: string
          end_time: string
          hourly_rate: number | null
          id: string
          location_details: string | null
          notes: string | null
          position_title: string | null
          schedule_id: string | null
          shift_date: string
          shift_type: string
          start_time: string
          status: string
          updated_at: string
        }
        Insert: {
          break_duration_minutes?: number | null
          client_id?: string | null
          created_at?: string
          created_by: string
          employee_id: string
          end_time: string
          hourly_rate?: number | null
          id?: string
          location_details?: string | null
          notes?: string | null
          position_title?: string | null
          schedule_id?: string | null
          shift_date: string
          shift_type: string
          start_time: string
          status?: string
          updated_at?: string
        }
        Update: {
          break_duration_minutes?: number | null
          client_id?: string | null
          created_at?: string
          created_by?: string
          employee_id?: string
          end_time?: string
          hourly_rate?: number | null
          id?: string
          location_details?: string | null
          notes?: string | null
          position_title?: string | null
          schedule_id?: string | null
          shift_date?: string
          shift_type?: string
          start_time?: string
          status?: string
          updated_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "work_shifts_client_id_fkey"
            columns: ["client_id"]
            isOneToOne: false
            referencedRelation: "staffing_clients"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "work_shifts_schedule_id_fkey"
            columns: ["schedule_id"]
            isOneToOne: false
            referencedRelation: "work_schedules"
            referencedColumns: ["id"]
          },
        ]
      }
      worker_comp_codes: {
        Row: {
          base_rate: number
          category: string | null
          code: string
          created_at: string
          description: string
          effective_year: number
          hazard_level: string | null
          id: string
          is_active: boolean
          state_code: string | null
          updated_at: string
        }
        Insert: {
          base_rate?: number
          category?: string | null
          code: string
          created_at?: string
          description: string
          effective_year?: number
          hazard_level?: string | null
          id?: string
          is_active?: boolean
          state_code?: string | null
          updated_at?: string
        }
        Update: {
          base_rate?: number
          category?: string | null
          code?: string
          created_at?: string
          description?: string
          effective_year?: number
          hazard_level?: string | null
          id?: string
          is_active?: boolean
          state_code?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      workers_comp_codes: {
        Row: {
          code: string
          company_id: string | null
          created_at: string | null
          description: string | null
          id: string
          is_active: boolean | null
          rate: number | null
          updated_at: string | null
        }
        Insert: {
          code: string
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          rate?: number | null
          updated_at?: string | null
        }
        Update: {
          code?: string
          company_id?: string | null
          created_at?: string | null
          description?: string | null
          id?: string
          is_active?: boolean | null
          rate?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "workers_comp_codes_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
      workflow_steps: {
        Row: {
          action: string
          completed_at: string | null
          created_at: string | null
          error_message: string | null
          execution_id: string
          id: string
          params: Json | null
          retry_count: number | null
          started_at: string | null
          status: string | null
          step_number: number
          updated_at: string | null
        }
        Insert: {
          action: string
          completed_at?: string | null
          created_at?: string | null
          error_message?: string | null
          execution_id: string
          id?: string
          params?: Json | null
          retry_count?: number | null
          started_at?: string | null
          status?: string | null
          step_number: number
          updated_at?: string | null
        }
        Update: {
          action?: string
          completed_at?: string | null
          created_at?: string | null
          error_message?: string | null
          execution_id?: string
          id?: string
          params?: Json | null
          retry_count?: number | null
          started_at?: string | null
          status?: string | null
          step_number?: number
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "workflow_steps_execution_id_fkey"
            columns: ["execution_id"]
            isOneToOne: false
            referencedRelation: "automation_executions"
            referencedColumns: ["id"]
          },
        ]
      }
      wpv_plans: {
        Row: {
          ai_content_generated: boolean | null
          ai_generation_date: string | null
          company_id: string
          created_at: string
          file_name: string
          file_path: string
          file_size: number | null
          file_type: string | null
          id: string
          plan_content: string | null
          plan_name: string
          status: string
          updated_at: string
          upload_date: string
          uploaded_by: string | null
        }
        Insert: {
          ai_content_generated?: boolean | null
          ai_generation_date?: string | null
          company_id: string
          created_at?: string
          file_name: string
          file_path: string
          file_size?: number | null
          file_type?: string | null
          id?: string
          plan_content?: string | null
          plan_name: string
          status?: string
          updated_at?: string
          upload_date?: string
          uploaded_by?: string | null
        }
        Update: {
          ai_content_generated?: boolean | null
          ai_generation_date?: string | null
          company_id?: string
          created_at?: string
          file_name?: string
          file_path?: string
          file_size?: number | null
          file_type?: string | null
          id?: string
          plan_content?: string | null
          plan_name?: string
          status?: string
          updated_at?: string
          upload_date?: string
          uploaded_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "wpv_plans_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "company_settings"
            referencedColumns: ["id"]
          },
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      admin_reset_user_password: {
        Args: { target_user_id: string; new_password: string }
        Returns: Json
      }
      assign_tags_to_entity: {
        Args: {
          p_entity_type: string
          p_entity_id: string
          p_tag_ids: string[]
        }
        Returns: number
      }
      cache_metric_data: {
        Args: {
          p_cache_key: string
          p_metric_data: Json
          p_ttl_seconds?: number
          p_company_id?: string
        }
        Returns: undefined
      }
      calculate_account_balances_enhanced: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
        }[]
      }
      calculate_account_balances_fast: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
        }[]
      }
      calculate_account_balances_from_gl: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
        }[]
      }
      calculate_account_balances_pattern_match: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
        }[]
      }
      calculate_account_balances_precise: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
        }[]
      }
      calculate_account_balances_quick: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
        }[]
      }
      calculate_account_balances_simple: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
        }[]
      }
      calculate_account_balances_smart: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
        }[]
      }
      calculate_account_balances_with_mappings: {
        Args: { p_company_id: string }
        Returns: {
          accounts_updated: number
          total_entries: number
          mapped_entries: number
        }[]
      }
      calculate_conversion_rate: {
        Args: { start_date: string; end_date: string }
        Returns: number
      }
      calculate_halo_risk_score: {
        Args: { p_company_id: string }
        Returns: number
      }
      calculate_next_generation_date: {
        Args: {
          frequency: string
          schedule_time: string
          day_of_week?: number
          day_of_month?: number
        }
        Returns: string
      }
      calculate_next_pay_date: {
        Args: { p_frequency: string; p_last_pay_date?: string }
        Returns: string
      }
      calculate_payroll_for_period: {
        Args: { p_payroll_period_id: string }
        Returns: {
          employee_id: string
          total_classes: number
          total_class_pay: number
          total_hours: number
          overtime_hours: number
          blended_rate: number
          overtime_pay: number
          gross_pay: number
        }[]
      }
      calculate_spin_completion_score: {
        Args: {
          situation: string
          problem: string
          implication: string
          need_payoff: string
        }
        Returns: number
      }
      check_duplicate_company_client: {
        Args: { p_company_name: string; p_email?: string }
        Returns: Json
      }
      check_integration_connection: {
        Args: { app_name: string; client_id: string }
        Returns: boolean
      }
      check_rate_limit: {
        Args: {
          p_integration_id: string
          p_limit_type: string
          p_window_minutes?: number
          p_max_requests?: number
        }
        Returns: boolean
      }
      check_sla_violations: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
      cleanup_expired_codes: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
      cleanup_expired_integration_sessions: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
      cleanup_expired_sessions: {
        Args: Record<PropertyKey, never>
        Returns: number
      }
      confirm_test_user: {
        Args: { user_email: string }
        Returns: undefined
      }
      count_all_companies: {
        Args: Record<PropertyKey, never>
        Returns: number
      }
      create_employee_registration_token: {
        Args: { p_employee_id: string; p_expires_hours?: number }
        Returns: string
      }
      create_pay_type_override: {
        Args: {
          p_client_id: string
          p_global_pay_type_id: string
          p_overrides?: Json
        }
        Returns: string
      }
      create_super_admin_user: {
        Args: { user_email: string; user_password: string }
        Returns: Json
      }
      create_test_account: {
        Args: {
          user_email: string
          user_password: string
          user_role: Database["public"]["Enums"]["app_role"]
          company_name?: string
        }
        Returns: Json
      }
      create_test_user_role: {
        Args: {
          user_email: string
          user_role: Database["public"]["Enums"]["app_role"]
          company_name?: string
        }
        Returns: undefined
      }
      delete_user_completely: {
        Args: { target_user_id: string }
        Returns: Json
      }
      disconnect_integration: {
        Args: { app_name: string; client_id: string }
        Returns: boolean
      }
      end_date_current_version: {
        Args: { p_table_name: string; p_record_id: string; p_end_date?: string }
        Returns: boolean
      }
      ensure_client_notification_settings: {
        Args: { p_company_id: string }
        Returns: undefined
      }
      evaluate_disbursement_routing: {
        Args: {
          p_company_id: string
          p_recipient_type: string
          p_amount: number
          p_recipient_data?: Json
        }
        Returns: {
          routing_method: string
          fallback_method: string
          cutoff_time: string
        }[]
      }
      extract_domain_from_email: {
        Args: { email_address: string }
        Returns: string
      }
      find_potential_duplicate_companies: {
        Args:
          | {
              p_company_name: string
              p_ein?: string
              p_domain?: string
              p_similarity_threshold?: number
            }
          | {
              p_company_name: string
              p_website?: string
              p_similarity_threshold?: number
            }
        Returns: {
          company_id: string
          company_name: string
          website: string
          match_type: string
          similarity_score: number
          confidence: string
        }[]
      }
      find_potential_duplicates: {
        Args: { input_name: string; threshold?: number }
        Returns: {
          company_id: string
          company_name: string
          similarity_score: number
        }[]
      }
      generate_ai_insight: {
        Args: {
          p_company_id: string
          p_insight_type: string
          p_title: string
          p_description: string
          p_confidence_score: number
          p_impact_level: string
          p_category: string
          p_recommended_actions?: string[]
          p_predicted_outcome?: string
        }
        Returns: string
      }
      generate_article_slug: {
        Args: { title: string }
        Returns: string
      }
      generate_auto_tasks: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
      generate_batch_name: {
        Args: { p_company_id: string; p_pay_date: string }
        Returns: string
      }
      generate_case_share_token: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_employee_qr_code: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_follow_up_tasks: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
      generate_halobill_invoice_number: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_halobroker_statement_number: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_invitation_token: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_journal_number: {
        Args: { p_company_id: string }
        Returns: string
      }
      generate_migration_report: {
        Args: Record<PropertyKey, never>
        Returns: {
          metric_name: string
          metric_value: string
          details: string
        }[]
      }
      generate_nacha_file: {
        Args: { batch_id: string }
        Returns: string
      }
      generate_onboarding_code: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_pay_stub_number: {
        Args: { p_company_id: string; p_pay_date: string }
        Returns: string
      }
      generate_registration_token: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_share_token: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_six_digit_code: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_staffing_invoice_number: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_tax_calendar_entries: {
        Args: { p_company_id: string; p_tax_year: number }
        Returns: undefined
      }
      generate_vault_share_token: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_vaultpay_invoice_number: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      generate_wage_compliance_alert: {
        Args: {
          p_company_id: string
          p_alert_type: string
          p_severity: string
          p_title: string
          p_description: string
          p_violation_details?: Json
          p_affected_employees?: string[]
          p_jurisdiction?: string
          p_recommended_actions?: string[]
        }
        Returns: string
      }
      get_account_hierarchy: {
        Args: { p_company_id: string }
        Returns: {
          id: string
          account_number: string
          full_name: string
          account_type: string
          detail_type: string
          description: string
          initial_balance: number
          current_balance: number
          is_active: boolean
          parent_account_id: string
          sort_order: number
          level: number
          path: string[]
        }[]
      }
      get_active_deductions: {
        Args: { p_company_id: string; p_effective_date?: string }
        Returns: {
          id: string
          name: string
          code: string
          is_inherited: boolean
          parent_id: string
        }[]
      }
      get_active_pay_types: {
        Args: { p_company_id: string; p_effective_date?: string }
        Returns: {
          id: string
          name: string
          code: string
          is_inherited: boolean
          parent_id: string
        }[]
      }
      get_brand_email_domain: {
        Args:
          | {
              p_brand_identity: Database["public"]["Enums"]["brand_identity"]
              p_context?: string
            }
          | { p_brand_identity: string; p_context?: string }
        Returns: string
      }
      get_cases_needing_escalation: {
        Args: Record<PropertyKey, never>
        Returns: {
          case_id: string
          employee_name: string
          issue_category: string
          client_name: string
          hours_since_activity: number
        }[]
      }
      get_cases_needing_followup: {
        Args: Record<PropertyKey, never>
        Returns: {
          case_id: string
          phone_number: string
          employee_name: string
          issue_category: string
          hours_since_activity: number
        }[]
      }
      get_client_module_settings: {
        Args: {
          p_client_id: string
          p_module_name: string
          p_default_settings?: Json
        }
        Returns: Json
      }
      get_client_module_summary: {
        Args: { client_uuid: string }
        Returns: {
          total_modules: number
          enabled_modules: number
          platform_modules: number
          training_modules: number
          setup_pending: number
        }[]
      }
      get_company_latest_assessment: {
        Args: { p_company_id: string }
        Returns: {
          id: string
          risk_score: number
          risk_level: string
          input_method: string
          assessment_date: string
          status: string
          created_at: string
        }[]
      }
      get_connected_integrations: {
        Args: { client_id: string }
        Returns: Json
      }
      get_crm_metrics: {
        Args: Record<PropertyKey, never>
        Returns: {
          total_leads: number
          total_deals: number
          total_activities: number
          conversion_rate: number
        }[]
      }
      get_current_employee_profile: {
        Args: { p_employee_id: string; p_effective_date?: string }
        Returns: {
          base_rate: number
          created_at: string
          created_by: string | null
          deduction_ids: string[] | null
          default_location_id: string | null
          effective_date: string
          employee_id: string
          end_date: string | null
          id: string
          overtime_rate: number | null
          pay_type: string
          status: string
          tax_config: Json
          updated_at: string
          version_id: string
        }
      }
      get_current_tax_table: {
        Args: {
          p_jurisdiction: string
          p_tax_type: string
          p_filing_status?: string
          p_effective_date?: string
        }
        Returns: {
          created_at: string
          created_by: string | null
          effective_date: string
          end_date: string | null
          filing_status: string | null
          flat_rate: number | null
          id: string
          jurisdiction: string
          jurisdiction_type: string
          rate_type: string
          tax_brackets: Json
          tax_type: string
          tax_year: number
          updated_at: string
          version_id: string
          wage_base: number | null
        }
      }
      get_current_user_role: {
        Args: Record<PropertyKey, never>
        Returns: Database["public"]["Enums"]["app_role"]
      }
      get_distinct_roles: {
        Args: Record<PropertyKey, never>
        Returns: {
          role: string
        }[]
      }
      get_document_tags: {
        Args: { doc_id: string }
        Returns: string[]
      }
      get_email_performance: {
        Args: { start_date: string; end_date: string }
        Returns: {
          total_campaigns: number
          total_emails_sent: number
          total_opened: number
          total_clicked: number
          total_bounced: number
          open_rate: number
          click_rate: number
          bounce_rate: number
        }[]
      }
      get_employee_id_from_user: {
        Args: { user_uuid: string }
        Returns: string
      }
      get_entity_tags: {
        Args: { p_entity_type: string; p_entity_id: string }
        Returns: {
          tag_id: string
          tag_name: string
          tag_color: string
          tag_type: string
          tagged_at: string
        }[]
      }
      get_enum_values: {
        Args: { enum_name: string }
        Returns: string[]
      }
      get_integration_status: {
        Args: { app_name: string; client_id: string }
        Returns: Json
      }
      get_lms_credit_summary: {
        Args: { p_company_id: string }
        Returns: {
          training_type: string
          total_issued: number
          total_used: number
          total_remaining: number
          last_updated: string
        }[]
      }
      get_onboarding_progress: {
        Args: { onboarding_id: string }
        Returns: number
      }
      get_pay_group_employee_count: {
        Args: { p_pay_group_id: string }
        Returns: number
      }
      get_pay_group_employee_count_v2: {
        Args: { p_pay_group_id: string }
        Returns: number
      }
      get_pipeline_metrics: {
        Args: { start_date: string; end_date: string }
        Returns: {
          stage_name: string
          deal_count: number
          total_value: number
          avg_deal_size: number
          win_rate: number
        }[]
      }
      get_sample_companies: {
        Args: Record<PropertyKey, never>
        Returns: {
          id: string
          company_name: string
          subscription_status: string
          created_at: string
        }[]
      }
      get_timecard_entries: {
        Args: { p_employee_id: string; p_pay_period_id: string }
        Returns: {
          id: string
          employee_id: string
          pay_period_id: string
          date_worked: string
          regular_hours: number
          overtime_hours: number
          double_time_hours: number
          sick_hours: number
          vacation_hours: number
          holiday_hours: number
          notes: string
          created_at: string
          updated_at: string
        }[]
      }
      get_twilio_credentials: {
        Args: { p_client_id: string }
        Returns: {
          account_sid: string
          auth_token: string
          messaging_service_sid: string
          phone_number: string
        }[]
      }
      get_unmatched_gl_entries: {
        Args: { p_company_id: string }
        Returns: {
          account_name: string
          split_account: string
          name: string
          entry_count: number
          total_amount: number
        }[]
      }
      get_user_company_id: {
        Args: { _user_id: string }
        Returns: string
      }
      get_user_halo_clients: {
        Args: { _user_id: string }
        Returns: {
          client_id: string
          role: Database["public"]["Enums"]["halo_role"]
          is_internal: boolean
        }[]
      }
      get_user_permissions: {
        Args: { user_id: string }
        Returns: {
          permission_name: string
          description: string
          resource: string
          action: string
        }[]
      }
      get_user_territory: {
        Args: { _user_id: string }
        Returns: string
      }
      get_vaultpay_ar_aging: {
        Args: { p_company_id?: string }
        Returns: {
          company_id: string
          company_name: string
          current_amount: number
          days_30_amount: number
          days_60_amount: number
          days_90_plus_amount: number
          total_amount: number
        }[]
      }
      has_acknowledged_current_terms: {
        Args: {
          _user_id: string
          _terms_version?: string
          _privacy_version?: string
        }
        Returns: boolean
      }
      has_active_paying_clients: {
        Args: { company_id: string }
        Returns: boolean
      }
      has_company_role: {
        Args: {
          _user_id: string
          _role: Database["public"]["Enums"]["app_role"]
          _company_id: string
        }
        Returns: boolean
      }
      has_crm_access: {
        Args: { _user_id: string; _company_id: string }
        Returns: boolean
      }
      has_crm_role: {
        Args: {
          _user_id: string
          _role: Database["public"]["Enums"]["app_role"]
        }
        Returns: boolean
      }
      has_halo_client_access: {
        Args: { _user_id: string; _client_id: string }
        Returns: boolean
      }
      has_halo_permission: {
        Args: {
          _user_id: string
          _module: Database["public"]["Enums"]["halo_module"]
          _action: Database["public"]["Enums"]["permission_action"]
          _client_id?: string
        }
        Returns: boolean
      }
      has_halodata_permission: {
        Args: {
          _user_id: string
          _permission_type: string
          _entity_id?: string
        }
        Returns: boolean
      }
      has_permission: {
        Args: { _user_id: string; _permission_name: string }
        Returns: boolean
      }
      has_role: {
        Args: {
          _user_id: string
          _role: Database["public"]["Enums"]["app_role"]
        }
        Returns: boolean
      }
      has_staffing_role: {
        Args: {
          _user_id: string
          _role: Database["public"]["Enums"]["staffing_role"]
        }
        Returns: boolean
      }
      increment_share_view_count: {
        Args: { share_token: string }
        Returns: undefined
      }
      is_easeworks_user: {
        Args: { _user_id: string }
        Returns: boolean
      }
      levenshtein_distance: {
        Args: { s1: string; s2: string }
        Returns: number
      }
      log_admin_action: {
        Args: {
          p_user_id: string
          p_company_id: string
          p_action_type: string
          p_resource_type: string
          p_resource_id: string
          p_action_details?: Json
          p_old_values?: Json
          p_new_values?: Json
        }
        Returns: string
      }
      log_ai_assistant_interaction: {
        Args: {
          conversation_id: string
          training_module_id: string
          module_name: string
          topic: string
          question: string
          response: string
          user_role?: string
          current_section?: string
        }
        Returns: undefined
      }
      log_audit_event: {
        Args: {
          p_user_id: string
          p_action_type: string
          p_resource_type: string
          p_company_id?: string
          p_resource_id?: string
          p_old_values?: Json
          p_new_values?: Json
          p_ip_address?: string
          p_user_agent?: string
          p_session_id?: string
          p_status?: string
          p_details?: string
        }
        Returns: string
      }
      log_batch_action: {
        Args: {
          p_batch_id: string
          p_action_type: string
          p_action_details?: Json
          p_ip_address?: unknown
          p_user_agent?: string
        }
        Returns: string
      }
      log_company_creation: {
        Args: {
          p_company_id: string
          p_created_by: string
          p_ip_address: string
          p_user_agent: string
          p_normalized_name: string
          p_potential_duplicates?: Json
          p_duplicate_override?: boolean
          p_metadata?: Json
        }
        Returns: string
      }
      log_halo_audit: {
        Args: {
          _user_id: string
          _client_id: string
          _module: Database["public"]["Enums"]["halo_module"]
          _action: Database["public"]["Enums"]["permission_action"]
          _resource_type?: string
          _resource_id?: string
          _old_values?: Json
          _new_values?: Json
          _override_used?: boolean
          _approval_request_id?: string
        }
        Returns: string
      }
      log_invitation_action: {
        Args: {
          p_invitation_id: string
          p_action_type: string
          p_performed_by?: string
          p_metadata?: Json
        }
        Returns: string
      }
      log_pay_stub_access: {
        Args: {
          p_pay_stub_id: string
          p_access_type: string
          p_ip_address?: unknown
          p_user_agent?: string
        }
        Returns: string
      }
      log_time_tracking_action: {
        Args: {
          p_employee_id: string
          p_action_type: string
          p_performed_by_user_id: string
          p_performed_by_role: string
          p_previous_value?: Json
          p_new_value?: Json
          p_source?: string
          p_device_id?: string
          p_ip_address?: unknown
          p_notes?: string
          p_company_id?: string
        }
        Returns: string
      }
      log_vault_action: {
        Args:
          | { p_file_id: string; p_action: string; p_details?: Json }
          | {
              p_file_id: string
              p_action: string
              p_details?: Json
              p_ip_address?: string
              p_user_agent?: string
            }
        Returns: string
      }
      migrate_company_to_client: {
        Args: {
          p_company_id: string
          p_source?: string
          p_deal_id?: string
          p_converted_by?: string
        }
        Returns: string
      }
      migrate_hubspot_companies: {
        Args: Record<PropertyKey, never>
        Returns: {
          companies_created: number
          companies_skipped: number
          total_unique_companies: number
        }[]
      }
      migrate_hubspot_contacts: {
        Args: Record<PropertyKey, never>
        Returns: {
          contacts_created: number
          contacts_linked: number
          contacts_orphaned: number
          total_leads: number
        }[]
      }
      normalize_company_name: {
        Args: { company_name: string }
        Returns: string
      }
      process_automatic_renewals: {
        Args: Record<PropertyKey, never>
        Returns: undefined
      }
      process_webhook_queue: {
        Args: Record<PropertyKey, never>
        Returns: number
      }
      provision_sso_user: {
        Args: {
          p_email: string
          p_sso_config_id: string
          p_external_user_id: string
          p_first_name?: string
          p_last_name?: string
          p_external_attributes?: Json
        }
        Returns: string
      }
      reset_client_module_settings: {
        Args: {
          p_client_id: string
          p_module_name: string
          p_default_settings?: Json
        }
        Returns: undefined
      }
      resolve_wage_compliance_alert: {
        Args: { p_alert_id: string; p_resolution_notes?: string }
        Returns: boolean
      }
      search_companies: {
        Args: {
          search_term: string
          status_filter?: string
          limit_count?: number
        }
        Returns: {
          id: string
          company_name: string
          company_logo_url: string
          primary_color: string
          certificate_template: string
          email_notifications: boolean
          max_employees: number
          subscription_status: string
          created_at: string
          updated_at: string
        }[]
      }
      search_tags: {
        Args: {
          p_search_term?: string
          p_tag_type?: string
          p_scope?: string
          p_company_id?: string
        }
        Returns: {
          id: string
          tag_name: string
          tag_color: string
          tag_type: string
          scope: string
          usage_count: number
        }[]
      }
      similarity_score: {
        Args: { s1: string; s2: string }
        Returns: number
      }
      sync_missing_user_profiles: {
        Args: Record<PropertyKey, never>
        Returns: {
          synced_count: number
          error_count: number
          details: string
        }[]
      }
      update_batch_totals: {
        Args: { p_batch_id: string }
        Returns: undefined
      }
      update_task_status: {
        Args: { task_id: string; new_status: string; completion_notes?: string }
        Returns: boolean
      }
      update_timecard_entry: {
        Args: { p_entry_id: string; p_updates: Json }
        Returns: string
      }
      use_share_token: {
        Args: { token_value: string; user_ip?: unknown }
        Returns: {
          valid: boolean
          document_type: string
          document_id: string
          error_message: string
        }[]
      }
      user_has_permission: {
        Args: { user_id: string; permission_name: string }
        Returns: boolean
      }
      user_owns_employee: {
        Args: { _user_id: string; _employee_id: string }
        Returns: boolean
      }
      validate_account_number: {
        Args: { account_num: string }
        Returns: boolean
      }
      validate_migration_integrity: {
        Args: Record<PropertyKey, never>
        Returns: {
          check_name: string
          status: string
          details: string
        }[]
      }
      validate_payroll_readiness: {
        Args: { p_company_id: string }
        Returns: {
          is_ready: boolean
          issues: string[]
          employee_count: number
          missing_division_count: number
          missing_job_title_count: number
          missing_workers_comp_count: number
        }[]
      }
      validate_routing_number: {
        Args: { routing_number: string }
        Returns: boolean
      }
    }
    Enums: {
      anomaly_severity: "low" | "medium" | "high" | "critical"
      anomaly_type:
        | "overtime_spike"
        | "cost_variance"
        | "misclassification"
        | "tax_anomaly"
        | "pattern_deviation"
      app_role:
        | "super_admin"
        | "company_admin"
        | "learner"
        | "internal_staff"
        | "sales_rep"
        | "admin"
        | "moderator"
        | "client_admin"
      application_stage:
        | "applied"
        | "screening"
        | "phone_screen"
        | "interview"
        | "reference_check"
        | "background_check"
        | "offer"
        | "hired"
        | "rejected"
      audit_action: "create" | "update" | "delete" | "assign" | "unassign"
      audit_entity:
        | "carrier"
        | "plan_type"
        | "plan_template"
        | "eligibility_rule"
        | "deduction_code"
        | "document"
        | "plan_assignment"
      brand_identity: "easeworks" | "easelearn" | "dual"
      candidate_status:
        | "submitted"
        | "screening"
        | "interviewed"
        | "hired"
        | "rejected"
      carrier_type:
        | "medical"
        | "dental"
        | "vision"
        | "life"
        | "disability"
        | "hsa"
        | "fsa"
        | "other"
      case_source:
        | "email"
        | "manual"
        | "phone"
        | "internal"
        | "web_form"
        | "sms"
      client_status: "pending_approval" | "approved" | "rejected" | "suspended"
      company_status: "lead" | "prospect" | "client" | "inactive"
      company_type: "HRO" | "Staffing" | "PEO" | "LMS" | "Consulting" | "Other"
      compensation_type: "hourly" | "salary"
      development_plan_status:
        | "draft"
        | "active"
        | "completed"
        | "extended"
        | "cancelled"
      document_type:
        | "w9"
        | "ach"
        | "business_license"
        | "credit_app"
        | "ex_mod"
        | "job_site_inspection"
        | "claim_report"
      employment_type: "full_time" | "part_time" | "contract" | "temporary"
      evaluation_type:
        | "self_evaluation"
        | "manager_evaluation"
        | "peer_review"
        | "360_feedback"
        | "probationary_review"
        | "annual_review"
        | "semi_annual_review"
        | "quarterly_review"
        | "one_on_one"
        | "custom"
      filing_payment_method: "eftps" | "state_portal" | "check" | "ach" | "wire"
      filing_status:
        | "draft"
        | "pending"
        | "submitted"
        | "accepted"
        | "rejected"
        | "amended"
      flsa_classification: "exempt" | "non_exempt"
      forecast_type:
        | "labor_cost"
        | "overtime"
        | "tax_burden"
        | "department_cost"
        | "project_cost"
        | "role_cost"
      form_type:
        | "941"
        | "w2"
        | "de9"
        | "1099"
        | "suta"
        | "futa"
        | "state_quarterly"
        | "local_tax"
      halo_module:
        | "halocore"
        | "halocalc"
        | "halocommand"
        | "haloassist"
        | "haloself"
        | "halofiling"
        | "halonet"
        | "halovault"
        | "halorisk"
        | "halovision"
        | "propgen"
        | "haloflow"
        | "HALOnet"
        | "HALOfiling"
        | "HALOvault"
      halo_role:
        | "system_admin"
        | "payroll_ops"
        | "tax_team"
        | "client_admin"
        | "client_finance"
        | "client_hr"
        | "broker_advisor"
        | "employee"
        | "partner_developer"
      haloassist_action_type:
        | "run_payroll"
        | "file_form"
        | "simulate_change"
        | "fill_form"
        | "generate_report"
        | "schedule_task"
        | "send_notification"
        | "update_records"
      haloassist_conversation_type:
        | "client_chat"
        | "employee_chat"
        | "internal_ops"
        | "onboarding_assist"
        | "form_filling"
        | "troubleshooting"
      haloassist_feedback_type:
        | "helpful"
        | "not_helpful"
        | "incorrect"
        | "needs_improvement"
        | "perfect"
      haloassist_input_mode:
        | "text_chat"
        | "voice_input"
        | "form_driven"
        | "multimodal"
      haloassist_integration_type:
        | "halocalc"
        | "halofiling"
        | "halonet"
        | "halovision"
        | "halocommand"
        | "external_api"
      haloassist_message_type:
        | "user_message"
        | "ai_response"
        | "system_message"
        | "action_trigger"
        | "form_suggestion"
        | "error_message"
      haloassist_user_type:
        | "client"
        | "employee"
        | "internal_ops"
        | "admin"
        | "guest"
      insight_priority: "low" | "medium" | "high" | "urgent"
      job_board_type: "staffing" | "internal_hr" | "both"
      job_order_status:
        | "open"
        | "in_progress"
        | "filled"
        | "cancelled"
        | "on_hold"
      job_visibility_type: "public" | "internal" | "invite_only"
      language_option: "EN" | "ES" | "BOTH"
      liability_type:
        | "federal_income"
        | "social_security"
        | "medicare"
        | "futa"
        | "suta"
        | "state_income"
        | "local"
      measurement_method: "monthly" | "lookback"
      navigation_permission: "customize_navigation"
      onboarding_document_type:
        | "w4"
        | "i9"
        | "state_tax"
        | "handbook"
        | "direct_deposit"
        | "id_document"
        | "custom"
      onboarding_role: "client_admin" | "onboarding_manager"
      onboarding_status:
        | "pending"
        | "in_progress"
        | "completed"
        | "approved"
        | "rejected"
      opportunity_stage:
        | "lead"
        | "prospect"
        | "assessment"
        | "proposal_sent"
        | "verbal"
        | "won"
        | "lost"
      pay_category:
        | "earnings"
        | "reimbursement"
        | "fringe_benefit"
        | "deduction"
        | "other"
      peo_setup_type: "peo" | "aso" | "lms" | "payroll_only"
      permission_action:
        | "read"
        | "write"
        | "delete"
        | "admin"
        | "approve"
        | "override"
        | "api_access"
      pop_status: "pending" | "active" | "suspended" | "terminated"
      pop_tier: "mention" | "growth" | "senior_pop"
      probation_outcome: "pass" | "extend" | "fail" | "pending"
      product_line: "HRO" | "LMS" | "Staffing" | "Consulting" | "PEO" | "Other"
      propgen_billing_type:
        | "flat_fee_onetime"
        | "flat_fee_recurring"
        | "per_employee"
        | "pepm"
        | "percentage_payroll"
      proposal_status: "draft" | "under_review" | "sent" | "signed" | "rejected"
      quiz_attempt_status: "in_progress" | "completed" | "passed" | "failed"
      quiz_question_type:
        | "multiple_choice_single"
        | "multiple_choice_multiple"
        | "true_false"
        | "fill_in_blank"
        | "drag_drop"
        | "scenario_based"
      rating_method: "composite" | "age_banded" | "custom"
      review_status:
        | "draft"
        | "active"
        | "pending_review"
        | "completed"
        | "overdue"
        | "cancelled"
      sales_lifecycle_stage:
        | "prospect"
        | "contacted"
        | "engaged"
        | "proposal_sent"
        | "in_onboarding"
        | "active_paying_client"
        | "dormant_churned"
        | "lead_new"
        | "prospect_qualified"
        | "client_active"
        | "client_inactive"
        | "disqualified_no_fit"
      section_status:
        | "not_started"
        | "in_progress"
        | "completed"
        | "locked"
        | "requires_approval"
      simulation_status:
        | "draft"
        | "running"
        | "completed"
        | "failed"
        | "cancelled"
      staffing_role: "pop" | "recruiter" | "admin"
      task_priority: "low" | "medium" | "high" | "urgent"
      task_status: "to_do" | "in_progress" | "completed" | "cancelled"
      time_collection_method:
        | "web"
        | "mobile"
        | "swipe_clock"
        | "manual"
        | "biometric"
      training_type:
        | "Harassment"
        | "SB553"
        | "AML"
        | "Safety"
        | "Cybersecurity"
        | "Manager_Training"
        | "Compliance"
      user_language: "en" | "es"
      vault_access_level: "read" | "write" | "admin" | "audit"
      vault_document_type:
        | "pay_stub"
        | "w2"
        | "tax_form"
        | "receipt"
        | "audit_report"
        | "compliance_doc"
        | "payroll_register"
      vault_retention_status:
        | "active"
        | "archived"
        | "pending_destruction"
        | "destroyed"
      visualization_type:
        | "line_chart"
        | "bar_chart"
        | "heat_map"
        | "scatter_plot"
        | "distribution"
        | "trend_analysis"
      wiki_category:
        | "compliance"
        | "conflict"
        | "documentation"
        | "safety"
        | "leadership"
        | "general"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

type DatabaseWithoutInternals = Omit<Database, "__InternalSupabase">

type DefaultSchema = DatabaseWithoutInternals[Extract<keyof Database, "public">]

export type Tables<
  DefaultSchemaTableNameOrOptions extends
    | keyof (DefaultSchema["Tables"] & DefaultSchema["Views"])
    | { schema: keyof DatabaseWithoutInternals },
  TableName extends DefaultSchemaTableNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"] &
        DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Views"])
    : never = never,
> = DefaultSchemaTableNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"] &
      DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R
    }
    ? R
    : never
  : DefaultSchemaTableNameOrOptions extends keyof (DefaultSchema["Tables"] &
        DefaultSchema["Views"])
    ? (DefaultSchema["Tables"] &
        DefaultSchema["Views"])[DefaultSchemaTableNameOrOptions] extends {
        Row: infer R
      }
      ? R
      : never
    : never

export type TablesInsert<
  DefaultSchemaTableNameOrOptions extends
    | keyof DefaultSchema["Tables"]
    | { schema: keyof DatabaseWithoutInternals },
  TableName extends DefaultSchemaTableNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = DefaultSchemaTableNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Insert: infer I
    }
    ? I
    : never
  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema["Tables"]
    ? DefaultSchema["Tables"][DefaultSchemaTableNameOrOptions] extends {
        Insert: infer I
      }
      ? I
      : never
    : never

export type TablesUpdate<
  DefaultSchemaTableNameOrOptions extends
    | keyof DefaultSchema["Tables"]
    | { schema: keyof DatabaseWithoutInternals },
  TableName extends DefaultSchemaTableNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = DefaultSchemaTableNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Update: infer U
    }
    ? U
    : never
  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema["Tables"]
    ? DefaultSchema["Tables"][DefaultSchemaTableNameOrOptions] extends {
        Update: infer U
      }
      ? U
      : never
    : never

export type Enums<
  DefaultSchemaEnumNameOrOptions extends
    | keyof DefaultSchema["Enums"]
    | { schema: keyof DatabaseWithoutInternals },
  EnumName extends DefaultSchemaEnumNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions["schema"]]["Enums"]
    : never = never,
> = DefaultSchemaEnumNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : DefaultSchemaEnumNameOrOptions extends keyof DefaultSchema["Enums"]
    ? DefaultSchema["Enums"][DefaultSchemaEnumNameOrOptions]
    : never

export type CompositeTypes<
  PublicCompositeTypeNameOrOptions extends
    | keyof DefaultSchema["CompositeTypes"]
    | { schema: keyof DatabaseWithoutInternals },
  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {
    schema: keyof DatabaseWithoutInternals
  }
    ? keyof DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"]
    : never = never,
> = PublicCompositeTypeNameOrOptions extends {
  schema: keyof DatabaseWithoutInternals
}
  ? DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"][CompositeTypeName]
  : PublicCompositeTypeNameOrOptions extends keyof DefaultSchema["CompositeTypes"]
    ? DefaultSchema["CompositeTypes"][PublicCompositeTypeNameOrOptions]
    : never

export const Constants = {
  public: {
    Enums: {
      anomaly_severity: ["low", "medium", "high", "critical"],
      anomaly_type: [
        "overtime_spike",
        "cost_variance",
        "misclassification",
        "tax_anomaly",
        "pattern_deviation",
      ],
      app_role: [
        "super_admin",
        "company_admin",
        "learner",
        "internal_staff",
        "sales_rep",
        "admin",
        "moderator",
        "client_admin",
      ],
      application_stage: [
        "applied",
        "screening",
        "phone_screen",
        "interview",
        "reference_check",
        "background_check",
        "offer",
        "hired",
        "rejected",
      ],
      audit_action: ["create", "update", "delete", "assign", "unassign"],
      audit_entity: [
        "carrier",
        "plan_type",
        "plan_template",
        "eligibility_rule",
        "deduction_code",
        "document",
        "plan_assignment",
      ],
      brand_identity: ["easeworks", "easelearn", "dual"],
      candidate_status: [
        "submitted",
        "screening",
        "interviewed",
        "hired",
        "rejected",
      ],
      carrier_type: [
        "medical",
        "dental",
        "vision",
        "life",
        "disability",
        "hsa",
        "fsa",
        "other",
      ],
      case_source: ["email", "manual", "phone", "internal", "web_form", "sms"],
      client_status: ["pending_approval", "approved", "rejected", "suspended"],
      company_status: ["lead", "prospect", "client", "inactive"],
      company_type: ["HRO", "Staffing", "PEO", "LMS", "Consulting", "Other"],
      compensation_type: ["hourly", "salary"],
      development_plan_status: [
        "draft",
        "active",
        "completed",
        "extended",
        "cancelled",
      ],
      document_type: [
        "w9",
        "ach",
        "business_license",
        "credit_app",
        "ex_mod",
        "job_site_inspection",
        "claim_report",
      ],
      employment_type: ["full_time", "part_time", "contract", "temporary"],
      evaluation_type: [
        "self_evaluation",
        "manager_evaluation",
        "peer_review",
        "360_feedback",
        "probationary_review",
        "annual_review",
        "semi_annual_review",
        "quarterly_review",
        "one_on_one",
        "custom",
      ],
      filing_payment_method: ["eftps", "state_portal", "check", "ach", "wire"],
      filing_status: [
        "draft",
        "pending",
        "submitted",
        "accepted",
        "rejected",
        "amended",
      ],
      flsa_classification: ["exempt", "non_exempt"],
      forecast_type: [
        "labor_cost",
        "overtime",
        "tax_burden",
        "department_cost",
        "project_cost",
        "role_cost",
      ],
      form_type: [
        "941",
        "w2",
        "de9",
        "1099",
        "suta",
        "futa",
        "state_quarterly",
        "local_tax",
      ],
      halo_module: [
        "halocore",
        "halocalc",
        "halocommand",
        "haloassist",
        "haloself",
        "halofiling",
        "halonet",
        "halovault",
        "halorisk",
        "halovision",
        "propgen",
        "haloflow",
        "HALOnet",
        "HALOfiling",
        "HALOvault",
      ],
      halo_role: [
        "system_admin",
        "payroll_ops",
        "tax_team",
        "client_admin",
        "client_finance",
        "client_hr",
        "broker_advisor",
        "employee",
        "partner_developer",
      ],
      haloassist_action_type: [
        "run_payroll",
        "file_form",
        "simulate_change",
        "fill_form",
        "generate_report",
        "schedule_task",
        "send_notification",
        "update_records",
      ],
      haloassist_conversation_type: [
        "client_chat",
        "employee_chat",
        "internal_ops",
        "onboarding_assist",
        "form_filling",
        "troubleshooting",
      ],
      haloassist_feedback_type: [
        "helpful",
        "not_helpful",
        "incorrect",
        "needs_improvement",
        "perfect",
      ],
      haloassist_input_mode: [
        "text_chat",
        "voice_input",
        "form_driven",
        "multimodal",
      ],
      haloassist_integration_type: [
        "halocalc",
        "halofiling",
        "halonet",
        "halovision",
        "halocommand",
        "external_api",
      ],
      haloassist_message_type: [
        "user_message",
        "ai_response",
        "system_message",
        "action_trigger",
        "form_suggestion",
        "error_message",
      ],
      haloassist_user_type: [
        "client",
        "employee",
        "internal_ops",
        "admin",
        "guest",
      ],
      insight_priority: ["low", "medium", "high", "urgent"],
      job_board_type: ["staffing", "internal_hr", "both"],
      job_order_status: [
        "open",
        "in_progress",
        "filled",
        "cancelled",
        "on_hold",
      ],
      job_visibility_type: ["public", "internal", "invite_only"],
      language_option: ["EN", "ES", "BOTH"],
      liability_type: [
        "federal_income",
        "social_security",
        "medicare",
        "futa",
        "suta",
        "state_income",
        "local",
      ],
      measurement_method: ["monthly", "lookback"],
      navigation_permission: ["customize_navigation"],
      onboarding_document_type: [
        "w4",
        "i9",
        "state_tax",
        "handbook",
        "direct_deposit",
        "id_document",
        "custom",
      ],
      onboarding_role: ["client_admin", "onboarding_manager"],
      onboarding_status: [
        "pending",
        "in_progress",
        "completed",
        "approved",
        "rejected",
      ],
      opportunity_stage: [
        "lead",
        "prospect",
        "assessment",
        "proposal_sent",
        "verbal",
        "won",
        "lost",
      ],
      pay_category: [
        "earnings",
        "reimbursement",
        "fringe_benefit",
        "deduction",
        "other",
      ],
      peo_setup_type: ["peo", "aso", "lms", "payroll_only"],
      permission_action: [
        "read",
        "write",
        "delete",
        "admin",
        "approve",
        "override",
        "api_access",
      ],
      pop_status: ["pending", "active", "suspended", "terminated"],
      pop_tier: ["mention", "growth", "senior_pop"],
      probation_outcome: ["pass", "extend", "fail", "pending"],
      product_line: ["HRO", "LMS", "Staffing", "Consulting", "PEO", "Other"],
      propgen_billing_type: [
        "flat_fee_onetime",
        "flat_fee_recurring",
        "per_employee",
        "pepm",
        "percentage_payroll",
      ],
      proposal_status: ["draft", "under_review", "sent", "signed", "rejected"],
      quiz_attempt_status: ["in_progress", "completed", "passed", "failed"],
      quiz_question_type: [
        "multiple_choice_single",
        "multiple_choice_multiple",
        "true_false",
        "fill_in_blank",
        "drag_drop",
        "scenario_based",
      ],
      rating_method: ["composite", "age_banded", "custom"],
      review_status: [
        "draft",
        "active",
        "pending_review",
        "completed",
        "overdue",
        "cancelled",
      ],
      sales_lifecycle_stage: [
        "prospect",
        "contacted",
        "engaged",
        "proposal_sent",
        "in_onboarding",
        "active_paying_client",
        "dormant_churned",
        "lead_new",
        "prospect_qualified",
        "client_active",
        "client_inactive",
        "disqualified_no_fit",
      ],
      section_status: [
        "not_started",
        "in_progress",
        "completed",
        "locked",
        "requires_approval",
      ],
      simulation_status: [
        "draft",
        "running",
        "completed",
        "failed",
        "cancelled",
      ],
      staffing_role: ["pop", "recruiter", "admin"],
      task_priority: ["low", "medium", "high", "urgent"],
      task_status: ["to_do", "in_progress", "completed", "cancelled"],
      time_collection_method: [
        "web",
        "mobile",
        "swipe_clock",
        "manual",
        "biometric",
      ],
      training_type: [
        "Harassment",
        "SB553",
        "AML",
        "Safety",
        "Cybersecurity",
        "Manager_Training",
        "Compliance",
      ],
      user_language: ["en", "es"],
      vault_access_level: ["read", "write", "admin", "audit"],
      vault_document_type: [
        "pay_stub",
        "w2",
        "tax_form",
        "receipt",
        "audit_report",
        "compliance_doc",
        "payroll_register",
      ],
      vault_retention_status: [
        "active",
        "archived",
        "pending_destruction",
        "destroyed",
      ],
      visualization_type: [
        "line_chart",
        "bar_chart",
        "heat_map",
        "scatter_plot",
        "distribution",
        "trend_analysis",
      ],
      wiki_category: [
        "compliance",
        "conflict",
        "documentation",
        "safety",
        "leadership",
        "general",
      ],
    },
  },
} as const
